#include "../src/include/vcui-view-layout-hd.h"

#define BUTTON_STATE_ENABLED 0
#define BUTTON_STATE_DISABLED 1

#define BG_IMG_PATH "./bg"
#define ICON_IMG_PATH "./icon"

#define STYLE_CALL_SIX_BUTTON(grp_name, img1, img2, value, vis_value, op, r1, g1, b1, op1, r3, g3, b3, op3) \
	group { name: "elm/button/base/"grp_name; \
		images { \
			image: img1 COMP; \
			image: img2 COMP; \
		} \
		parts { \
			part { name: "button_image"; \
				type: RECT; \
				mouse_events: value; \
				scale: 1; \
				description {state: "default" 0.0; \
					color: COLOR_BG_ALPHA; \
				} \
				description { state: "clicked" 0.0; \
					inherit: "default" 0.0; \
				} \
				description { state: "disabled" 0.0; \
					inherit: "default" 0.0; \
				} \
				description { state: "focused" 0.0; \
					inherit: "default" 0.0; \
				} \
			} \
			part { name: "elm.swallow.content"; \
				description { state: "default" 0.0; \
					visible: vis_value; \
					image { \
						normal: img1; \
					} \
					align: 0.5 0.5; \
					aspect: 0.5 1.0; \
					rel1.relative: 0.0 (22/168); \
					rel2.relative: 1.0 (102/168); \
					aspect_preference: VERTICAL; \
				} \
				description { state: "visible" 0.0; \
					inherit: "default" 0.0; \
					fixed: 1 0; \
					visible: 1; \
					aspect: 1.0 1.0; \
				} \
				description { state: "clicked" 0.0; \
					inherit: "default" 0.0; \
					fixed: 1 0; \
					visible: 1; \
					aspect: 1.0 1.0; \
					image { \
						normal: img2; \
					} \
				} \
				description { state: "icononly" 0.0; \
					inherit: "default" 0.0; \
					fixed: 0 0; \
					visible: 1; \
					align: 0.5 0.5; \
					aspect: 1.0 1.0; \
					rel2.relative: 1.0 (146/168); \
				} \
			} \
			part { name: "elm.text"; \
				type: TEXT; \
				effect: SOFT_SHADOW; \
				mouse_events: 0; \
				scale: 1; \
				description { state: "default" 0.0; \
					visible: 0; \
					fixed: 1 1; \
					rel1.to_y: "elm.swallow.content"; \
					rel1.relative: 0.5 (108/168); \
					rel2.relative: 0.5 (146/168); \
					color: 255 255 255 op; \
					color2: 0 0 0 102; \
					color3: 0 0 0 255; \
					text { \
						font: FONT_SLP_Roman; \
						text_class: TEXT_CLASS_SLP_ROMAN; \
						size: 36; \
						min: 1 1; \
						align: 0.5 0.5; \
					} \
				} \
				description { state: "visible" 0.0; \
					inherit: "default" 0.0; \
					visible: 1; \
				} \
				description { state: "clicked" 0.0; \
					inherit: "default" 0.0; \
					visible: 1; \
					min: 1 1; \
				} \
				description { state: "disabled" 0.0; \
					inherit: "default" 0.0; \
					color: r1 g1 b1 op1; \
					color3: r3 g3 b3 op3; \
				} \
				description { state: "disabled_visible" 0.0; \
					inherit: "default" 0.0; \
					color: r1 g1 b1 op1; \
					color3: r3 g3 b3 op3; \
					visible: 1; \
				} \
				description { state: "focused" 0.0; \
					inherit: "default" 0.0; \
					visible: 1; \
					min: 1 1; \
				} \
			} \
			part { name: "over2"; \
				type: RECT; \
				mouse_events: 1; \
				repeat_events: 1; \
				ignore_flags: ON_HOLD; \
				description { state: "default" 0.0; \
					color: 0 0 0 0; \
					rel1 { relative: 0.25 0.1; } \
					rel2 { relative: 0.75 0.9; } \
				} \
				description { state: "disabled" 0.0; \
					inherit: "default" 0.0; \
					visible: 0; \
				} \
			} \
			part { name: "over3"; \
				type: RECT; \
				mouse_events: 1; \
				repeat_events: 1; \
				description { state: "default" 0.0; \
					color: 0 0 0 0; \
					rel1 { relative: 0.25 0.1; } \
					rel2 { relative: 0.75 0.9; } \
				} \
				description { state: "clicked" 0.0; \
					inherit: "default" 0.0; \
					visible: 1; \
				} \
			} \
			part { name: "disabler"; \
				type: RECT; \
				description { state: "default" 0.0; \
					visible: 0; \
				} \
				description { state: "disabled" 0.0; \
					inherit: "default" 0.0; \
					visible: 1; \
				} \
			} \
		} \
		programs { \
			program { name: "button_click"; \
				signal: "mouse,down,1"; \
				source: "over2"; \
				action: SIGNAL_EMIT "elm,action,press" ""; \
				after: "button_click_anim"; \
			} \
			program { name: "button_click_anim"; \
				action: STATE_SET "clicked" 0.0; \
				target: "button_image"; \
				target: "elm.text"; \
				target: "elm.swallow.content"; \
			} \
			program { name: "button_unclick"; \
				signal: "mouse,up,1"; \
				source: "over2"; \
				action: SIGNAL_EMIT "elm,action,unpress" ""; \
				after: "button_unclick_anim"; \
			} \
			program { name: "button_unclick_anim"; \
				action: STATE_SET "default" 0.0; \
				target: "button_image"; \
				target: "elm.swallow.content"; \
				action: STATE_SET "visible" 0.0; \
				target: "elm.text"; \
			} \
			program { name: "button_mouseout_clicked"; \
				signal: "mouse,out"; \
				source: "over2"; \
				script { \
					new st[31]; \
					new Float:vl; \
					get_state(PART:"elm.text", st, 30, vl); \
					if (!strcmp(st, "clicked")) \
					{ \
						set_state(PART:"elm.text", "visible", 0.0); \
						set_state(PART:"button_image", "visible", 0.0); \
					} \
				} \
			} \
			program { name: "button_click2"; \
				signal: "mouse,down,1"; \
				source: "over3"; \
				action: STATE_SET "clicked" 0.0; \
				target: "over3"; \
			} \
			program { name: "button_unclick2"; \
				signal: "mouse,up,1"; \
				source: "over3"; \
				action: STATE_SET "default" 0.0; \
				target: "over3"; \
			} \
			program { name: "button_unclick3"; \
				signal: "mouse,up,1"; \
				source: "over2"; \
				action: SIGNAL_EMIT "elm,action,click" ""; \
			} \
			program { name: "text_show"; \
				signal: "elm,state,text,visible"; \
				source: "elm"; \
				script { \
					new st[31]; \
					new Float:vl; \
					get_state(PART:"elm.swallow.content", st, 30, vl); \
					if (!strcmp(st, "icononly")) \
						set_state(PART:"elm.swallow.content", "visible", 0.0); \
					set_state(PART:"elm.text", "visible", 0.0); \
				} \
			} \
			program { name: "text_hide"; \
				signal: "elm,state,text,hidden"; \
				source: "elm"; \
				script { \
					new st[31]; \
					new Float:vl; \
					get_state(PART:"elm.swallow.content", st, 30, vl); \
					if (!strcmp(st, "visible")) \
						set_state(PART:"elm.swallow.content", "icononly", 0.0); \
					set_state(PART:"elm.text", "default", 0.0); \
				} \
			} \
			program { name: "icon_show"; \
				signal: "elm,state,icon,visible"; \
				source: "elm"; \
				script { \
					new st[31]; \
					new Float:vl; \
					get_state(PART:"elm.text", st, 30, vl); \
					if (!strcmp(st, "visible")) \
						set_state(PART:"elm.swallow.content", "visible", 0.0); \
					else \
						set_state(PART:"elm.swallow.content", "icononly", 0.0); \
				} \
			} \
			program { name: "icon_hide"; \
				signal: "elm,state,icon,hidden"; \
				source: "elm"; \
				action: STATE_SET "default" 0.0; \
				target: "elm.swallow.content"; \
			} \
			program { name: "disable"; \
				signal: "elm,state,disabled"; \
				source: "elm"; \
				action: STATE_SET "disabled" 0.0; \
				target: "button_image"; \
				target: "over2"; \
				target: "disabler"; \
				after: "disable_text"; \
			} \
			program { name: "disable_text"; \
				script { \
					new st[31]; \
					new Float:vl; \
					get_state(PART:"elm.text", st, 30, vl); \
					if (!strcmp(st, "visible")) \
						set_state(PART:"elm.text", "disabled_visible", 0.0); \
					else \
						set_state(PART:"elm.text", "disabled", 0.0); \
				} \
			} \
			program { name: "enable"; \
				signal: "elm,state,enabled"; \
				source: "elm"; \
				action: STATE_SET "default" 0.0; \
				target: "button_image"; \
				target: "over2"; \
				target: "disabler"; \
				after: "enable_text"; \
			} \
			program { name: "enable_text"; \
				script { \
					new st[31]; \
					new Float:vl; \
					get_state(PART:"elm.text", st, 30, vl); \
					if (!strcmp(st, "disabled_visible")) \
						set_state(PART:"elm.text", "visible", 0.0); \
					else \
						set_state(PART:"elm.text", "default", 0.0); \
				} \
			} \
			program { name: "focused"; \
				signal: "elm,action,focus"; \
				source: "elm"; \
				action: STATE_SET "focused" 0.0; \
				target: "button_image"; \
				target: "elm.text"; \
			} \
			program { name: "unfocused"; \
				signal: "elm,action,unfocus"; \
				source: "elm"; \
				action: STATE_SET "default" 0.0; \
				target: "button_image"; \
				action: STATE_SET "visible" 0.0; \
				target: "elm.text"; \
			} \
		} \
	}

#define STYLE_CALL_END_BUTTON(grp_name, img1, img2) \
	group { name: "elm/button/base/"grp_name; \
		images { \
			image: BG_IMG_PATH"/vc_button_callend_press.png" COMP; \
			image: img1 COMP; \
			image: img2 COMP; \
		} \
		parts { \
			part { name: "button_image"; \
				mouse_events: 0; \
				scale: 1; \
				description { \
					state: "default" 0.0; \
					visible: 0; \
				} \
				description { state: "clicked" 0.0; \
					visible: 1; \
					image { \
						normal: BG_IMG_PATH"/vc_button_callend_press.png"; \
						border: 9 9 69 69; \
						border_scale: 1; \
					} \
				} \
				description { state: "visible" 0.0; \
					inherit: "default" 0.0; \
					visible: 0; \
				} \
				description { state: "disabled" 0.0; \
					inherit: "default" 0.0; \
				} \
				description { state: "focused" 0.0; \
					inherit: "default" 0.0; \
				} \
			} \
			part { name: "elm.swallow.content"; \
				description { state: "default" 0.0; \
					visible: 1; \
					align: 0.5 0.5; \
					aspect: 0.5 1.0; \
					rel1.relative: 0.0 0.24; \
					rel2.relative: 1.0 0.60; \
					aspect_preference: VERTICAL; \
					image { \
						normal: img1; \
						} \
				} \
				description { state: "visible" 0.0; \
					inherit: "default" 0.0; \
					fixed: 1 0; \
					visible: 1; \
					aspect: 1.0 1.0; \
				} \
				description { state: "clicked" 0.0; \
					inherit: "default" 0.0; \
					fixed: 1 0; \
					visible: 1; \
					aspect: 1.0 1.0; \
					image { \
						normal: img2; \
						} \
				} \
				description { state: "icononly" 0.0; \
					inherit: "default" 0.0; \
					fixed: 0 0; \
					visible: 1; \
					align: 0.5 0.5; \
					aspect: 1.0 1.0; \
					rel2.relative: 1.0 1.0; \
				} \
			} \
			part { name: "elm.text"; \
				type: TEXT; \
				effect: SOFT_SHADOW; \
				mouse_events: 0; \
				scale: 1; \
				description { state: "default" 0.0; \
					visible: 0; \
					fixed: 1 1; \
					rel1.relative: 0.5 0.63; \
					rel2.relative: 0.5 0.81; \
					color: 255 255 255 255; \
					color2: 0 0 0 102; \
					color3: 0 0 0 255; \
					text { \
						font: FONT_SLP_Roman; \
						text_class: TEXT_CLASS_SLP_ROMAN; \
						size: 36; \
						min: 1 1; \
						align: 0.5 0.5; \
					} \
				} \
				description { state: "visible" 0.0; \
					inherit: "default" 0.0; \
					visible: 1; \
				} \
				description { state: "clicked" 0.0; \
					inherit: "default" 0.0; \
					visible: 1; \
					min: 1 1; \
					color: 255 255 255 255; \
					color2: 0 0 0 102; \
					color3: 0 0 0 255; \
				} \
				description { state: "disabled" 0.0; \
					inherit: "default" 0.0; \
					color: 0 0 0 128; \
					color3: 0 0 0 0; \
				} \
				description { state: "disabled_visible" 0.0; \
					inherit: "default" 0.0; \
					color: 0 0 0 128; \
					color3: 0 0 0 0; \
					visible: 1; \
				}  \
				description { state: "focused" 0.0; \
					inherit: "default" 0.0; \
					visible: 1; \
					min: 1 1; \
					color: 255 255 255 255; \
					color2: 0 0 0 102; \
					color3: 0 0 0 255; \
				} \
			} \
			part { name: "over2"; \
				type: RECT; \
				mouse_events: 1; \
				repeat_events: 1; \
				ignore_flags: ON_HOLD; \
				description { state: "default" 0.0; \
					color: 0 0 0 0; \
					rel1 { relative: 0.25 0.1; } \
					rel2 { relative: 0.75 0.9; } \
				} \
				description { state: "disabled" 0.0; \
					inherit: "default" 0.0; \
					visible: 0; \
				} \
			} \
			part { name: "over3"; \
				type: RECT; \
				mouse_events: 1; \
				repeat_events: 1; \
				description { state: "default" 0.0; \
					color: 0 0 0 0; \
					rel1 { relative: 0.25 0.1; } \
					rel2 { relative: 0.75 0.9; } \
				} \
				description { state: "clicked" 0.0; \
					inherit: "default" 0.0; \
					visible: 1; \
				} \
			} \
			part { name: "disabler"; \
				type: RECT; \
				description { state: "default" 0.0; \
					visible: 0; \
				} \
				description { state: "disabled" 0.0; \
					inherit: "default" 0.0; \
					visible: 1; \
				} \
			} \
		} \
		programs { \
			program { name: "button_click"; \
				signal: "mouse,down,1"; \
				source: "over2"; \
				action: SIGNAL_EMIT "elm,action,press" ""; \
				after: "button_click_anim"; \
			} \
			program { name: "button_click_anim"; \
				action: STATE_SET "clicked" 0.0; \
				target: "button_image"; \
				target: "elm.text"; \
				target: "elm.swallow.content"; \
			} \
			program { name: "button_unclick"; \
				signal: "mouse,up,1"; \
				source: "over2"; \
				action: SIGNAL_EMIT "elm,action,unpress" ""; \
				script { \
				emit ( "animation", "over2"); \
				} \
			} \
			program { \
				name: "button_animation"; \
				signal: "animation"; \
				source: "over2"; \
				action: STATE_SET "default" 0.0; \
				transition: SINUSOIDAL 0.1; \
				target: "button_image"; \
				after: "button_unclick_anim"; \
			} \
			program { \
				name: "button_unclick_anim"; \
				action: STATE_SET "default" 0.0; \
				target: "elm.swallow.content"; \
				action: STATE_SET "visible" 0.0; \
				target: "elm.text"; \
			} \
			program { name: "button_mouseout_clicked"; \
				signal: "mouse,out"; \
				source: "over2"; \
				script { \
					new st[31]; \
					new Float:vl; \
					get_state(PART:"elm.text", st, 30, vl); \
					if (!strcmp(st, "clicked")) \
					{ \
						set_state(PART:"elm.text", "visible", 0.0); \
						set_state(PART:"button_image", "visible", 0.0); \
					} \
				} \
			} \
			program { name: "button_click2"; \
				signal: "mouse,down,1"; \
				source: "over3"; \
				action: STATE_SET "clicked" 0.0; \
				target: "over3"; \
			} \
			program { name: "button_unclick2"; \
				signal: "mouse,up,1"; \
				source: "over3"; \
				action: STATE_SET "default" 0.0; \
				target: "over3"; \
			} \
			program { name: "button_unclick3"; \
				signal: "mouse,up,1"; \
				source: "over2"; \
				action: SIGNAL_EMIT "elm,action,click" ""; \
			} \
			program { name: "text_show"; \
				signal: "elm,state,text,visible"; \
				source: "elm"; \
				script { \
					new st[31]; \
					new Float:vl; \
					get_state(PART:"elm.swallow.content", st, 30, vl); \
					if (!strcmp(st, "icononly")) \
						set_state(PART:"elm.swallow.content", "visible", 0.0); \
					set_state(PART:"elm.text", "visible", 0.0); \
				} \
			} \
			program { name: "text_hide"; \
				signal: "elm,state,text,hidden"; \
				source: "elm"; \
				script { \
					new st[31]; \
					new Float:vl; \
					get_state(PART:"elm.swallow.content", st, 30, vl); \
					if (!strcmp(st, "visible")) \
						set_state(PART:"elm.swallow.content", "icononly", 0.0); \
					set_state(PART:"elm.text", "default", 0.0); \
				} \
			} \
			program { name: "icon_show"; \
				signal: "elm,state,icon,visible"; \
				source: "elm"; \
				script { \
					new st[31]; \
					new Float:vl; \
					get_state(PART:"elm.text", st, 30, vl); \
					if (!strcmp(st, "visible")) \
						set_state(PART:"elm.swallow.content", "visible", 0.0); \
					else \
						set_state(PART:"elm.swallow.content", "icononly", 0.0); \
				} \
			} \
			program { name: "icon_hide"; \
				signal: "elm,state,icon,hidden"; \
				source: "elm"; \
				action: STATE_SET "default" 0.0; \
				target: "elm.swallow.content"; \
			} \
			program { name: "disable"; \
				signal: "elm,state,disabled"; \
				source: "elm"; \
				action: STATE_SET "disabled" 0.0; \
				target: "button_image"; \
				target: "over2"; \
				target: "disabler"; \
				after: "disable_text"; \
			} \
			program { name: "disable_text"; \
				script { \
					new st[31]; \
					new Float:vl; \
					get_state(PART:"elm.text", st, 30, vl); \
					if (!strcmp(st, "visible")) \
						set_state(PART:"elm.text", "disabled_visible", 0.0); \
					else \
						set_state(PART:"elm.text", "disabled", 0.0); \
				} \
			} \
			program { name: "enable";  \
				signal: "elm,state,enabled"; \
				source: "elm"; \
				action: STATE_SET "default" 0.0; \
				target: "button_image"; \
				target: "over2"; \
				target: "disabler"; \
				after: "enable_text"; \
			} \
			program { name: "enable_text"; \
				script { \
					new st[31]; \
					new Float:vl; \
					get_state(PART:"elm.text", st, 30, vl); \
					if (!strcmp(st, "disabled_visible")) \
						set_state(PART:"elm.text", "visible", 0.0); \
					else \
						set_state(PART:"elm.text", "default", 0.0); \
				} \
			} \
			program { name: "focused"; \
				signal: "elm,action,focus"; \
				source: "elm"; \
				action: STATE_SET "focused" 0.0; \
				target: "elm.text"; \
				action: STATE_SET "focused" 0.0; \
				transition: SINUSOIDAL 0.1; \
				target: "button_image"; \
			} \
			program { name: "unfocused"; \
				signal: "elm,action,unfocus"; \
				source: "elm"; \
				action: STATE_SET "default" 0.0; \
				target: "button_image"; \
				action: STATE_SET "visible" 0.0; \
				target: "elm.text"; \
			}  \
		} \
	}
	
#define STYLE_HOLD_SWAP_BUTTON(grp_name, img1, img2, rel1x, rel1y, rel2x, rel2y) \
	group { name: "elm/button/base/"grp_name; \
		images { \
			image: img1 COMP; \
			image: img2 COMP; \
		} \
		parts { \
			part { name: "button_image"; \
				mouse_events: 1; \
				scale: 1;\
				description { \
					state: "default" 0.0; \
					image.normal: img1; \
				} \
				description { \
					state: "clicked" 0.0; \
					image.normal: img2; \
				} \
			} \
			part { name: "elm.swallow.content"; \
				type: SWALLOW; \
				description { state: "default" 0.0; \
					visible: 1; \
					align: 0.5 0.5; \
					aspect: 0.5 1.0; \
					rel1.relative: rel1x rel1y; \
					rel2.relative: rel2x rel2y; \
					aspect_preference: VERTICAL; \
				} \
				description { state: "visible" 0.0; \
					inherit: "default" 0.0; \
					fixed: 1 0; \
					visible: 1; \
					aspect: 1.0 1.0; \
				} \
				description { state: "icononly" 0.0; \
					inherit: "default" 0.0; \
					fixed: 0 0; \
					visible: 1; \
					align: 0.5 0.5; \
					aspect: 1.0 1.0; \
				} \
			} \
			part { name: "over2"; \
				type: RECT; \
				mouse_events: 1; \
				repeat_events: 1; \
				ignore_flags: ON_HOLD; \
				description { state: "default" 0.0; \
					color: 0 0 0 0; \
				} \
				description { state: "disabled" 0.0; \
					inherit: "default" 0.0; \
					visible: 0; \
				} \
			} \
			part { name: "over3"; \
				type: RECT; \
				mouse_events: 1; \
				repeat_events: 1; \
				description { state: "default" 0.0; \
					color: 0 0 0 0; \
				} \
				description { state: "clicked" 0.0; \
					inherit: "default" 0.0; \
					visible: 1; \
				} \
			} \
			part { name: "disabler"; \
				type: RECT; \
				description { state: "default" 0.0; \
					visible: 0; \
				} \
				description { state: "disabled" 0.0; \
					inherit: "default" 0.0; \
					visible: 1; \
				} \
			} \
		} \
		programs { \
			program { name: "button_click"; \
				signal: "mouse,down,1"; \
				source: "over2"; \
				action: SIGNAL_EMIT "elm,action,press" ""; \
				after: "button_click_anim"; \
			} \
			program { name: "button_click_anim"; \
				action: STATE_SET "clicked" 0.0; \
				target: "button_image"; \
			} \
			program { name: "button_unclick"; \
				signal: "mouse,up,1"; \
				source: "over2"; \
				action: SIGNAL_EMIT "elm,action,unpress" ""; \
				after: "button_unclick_anim"; \
			} \
			program { name: "button_unclick_anim"; \
				action: STATE_SET "default" 0.0; \
				target: "button_image"; \
			} \
			program { name: "button_mouseout_clicked"; \
				signal: "mouse,out"; \
				source: "over2"; \
				script { \
					new st[31]; \
					new Float:vl; \
					get_state(PART:"elm.swallow.content", st, 30, vl); \
					if (!strcmp(st, "clicked")) \
					{ \
						set_state(PART:"button_image", "visible", 0.0); \
					} \
				} \
			} \
			program { name: "button_click2"; \
				signal: "mouse,down,1"; \
				source: "over3"; \
				action: STATE_SET "clicked" 0.0; \
				target: "over3"; \
			} \
			program { name: "button_unclick2"; \
				signal: "mouse,up,1"; \
				source: "over3"; \
				action: STATE_SET "default" 0.0; \
				target: "over3"; \
			} \
			program { name: "button_unclick3"; \
				signal: "mouse,up,1"; \
				source: "over2"; \
				action: SIGNAL_EMIT "elm,action,click" ""; \
			} \
			program { name: "text_show"; \
				signal: "elm,state,text,visible"; \
				source: "elm"; \
				script { \
					new st[31]; \
					new Float:vl; \
					get_state(PART:"elm.swallow.content", st, 30, vl); \
					if (!strcmp(st, "icononly")) \
						set_state(PART:"elm.swallow.content", "visible", 0.0); \
				} \
			} \
			program { name: "text_hide"; \
				signal: "elm,state,text,hidden"; \
				source: "elm"; \
				script { \
					new st[31]; \
					new Float:vl; \
					get_state(PART:"elm.swallow.content", st, 30, vl); \
					if (!strcmp(st, "visible")) \
						set_state(PART:"elm.swallow.content", "icononly", 0.0); \
				} \
			} \
			program { name: "icon_show"; \
				signal: "elm,state,icon,visible"; \
				source: "elm"; \
				script { \
					new st[31]; \
					new Float:vl; \
					get_state(PART:"elm.swallow.content", st, 30, vl); \
					if (!strcmp(st, "visible")) \
						set_state(PART:"elm.swallow.content", "visible", 0.0); \
					else \
						set_state(PART:"elm.swallow.content", "icononly", 0.0); \
				} \
			} \
			program { name: "icon_hide"; \
				signal: "elm,state,icon,hidden"; \
				source: "elm"; \
				action: STATE_SET "default" 0.0; \
				target: "elm.swallow.content"; \
			} \
			program { name: "disable"; \
				signal: "elm,state,disabled"; \
				source: "elm"; \
				action: STATE_SET "disabled" 0.0; \
				target: "button_image"; \
				target: "over2"; \
				target: "disabler"; \
			} \
			program { name: "enable"; \
				signal: "elm,state,enabled"; \
				source: "elm"; \
				action: STATE_SET "default" 0.0; \
				target: "button_image"; \
				target: "over2"; \
				target: "disabler"; \
			} \
			program { name: "focused"; \
				signal: "elm,action,focus"; \
				source: "elm"; \
				action: STATE_SET "focused" 0.0; \
				target: "button_image"; \
			} \
			program { name: "unfocused"; \
				signal: "elm,action,unfocus"; \
				source: "elm"; \
				action: STATE_SET "default" 0.0; \
				target: "button_image"; \
			} \
		} \
	}
	
#define STYLE_CALL_TEXT(grp_name, img1, img2, min_x, min_y, border_L, border_T, g1, b1, sz) \
	group { name: "elm/button/base/"grp_name; \
		images { \
			image: img1 COMP; \
			image: img2 COMP; \
		} \
		parts { \
			part { name: "button_image"; \
				mouse_events: 1; \
				scale: 1; \
				effect: SOFT_SHADOW; \
				description { state: "default" 0.0; \
					min: min_x min_y; \
					image { \
						normal: img1; \
						border: border_L border_T 0 0; \
						border_scale: 1; \
					} \
				} \
				description { state: "clicked" 0.0; \
					min: min_x min_y; \
					image { \
						normal: img2; \
						border: border_L border_T 0 0; \
						border_scale: 1; \
					} \
				} \
				description { state: "disabled" 0.0; \
					inherit: "clicked" 0.0; \
				} \
				description { state: "focused" 0.0; \
					inherit: "default" 0.0; \
				} \
			} \
			part {	name: "elm.text"; \
				type: TEXT; \
				effect: SHADOW; \
				mouse_events: 0; \
				scale: 1; \
				description { \
					state: "default" 0.0; \
					visible: 0; \
					fixed: 1 1; \
					align: 0.5 0.5; \
					color: 255 g1 b1 255; \
					color2: 0 0 0 102; \
					color3: 0 0 0 255; \
					text { \
						font: FONT_SLP_Regular; \
						text_class: TEXT_CLASS_SLP_REGULAR; \
						size: sz; \
						min: 0 0; \
						align: 0.5 0.5; \
					} \
				} \
				description { state: "visible" 0.0; \
					inherit: "default" 0.0; \
					visible: 1; \
					min: 1 1; \
				} \
				description { state: "clicked" 0.0; \
					inherit: "default" 0.0; \
					visible: 1; \
					min: 1 1; \
					color: 255 255 255 255; \
					color2: 0 0 0 102; \
					color3: 0 0 0 255; \
				} \
				description { state: "disabled" 0.0; \
					inherit: "default" 0.0; \
					color: 0 0 0 128; \
					color3: 0 0 0 0; \
				} \
				description { state: "disabled_visible" 0.0; \
					inherit: "default" 0.0; \
					color: 0 0 0 128; \
					color3: 0 0 0 0; \
					visible: 1; \
					min: 1 1; \
				} \
				description { state: "focused" 0.0; \
					inherit: "default" 0.0; \
					visible: 1; \
					min: 1 1; \
					color: 255 255 255 255; \
				} \
			} \
			part { name: "over1"; \
				mouse_events: 0; \
				description { state: "default" 0.0; \
					rel2.relative: 1.0 0.5; \
				} \
				description { state: "disabled" 0.0; \
					inherit: "default" 0.0; \
				} \
			} \
			part { name: "over2"; \
				mouse_events: 1; \
				repeat_events: 1; \
				ignore_flags: ON_HOLD; \
				description { state: "default" 0.0; \
				} \
				description { state: "disabled" 0.0; \
					inherit: "default" 0.0; \
					visible: 0; \
				} \
			} \
			part { name: "over3"; \
				mouse_events: 1; \
				repeat_events: 1; \
				description { state: "default" 0.0; \
					color: 255 255 255 0; \
				} \
				description { state: "clicked" 0.0; \
					inherit: "default" 0.0; \
					visible: 1; \
					color: 255 255 255 0; \
				} \
			} \
			part { name: "disabler"; \
				type: RECT; \
				description { state: "default" 0.0; \
					color: 0 0 0 0; \
					visible: 0; \
				} \
				description { state: "disabled" 0.0; \
					inherit: "default" 0.0; \
					visible: 1; \
				} \
			} \
		} \
		programs { \
			program { name: "button_click"; \
				signal: "mouse,down,1"; \
				source: "over2"; \
				action: SIGNAL_EMIT "elm,action,press" ""; \
				after: "button_click_anim"; \
			} \
			program { name: "button_click_anim"; \
				action: STATE_SET "clicked" 0.0; \
				target: "button_image"; \
				target: "elm.text"; \
			} \
			program { name: "button_unclick"; \
				signal: "mouse,up,1"; \
				source: "over2"; \
				action: SIGNAL_EMIT "elm,action,unpress" ""; \
				after: "button_unclick_anim"; \
			} \
			program { name: "button_unclick_anim"; \
				action: STATE_SET "default" 0.0; \
				target: "button_image"; \
				action: STATE_SET "visible" 0.0; \
				target: "elm.text"; \
			} \
			program { name: "button_mouseout_clicked"; \
				signal: "mouse,out"; \
				source: "over2"; \
				script { \
					new st[31]; \
					new Float:vl; \
					get_state(PART:"elm.text", st, 30, vl); \
					if (!strcmp(st, "clicked")) \
					{ \
						set_state(PART:"elm.text", "visible", 0.0); \
						set_state(PART:"button_image", "visible", 0.0); \
					} \
				} \
			} \
			program { name: "button_click2"; \
				signal: "mouse,down,1"; \
				source: "over3"; \
				action: STATE_SET "clicked" 0.0; \
				target: "over3"; \
			} \
			program { name: "button_unclick2"; \
				signal: "mouse,up,1"; \
				source: "over3"; \
				action: STATE_SET "default" 0.0; \
				target: "over3"; \
			} \
			program { name: "button_unclick3"; \
				signal: "mouse,up,1"; \
				source: "over2"; \
				action: SIGNAL_EMIT "elm,action,click" ""; \
			} \
			program { name: "text_show"; \
				signal: "elm,state,text,visible"; \
				source: "elm"; \
				action: STATE_SET "visible" 0.0; \
				target: "elm.text"; \
			} \
			program { name: "text_hide"; \
				signal: "elm,state,text,hidden"; \
				source: "elm"; \
				action: STATE_SET "default" 0.0; \
				target: "elm.text"; \
			} \
			program { name: "disable"; \
				signal: "elm,state,disabled"; \
				source: "elm"; \
				action: STATE_SET "disabled" 0.0; \
				target: "button_image"; \
				target: "over1"; \
				target: "over2"; \
				target: "disabler"; \
				after: "disable_text"; \
			} \
			program { name: "disable_text"; \
				script { \
					new st[31]; \
					new Float:vl; \
					get_state(PART:"elm.text", st, 30, vl); \
					if (!strcmp(st, "visible")) \
					set_state(PART:"elm.text", "disabled_visible", 0.0); \
					else \
					set_state(PART:"elm.text", "disabled", 0.0); \
				} \
			} \
			program { name: "enable"; \
				signal: "elm,state,enabled"; \
				source: "elm"; \
				action: STATE_SET "default" 0.0; \
				target: "button_image"; \
				target: "over1"; \
				target: "over2"; \
				target: "disabler"; \
				after: "enable_text"; \
			} \
			program { name: "enable_text"; \
				script { \
					new st[31]; \
					new Float:vl; \
					get_state(PART:"elm.text", st, 30, vl); \
					if (!strcmp(st, "disabled_visible")) \
					set_state(PART:"elm.text", "visible", 0.0); \
					else \
					set_state(PART:"elm.text", "default", 0.0); \
				} \
			} \
			program { name: "focused"; \
				signal: "elm,action,focus"; \
				source: "elm"; \
				action: STATE_SET "focused" 0.0; \
				target: "button_image"; \
				target: "elm.text"; \
			} \
			program { name: "unfocused"; \
				signal: "elm,action,unfocus"; \
				source: "elm"; \
				action: STATE_SET "default" 0.0; \
				target: "button_image"; \
				action: STATE_SET "visible" 0.0; \
				target: "elm.text"; \
			} \
		} \
	}

#define GENLIST_PROGRAMS \
	program { name: "go_active"; \
		signal: "elm,state,selected"; \
		source: "elm"; \
		action: STATE_SET "selected" 0.0; \
		target: "bg_image"; \
		target: "elm.text"; \
	} \
	program { name: "go_passive"; \
		signal: "elm,state,unselected"; \
		source: "elm"; \
		action: STATE_SET "default" 0.0; \
		target: "bg_image"; \
		target: "elm.text"; \
		transition: LINEAR 0.1; \
	} \
	program { name: "go_disabled"; \
		signal: "elm,state,disabled"; \
		source: "elm"; \
		action: STATE_SET "disabled" 0.0; \
		target: "disclip"; \
	} \
	program { name: "go_enabled"; \
		signal: "elm,state,enabled"; \
		source: "elm"; \
		action: STATE_SET "default" 0.0; \
		target: "disclip"; \
	}

#define STYLE_CALL_MULTILIST_BUTTON(grp_name, img1, img2, min_x, min_y, max_x, max_y) \
	group { name: "elm/button/base/"grp_name; \
		images { \
			image: img1 COMP; \
			image: img2 COMP; \
		} \
		parts { \
			part { name: "button_image"; \
				mouse_events: 1; \
				scale: 1; \
				description { state: "default" 0.0; \
					min: min_x min_y; \
					max: max_x max_y; \
					image { \
						normal: img1; \
						border: 5 5 0 0; \
						border_scale: 1; \
					} \
				} \
				description { state: "clicked" 0.0; \
					inherit: "default" 0.0; \
					image { \
						normal: img2; \
						border: 5 5 0 0; \
						border_scale: 1; \
					} \
				} \
				description { state: "disabled" 0.0; \
					inherit: "clicked" 0.0; \
				} \
				description { state: "focused" 0.0; \
					inherit: "default" 0.0; \
				} \
			} \
			part { name: "elm.swallow.content"; \
				type: SWALLOW; \
				mouse_events: 0; \
				scale: 1; \
				description { state: "default" 0.0; \
					min: min_x min_y; \
					max: max_x max_y; \
					fixed: 1 1; \
					visible: 0; \
					rel1 { to: "button_image"; } \
					rel2 { to: "button_image"; } \
					align: 0.5 0.5; \
				} \
				description { state: "visible" 0.0; \
					inherit: "default" 0.0; \
					visible: 1; \
					aspect: 1.0 1.0; \
					aspect_preference: VERTICAL; \
				} \
			} \
			part { name: "over1"; \
				mouse_events: 1; \
				repeat_events: 1; \
				ignore_flags: ON_HOLD; \
				description { state: "default" 0.0; \
				rel1.to: "button_image"; \
				rel2.to: "button_image"; \
				} \
				description { state: "disabled" 0.0; \
					inherit: "default" 0.0; \
					visible: 0; \
				} \
			} \
			part { name: "over2"; \
				mouse_events: 1; \
				repeat_events: 1; \
				description { state: "default" 0.0; \
					color: 255 255 255 0; \
				} \
				description { state: "clicked" 0.0; \
					inherit: "default" 0.0; \
					visible: 1; \
					color: 255 255 255 0; \
				} \
			} \
			part { name: "disabler"; \
				type: RECT; \
				description { state: "default" 0.0; \
					rel1.to: "button_image"; \
					rel2.to: "button_image"; \
					color: 0 0 0 0; \
					visible: 0; \
				} \
				description { state: "disabled" 0.0; \
					inherit: "default" 0.0; \
					visible: 1; \
				} \
			} \
		} \
		programs { \
			program { name: "button_click"; \
				signal: "mouse,down,1"; \
				source: "over1"; \
				action: SIGNAL_EMIT "elm,action,press" ""; \
				after: "button_click_anim"; \
			} \
			program { name: "button_click_anim"; \
				action: STATE_SET "clicked" 0.0; \
				target: "button_image"; \
			} \
			program { name: "button_unclick"; \
				signal: "mouse,up,1"; \
				source: "over1"; \
				action: SIGNAL_EMIT "elm,action,unpress" ""; \
				after: "button_unclick_anim"; \
			} \
			program { name: "button_unclick_anim"; \
				action: STATE_SET "default" 0.0; \
				target: "button_image"; \
			} \
			program { name: "button_mouseout_clicked"; \
				signal: "mouse,out"; \
				source: "over1"; \
				action: STATE_SET "default" 0.0; \
				target: "button_image"; \
			} \
			program { name: "button_click2"; \
				signal: "mouse,down,1"; \
				source: "over2"; \
				action: STATE_SET "clicked" 0.0; \
				target: "over2"; \
			} \
			program { name: "button_unclick2"; \
				signal: "mouse,up,1"; \
				source: "over2"; \
				action: STATE_SET "default" 0.0; \
				target: "over2"; \
				after: "button_unclick3"; \
			} \
			program { name: "button_unclick3"; \
				action: SIGNAL_EMIT "elm,action,click" ""; \
			} \
			program { name: "disable"; \
				signal: "elm,state,disabled"; \
				source: "elm"; \
				action: STATE_SET "disabled" 0.0; \
				target: "button_image"; \
				target: "over1"; \
				target: "disabler"; \
			} \
			program { name: "enable"; \
				signal: "elm,state,enabled"; \
				source: "elm"; \
				action: STATE_SET "default" 0.0; \
				target: "button_image"; \
				target: "over1"; \
				target: "disabler"; \
			} \
			program { name: "icon_show"; \
				signal: "elm,state,icon,visible"; \
				source: "elm"; \
				action: STATE_SET "visible" 0.0; \
				target: "elm.swallow.content"; \
			} \
			program { name: "icon_hide"; \
				signal: "elm,state,icon,hidden"; \
				source: "elm"; \
				action: STATE_SET "default" 0.0; \
				target: "elm.swallow.content"; \
			} \
			program { name: "focused"; \
				signal: "elm,action,focus"; \
				source: "elm"; \
				action: STATE_SET "focused" 0.0; \
				target: "button_image"; \
			} \
			program { name: "unfocused"; \
				signal: "elm,action,unfocus"; \
				source: "elm"; \
				action: STATE_SET "default" 0.0; \
				target: "button_image"; \
			} \
		} \
	}

#define BEAT_GENLIST_PART_BASE( param_item_height ) \
	part { name: "base"; \
		type: RECT; \
		repeat_events: 1; \
		scale: 1; \
		description { state: "default" 0.0; \
			min: 0 param_item_height; \
			color: 0 0 0 24; \
		} \
	}

#define BEAT_GENLIST_PART_BG \
	part { name: "bg"; \
		type: RECT; \
		clip_to: "disclip"; \
		mouse_events: 0; \
		description { state: "default" 0.0; \
			color: 0 0 0 255;\
		} \
	}

#define GENLIST_PART_BG_IMAGE \
	part { name: "bg_image"; \
		type: RECT; \
		clip_to: "disclip"; \
		mouse_events: 0; \
		description { state: "default" 0.0; \
			color: 0 0 0 255; \
		} \
		description { state: "selected" 0.0; \
			inherit: "default" 0.0; \
			color: 0 140 210 255; \
		} \
	}

#define GENLIST_PART_BG_IMAGE_NO_SELECT \
	part { name: "bg_image"; \
		type: RECT; \
		clip_to: "disclip"; \
		mouse_events: 0; \
		description { state: "default" 0.0; \
			color: 199 185 164 0; \
		} \
		description { state: "selected" 0.0; \
			inherit: "default" 0.0; \
		} \
	}

#define BEAT_GENLIST_PART_BOTTOM_LINE \
	part { name: "bottom_line"; \
		type: RECT; \
		clip_to: "disclip"; \
		mouse_events: 0; \
		description { state: "default" 0.0; \
			min: 0 1; \
			fixed: 0 1; \
			visible: 1; \
			color: 255 255 255 255; \
			rel1 { \
				relative: 0.0 1.0; \
				offset: 0 -1; \
			} \
		} \
	}

#define BEAT_GENLIST_PART_PADDING_LEFT( param_padding_size ) \
	part { name: "elm.padding.left"; \
		type: RECT; \
		scale: 1; \
		description { \
			state: "default" 0.0; \
			min: param_padding_size 0; \
			fixed: 1 0; \
			visible: 0; \
			rel2.relative: 0.0 1.0; \
			align: 0.0 0.0; \
		} \
	}

#define BEAT_GENLIST_PART_PADDING_RIGHT( param_padding_size ) \
	part { name: "elm.padding.right"; \
		type: RECT; \
		scale: 1; \
		description { state: "default" 0.0; \
			min: param_padding_size 0; \
			fixed: 1 0; \
			visible: 0; \
			rel1.relative: 1.0 0.0; \
			align: 1.0 0.0; \
		} \
	}

#define BEAT_GENLIST_PART_DISCLIP \
	part { name: "disclip"; \
		type: RECT; \
		description { state: "default" 0.0; \
		} \
		description { state: "disabled" 0.0; \
			inherit: "default" 0.0; \
			color: 255 255 255 64; \
		} \
	}

#define GENLIST_PADDING_10_INC 16
#define GENLIST_HEIGHT_31_INC 49
#define GENLIST_SIZE_30_INC 48
#define GENLIST_FONT_20_INC 32
#define GENLIST_GROUP_BG_COLOR_DEFAULT_INC 0 0 0 120
#define GENLIST_GROUP_BG_COLOR_ALPHA_OFF_INC 15 15 15 255
#define GENLIST_GROUP_PART_BASE_IMAGE_INC
#define GENLIST_GROUP_PART_TEXT_COLOR_INC 255 255 255 255

collections {

////////////// elm/button/base/default -disabled  //////////////////////////////////////////////
//////This is disabled effect for buttons of Six buttons layout and disabled effect is when making MO call////
	STYLE_CALL_SIX_BUTTON("style_call_sixbtn_disabled_add", ICON_IMG_PATH"/vc_add_icon_dim.png", ICON_IMG_PATH"/vc_add_icon_dim.png", 1, 1, 51, 255, 255, 255, 51, 0, 0, 0, 255)
	STYLE_CALL_SIX_BUTTON("style_call_sixbtn_disabled_join", ICON_IMG_PATH"/vc_join_icon_dim.png", ICON_IMG_PATH"/vc_join_icon_dim.png", 1, 1, 51, 255, 255, 255, 51, 0, 0, 0, 255)
	STYLE_CALL_SIX_BUTTON("style_call_sixbtn_disabled_keypad", ICON_IMG_PATH"/vc_keypad_icon_dim.png", ICON_IMG_PATH"/vc_keypad_icon_dim.png", 1, 1, 51, 255, 255, 255, 51, 0, 0, 0, 255)
	STYLE_CALL_SIX_BUTTON("style_call_sixbtn_disabled_end", ICON_IMG_PATH"/vc_end_call_icon_dim.png", ICON_IMG_PATH"/vc_end_call_icon_dim.png", 1, 1, 51, 255, 255, 255, 51, 0, 0, 0, 255)
	STYLE_CALL_SIX_BUTTON("style_call_sixbtn_disabled_speaker", ICON_IMG_PATH"/vc_speaker_icon_dim.png", ICON_IMG_PATH"/vc_speaker_icon_dim.png", 1, 1, 51, 255, 255, 255, 51, 0, 0, 0, 255)
	STYLE_CALL_SIX_BUTTON("style_call_sixbtn_disabled_mute", ICON_IMG_PATH"/vc_mute_icon_dim.png", ICON_IMG_PATH"/vc_mute_icon_dim.png", 1, 1, 51, 255, 255, 255, 51, 0, 0, 0, 255)
	STYLE_CALL_SIX_BUTTON("style_call_sixbtn_disabled_share", ICON_IMG_PATH"/vc_rcs_share_icon_dim.png", ICON_IMG_PATH"/vc_rcs_share_icon_dim.png", 1, 1, 51, 255, 255, 255, 51, 0, 0, 0, 255)
	STYLE_CALL_SIX_BUTTON("style_call_sixbtn_disabled_contacts", ICON_IMG_PATH"/vc_contacts_icon_dim.png", ICON_IMG_PATH"/vc_contacts_icon_dim.png", 1, 1, 51, 255, 255, 255, 51, 0, 0, 0, 255)
	STYLE_CALL_SIX_BUTTON("style_call_sixbtn_disabled_live_video", ICON_IMG_PATH"/vc_live_video_icon_dim.png", ICON_IMG_PATH"/vc_live_video_icon_dim.png", 1, 1, 51, 255, 255, 255, 51, 0, 0, 0, 255)

////////////// elm/button/base/default  //////////////////////////////////////////////
//////This effect is for buttons of Six buttons layout when they are enabled//////
	STYLE_CALL_SIX_BUTTON("style_call_sixbtn_add", ICON_IMG_PATH"/vc_add_icon.png", ICON_IMG_PATH"/vc_add_icon_press.png", 0, 1, 255, 0, 0, 0, 128, 0, 0, 0, 0)
	STYLE_CALL_SIX_BUTTON("style_call_sixbtn_join", ICON_IMG_PATH"/vc_join_icon.png", ICON_IMG_PATH"/vc_join_icon_press.png", 0, 1, 255, 0, 0, 0, 128, 0, 0, 0, 0)
	STYLE_CALL_SIX_BUTTON("style_call_sixbtn_keypad", ICON_IMG_PATH"/vc_keypad_icon.png", ICON_IMG_PATH"/vc_keypad_icon_press.png", 0, 1, 255, 0, 0, 0, 128, 0, 0, 0, 0)
	STYLE_CALL_SIX_BUTTON("style_call_sixbtn_end", ICON_IMG_PATH"/vc_end_call_icon.png", ICON_IMG_PATH"/vc_end_call_icon_press.png", 0, 1, 255, 0, 0, 0, 128, 0, 0, 0, 0)
	STYLE_CALL_SIX_BUTTON("style_call_sixbtn_speaker", ICON_IMG_PATH"/vc_speaker_icon.png", ICON_IMG_PATH"/vc_speaker_icon_press.png", 0, 1, 255, 0, 0, 0, 128, 0, 0, 0, 0)
	STYLE_CALL_SIX_BUTTON("style_call_sixbtn_speaker_on", ICON_IMG_PATH"/vc_speaker_on_icon.png", ICON_IMG_PATH"/vc_speaker_on_icon_press.png", 0, 1, 255, 0, 0, 0, 128, 0, 0, 0, 0)
	STYLE_CALL_SIX_BUTTON("style_call_sixbtn_mute", ICON_IMG_PATH"/vc_mute_icon.png", ICON_IMG_PATH"/vc_mute_icon_press.png", 0, 1, 255, 0, 0, 0, 128, 0, 0, 0, 0)
	STYLE_CALL_SIX_BUTTON("style_call_sixbtn_mute_on", ICON_IMG_PATH"/vc_mute_on_icon.png", ICON_IMG_PATH"/vc_mute_on_icon_press.png", 0, 1, 255, 0, 0, 0, 128, 0, 0, 0, 0)
	STYLE_CALL_SIX_BUTTON("style_call_sixbtn_share", ICON_IMG_PATH"/vc_rcs_share_icon.png", ICON_IMG_PATH"/vc_speaker_icon_press.png", 0, 1, 255, 0, 0, 0, 128, 0, 0, 0, 0)
	STYLE_CALL_SIX_BUTTON("style_call_sixbtn_contacts", ICON_IMG_PATH"/vc_contacts_icon.png", ICON_IMG_PATH"/vc_contacts_icon_press.png", 0, 1, 255, 0, 0, 0, 128, 0, 0, 0, 0)
	STYLE_CALL_SIX_BUTTON("style_call_sixbtn_live_video", ICON_IMG_PATH"/vc_live_video_icon.png", ICON_IMG_PATH"/vc_live_video_icon_press.png", 0, 1, 255, 0, 0, 0, 128, 0, 0, 0, 0)

////////////// elm/button/base/default  //////////////////////////////////////////////
///////////// This style is for Three buttons style in endcall view//////////////////
	STYLE_CALL_END_BUTTON(style_call_end_voice_call_button, ICON_IMG_PATH"/vc_voice_call_icon.png", ICON_IMG_PATH"/vc_voice_call_icon_press.png");
	STYLE_CALL_END_BUTTON(style_call_end_video_call_button, ICON_IMG_PATH"/vc_video_call_icon.png", ICON_IMG_PATH"/vc_video_call_icon_press.png");
	STYLE_CALL_END_BUTTON(style_call_end_message_button, ICON_IMG_PATH"/vc_msg_icon.png", ICON_IMG_PATH"/vc_msg_icon_press.png");

////////////// elm/button/base/icon_only/default  //////////////////////////////////////////////
////This style is for hold button in single call///////////////////////////////////////////////
	STYLE_HOLD_SWAP_BUTTON("style_normal_holdbtn", BG_IMG_PATH"/vc_button_hold_swap_normal.png", BG_IMG_PATH"/vc_button_hold_swap_press.png", 0.3, 0.3, 0.7, 0.7)

////////////// elm/button/base/icon_only/default  //////////////////////////////////////////////
///////This style is for hold button in conference call in list////////////////////////////////
	STYLE_HOLD_SWAP_BUTTON("style_list_holdbtn", BG_IMG_PATH"/vc_button_conflist_hold_normal.png", BG_IMG_PATH"/vc_button_conflist_hold_press.png", 0.3, 0.3, 0.7, 0.7)

////////////// elm/button/base/icon_only/default  //////////////////////////////////////////////
////This style is for swap button ///////////////////////////////////////////////
	STYLE_HOLD_SWAP_BUTTON("style_normal_swapbtn", BG_IMG_PATH"/vc_button_hold_swap_normal.png", BG_IMG_PATH"/vc_button_hold_swap_press.png", 0, 0, 1, 1)
	
////////////// elm/button/base/icon_only/default  //////////////////////////////////////////////
/////This style is for private(split) icon in genlist view in multi call list view////////////////////
	STYLE_CALL_MULTILIST_BUTTON("style_call_icon_only_private", BG_IMG_PATH"/vc_conf_split_normal.png", BG_IMG_PATH"/vc_conf_split_press.png", 68, 66, 68, 66)

////////////// elm/button/base/icon_only/default  //////////////////////////////////////////////
///////////// This style is for small end call red button in each item in list in multi-call list view///
	STYLE_CALL_MULTILIST_BUTTON("style_call_icon_only_end", BG_IMG_PATH"/vc_conf_end_normal.png", BG_IMG_PATH"/vc_conf_end_press.png", 80, 74, 80, 74)

////////////// elm/button/base/style_call_qp_text_only_end  //////////////////////////////////////////////
/////////////This style is for End button in quickpanel view//////////////////////////////////////////////////////////
	STYLE_CALL_TEXT("style_call_qp_text_only_end", BG_IMG_PATH"/vc_button_qp_end_normal.png", BG_IMG_PATH"/vc_button_qp_end_press.png", 179, 74, 4, 4, 255, 255, 32)

////////////// elm/button/base/style_call_qp_text_only_normal //////////////////////////////////////////////
/////////////This style is for mute/unhold button in quickpanel view//////////////////////////////////////////////////////////
	STYLE_CALL_TEXT("style_call_qp_text_only_normal", BG_IMG_PATH"/vc_button_qp_normal.png", BG_IMG_PATH"/vc_button_qp_press.png", 179, 74, 4, 4, 255, 255, 32)

////////////// elm/button/base/text_only/style_call_text_only_red  //////////////////////////////////////////////
/////////////This style is for Big End button used in multi-call list view//////////////////////////////////////
	STYLE_CALL_TEXT("style_call_text_only_red", BG_IMG_PATH"/vc_conf_button_bigend_call.png", BG_IMG_PATH"/vc_conf_button_bigend_call_press.png", 100, 50, 4, 4, 255, 255, 48)

////////////// elm/button/base/text_only/call_end_grey  //////////////////////////////////////////////
///////////// This style is for add to contacts button in end call view//////////////////////////////
	STYLE_CALL_TEXT("style_call_text_only_grey", BG_IMG_PATH"/vc_contact_btn.png", BG_IMG_PATH"/vc_contact_btn_press.png", 194, 92, 16, 16, 255, 255, 38)

////////////// elm/button/base/style_caller_info_morebtn  //////////////////////////////////////////////
///////////This style is for more button in caller info part////////////////////
	group { name: "elm/button/base/style_caller_info_morebtn";
		images {
			image: BG_IMG_PATH"/vc_more_button_normal.png" COMP;
			image: BG_IMG_PATH"/vc_more_button_press.png" COMP;
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 70 70;
					image {
						normal: BG_IMG_PATH"/vc_more_button_normal.png";
						border: 0 0 0 0;
						border_scale: 1;
					}
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: BG_IMG_PATH"/vc_more_button_press.png";
				}
			}
			part { name: "over2";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
			}
			program { name: "button_unclick";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,unpress" "";
				after: "button_unclick_anim";
			}
			program { name: "button_unclick_anim";
				action: STATE_SET "default" 0.0;
				target: "button_image";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,out";
				source: "over2";
				action: STATE_SET "visible" 0.0;
				target: "button_image";
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program { name: "button_unclick2";
				signal: "mouse,up,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				target: "over3";
			}
			program { name: "button_unclick3";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
			}
			program { name: "focused";
				signal: "elm,action,focus";
				source: "elm";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
			}
			program { name: "unfocused";
				signal: "elm,action,unfocus";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
			}
		}
	}

////////////// elm/button/base/style_call_small_text_with_icon  //////////////////////////////////////////////
///////////This style is for mute button in quickpanel if mute-status is enabled/////////////////////////////
	group { name: "elm/button/base/style_call_small_text_with_icon";
		images {
			image: BG_IMG_PATH"/vc_button_qp_normal.png" COMP;
			image: BG_IMG_PATH/"vc_button_qp_press.png" COMP;
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 1 1;
					image {
						normal: BG_IMG_PATH"/vc_button_qp_normal.png";
						border: 4 4 0 0;
					}
					image.middle: SOLID;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: BG_IMG_PATH/"vc_button_qp_press.png";
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
				}
			}

			part { name: "elm.text";
				type: TEXT;
				mouse_events:  0;
				effect: SHADOW;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					rel1.relative: 0.5 0;
					rel2.relative: 0.5 1;
					color: 7 180 211 255;
					color2: 0 0 0 102;
					color3: 0 0 0 255;
					max: 200 74;
					text {
						font: FONT_SLP_Regular;
						size: 32;
						align: 0.5 0.5;
						min: 1 0;
						text_class: TEXT_CLASS_SLP_REGULAR;
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 1 1;
					color: 255 255 255 255;
					color2: 0 0 0 102;
					color3: 0 0 0 255;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description { state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
					visible: 1;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 1 1;
					color: 255 255 255 255;
					color2: 0 0 0 102;
					color3: 0 0 0 255;
				}
			}

			part { name: "elm.swallow.content";
				type: SWALLOW;
				description { state: "default" 0.0;
					fixed: 1 1;
					visible: 0;
					rel1.to_x: "elm.text";
					rel1.relative: 1.0 0.0;
					rel1.offset: 0 4;
					rel2.offset: -5 -5;
					max: 30 30;
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					fixed: 1 1;
					visible: 1;
					aspect: 1.0 1.0;
				}
				description { state: "icononly" 0.0;
					inherit: "default" 0.0;
					fixed: 0 0;
					visible: 1;
					align: 0.5 0.5;
					rel2.offset: -5 -5;
					rel2.relative: 1.0 1.0;
				}
			}

			part { name: "over2";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}

		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
				after: "text_clicked";
			}
			program { name: "text_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "clicked", 0.0);
				}
			}
			program { name: "button_unpress";
				action: SIGNAL_EMIT "elm,action,unpress" "";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,up,1";
				source: "over3";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (strcmp(st, "icononly")) {
						emit("elm,action,default,text,set", "");
						set_state(PART:"elm.text", "visible", 0.0);
					}
					set_state(PART:"button_image", "default", 0.0);
				}
				after: button_unpress;
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				target: "over3";
			}
			program { name: "button_unclick3";
				signal: "mouse,clicked,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				script {
				new st[31];
				new Float:vl;
				get_state(PART:"elm.swallow.content", st, 30, vl);
				if (!strcmp(st, "icononly"))
				{
					set_state(PART:"elm.swallow.content", "visible", 0.0);
				}
					set_state(PART:"elm.text", "visible", 0.0);
				}
			}
			program { name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				script {
				new st[31];
				new Float:vl;
				get_state(PART:"elm.swallow.content", st, 30, vl);
				if (!strcmp(st, "visible"))
				{
					set_state(PART:"elm.swallow.content", "icononly", 0.0);
				}
					set_state(PART:"elm.text", "default", 0.0);
				}
			}
			program { name: "icon_show";
				signal: "elm,state,icon,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible")) {
						set_state(PART:"elm.swallow.content", "visible", 0.0);
					} else {
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
					}
				}
			}
			program { name: "icon_hide";
				signal: "elm,state,icon,hidden";
				source: "elm";
				action:  STATE_SET "default" 0.0;
				target: "elm.swallow.content";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "disable_text";
			}
			program { name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.text", "disabled", 0.0);
				}
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "enable_text";
			}
			program { name: "enable_text";
				script {
				new st[31];
				new Float:vl;
				get_state(PART:"elm.text", st, 30, vl);
				if (!strcmp(st, "disabled_visible"))
					set_state(PART:"elm.text", "visible", 0.0);
				else
					set_state(PART:"elm.text", "default", 0.0);
				}
			}
			program { name: "unfocus_text";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
		}
	}

////////////// multicall-list genlist ///////////////////////////////////////////
//////////////This style is for item in genlist in multi call list view/////////	
	group { name: "elm/genlist/item/multicall_list/default";
		alias: "elm/genlist/item_odd/multicall_list/default";
		alias: "elm/genlist/item_compress/multicall_list/default";
		alias: "elm/genlist/item_compress_odd/multicall_list/default";

		data.item: "stacking" "above";
		data.item: "selectraise" "on";
		data.item: "texts" "elm.text";
		data.item: "contents" "elm.swallow.end elm.swallow.private";
		data.item: "treesize" "20";

		images {
			image: BG_IMG_PATH"/vc_conf_call_list_bg.png" COMP;
		}

		parts {
			BEAT_GENLIST_PART_BASE(112)
			BEAT_GENLIST_PART_BG
			GENLIST_PART_BG_IMAGE_NO_SELECT
			BEAT_GENLIST_PART_BOTTOM_LINE
			BEAT_GENLIST_PART_PADDING_LEFT(16)
			BEAT_GENLIST_PART_PADDING_RIGHT(16)

			part { name: "elm.swallow.end";
				type: SWALLOW;
				scale: 1;
				description { state: "default" 0.0;
					fixed: 1 0;
					align: 1.0 0.5;
					rel1.to_x: "elm.padding.right";
					rel2 { relative: 0.0 1.0; to_x: "elm.padding.right"; }
				}
			}

			part { name: "elm.padding.end.left";
				type: RECT;
				scale: 1;
				description { state: "default" 0.0;
					min: 16 0;
					fixed: 1 0;
					visible: 0;
					rel1.to_x: "elm.swallow.end";
					rel2 { relative: 0.0 1.0; to_x: "elm.swallow.end"; }
					align: 1.0 0.0;
				}
			}

			part { name: "elm.swallow.private";
				type: SWALLOW;
				scale: 1;
				description { state: "default" 0.0;
					fixed: 1 0;
					align: 0.0 0.5;
					rel1 { relative: 1.0 0.0; to: "elm.padding.left"; }
					rel2 { relative: 1.0 1.0; to: "elm.padding.left"; }
				}
			}

			part { name: "elm.padding.private.left";
				type: RECT;
				scale: 1;
				description { state: "default" 0.0;
					min: 16 0;
					fixed: 1 0;
					visible: 0;
					rel1 { relative: 1.0 0.0; to: "elm.swallow.private"; }
					rel2 { relative: 1.0 1.0; to: "elm.swallow.private"; }
					align: 0.0 0.5;
				}
			}

			part { name: "elm.text";
				clip_to: "disclip";
				type: TEXT;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					rel1 { relative: 1.0  0.0; offset: 0 0; to: "elm.padding.private.left"; }
					rel2 { relative: 0.0  1.0; to: "elm.padding.end.left"; }
					color: 255 255 255 255;
					text {
						font: FONT_SLP_Roman;
						text_class: TEXT_CLASS_SLP_ROMAN;
						size: 44;
						min: 0 1;
						align: 0.0 0.5;
					}
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 255;
				}
			}
			
			BEAT_GENLIST_PART_DISCLIP
		}
		
		programs {
			GENLIST_PROGRAMS
		}
	}

////////////// reject with msg-list genlist ///////////////////////////////////////////
/////////////This style is for items in list to reject incoming call with msg ///////////
	group { name: "elm/genlist/item/call/reject_msg/default";
		alias: "elm/genlist/item_odd/call/reject_msg/default";
		alias: "elm/genlist/item_compress/call/reject_msg/default";
		alias: "elm/genlist/item_compress_odd/call/reject_msg/default";

		data.item: "stacking" "above";
		data.item: "selectraise" "on";
		data.item: "texts" "elm.text";
		data.item: "contents" "elm.swallow.end";
		data.item: "treesize" "20";
		
		images {
			image: BG_IMG_PATH"/vc_conf_call_list_bg.png" COMP;
		}
		
		parts {
			BEAT_GENLIST_PART_BASE(112)
			BEAT_GENLIST_PART_BG
			GENLIST_PART_BG_IMAGE
			BEAT_GENLIST_PART_BOTTOM_LINE
			BEAT_GENLIST_PART_PADDING_LEFT(32)
			BEAT_GENLIST_PART_PADDING_RIGHT(32)

			part { name: "elm.swallow.end";
				clip_to: "disclip";
				type: SWALLOW;
				scale: 1;
				description { state: "defualt" 0.0;
					min: 190 0;
					fixed: 1 0;
					align: 1.0 0.5;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
					rel1 { relative: 0.0 0.5; to_x: "elm.padding.right"; to_y: "base"; }
					rel2 { relative: 0.0 0.5; to_x: "elm.padding.right"; to_y: "base"; }
				}
			}

			part { name: "elm.text";
				clip_to: "disclip";
				type: TEXT;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					rel1 { relative: 1.0 0.0; offset: 0 0; to_x: "elm.padding.left"; }
					rel2 { to_x: "elm.swallow.end";	relative: 0.0 1.0; }
					color: 255 255 255 255;
					text {
						font: FONT_SLP_Roman;
						text_class: TEXT_CLASS_SLP_ROMAN;
						size: 44;
						min: 0 1;
						align: 0.0 0.5;
					}
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 255;
				}
			}

			BEAT_GENLIST_PART_DISCLIP
		}
		programs {
			GENLIST_PROGRAMS
		}
	}

/* More ctxpopup*/
///////////////////////////////////////////////////////////////////////////////
	group {
		name: "elm/ctxpopup/icon_text_style_item/more_ctxpopup";
		parts {
			part {
				name: "event_blocker";
				mouse_events: 1;
				description {
					state: "default" 0.0;
				}
			}
			part {
				name: "bg";
				mouse_events: 0;
				type: RECT;
				description {
					state: "default" 0.0;
					color: 0 0 0 0;
					visible: 1;
				}
				description {
					state: "clicked" 0.0;
					color: 0 140 210 255;
					visible: 1;
				}
			}
			part {
				name: "icon_left_padding";
				scale: 1;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					min: MORE_MENU_CTXPOPUP_ROW_ICON_PAD MORE_MENU_CTXPOPUP_ROW_H;
					max: MORE_MENU_CTXPOPUP_ROW_ICON_PAD MORE_MENU_CTXPOPUP_ROW_H;
					align: 0 0;
					fixed: 1 1;
					visible: 0;
				}
			}
			part {
				name: "separator";
				mouse_events: 0;
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					color: 255 255 255 102;
					align: 0.5 0;
					min: MORE_MENU_CTXPOPUP_SEPARATOR_W MORE_MENU_CTXPOPUP_SEPARATOR_H;
					max: MORE_MENU_CTXPOPUP_SEPARATOR_W MORE_MENU_CTXPOPUP_SEPARATOR_H;
					visible: 0;
				}
				description {
					state: "horizontal" 0.0;
					color: 255 255 255 102;
					align: 0 0.5;
					min: MORE_MENU_CTXPOPUP_SEPARATOR_W MORE_MENU_CTXPOPUP_SEPARATOR_H;
					max: MORE_MENU_CTXPOPUP_SEPARATOR_W MORE_MENU_CTXPOPUP_SEPARATOR_H;
					visible: 1;
				}
				description {
					state: "vertical" 0.0;
					color: 255 255 255 102;
					align: 0.5 0;
					min: MORE_MENU_CTXPOPUP_SEPARATOR_W MORE_MENU_CTXPOPUP_SEPARATOR_H;
					max: MORE_MENU_CTXPOPUP_SEPARATOR_W MORE_MENU_CTXPOPUP_SEPARATOR_H;
					visible: 1;
				}
			}
			part {
				name: "elm.swallow.icon";
				type: SWALLOW;
				scale: 1;
				description {
					state: "default" 0.0;
					min: MORE_MENU_CTXPOPUP_ROW_ICON_W MORE_MENU_CTXPOPUP_ROW_ICON_H;
					max: MORE_MENU_CTXPOPUP_ROW_ICON_W MORE_MENU_CTXPOPUP_ROW_ICON_H;
					align: 0 0.5;
					aspect: 1.0 1.0;
					rel1 { to:"icon_left_padding"; relative: 1 0; }
				}
			}
			part {
				name: "icon_right_padding";
				scale: 1;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					min: MORE_MENU_CTXPOPUP_ROW_ICON_PAD MORE_MENU_CTXPOPUP_ROW_H;
					max: MORE_MENU_CTXPOPUP_ROW_ICON_PAD MORE_MENU_CTXPOPUP_ROW_H;
					align: 0 0.5;
					fixed: 1 1;
					visible: 0;
					rel1 { to:"elm.swallow.icon"; relative: 1 1; }
				}
			}
			part {
				name: "elm.text";
				type:  TEXT;
				mouse_events:  0;
				scale: 1;
				description {
					state: "default" 0.0;
					min: MORE_MENU_CTXPOPUP_SEPARATOR_H MORE_MENU_CTXPOPUP_ROW_H;
					max: (MORE_MENU_CTXPOPUP_SEPARATOR_W - (3 * MORE_MENU_CTXPOPUP_ROW_ICON_PAD) - MORE_MENU_CTXPOPUP_ROW_ICON_W) MORE_MENU_CTXPOPUP_ROW_H;
					fixed: 0 1;
					align: 0.5 0.5;
					rel1 {relative: 1.0 0.0; to_x: "icon_right_padding";}
					rel2 {relative: 0.0 1.0; to_x: "text_right_padding";}
					color: 253 253 253 255;
					text {
						font: FONT_SLP_Roman;
						text_class: TEXT_CLASS_SLP_ROMAN;
						size: 33;
						align: 0.0 0.5;
						min: 1 1;
					}
				}
				description {
					state: "compress" 0.0;
					inherit: "default" 0.0;
					max: -1 -1;
					text {
						min: 0 1;
					}
				}
				description {
					state: "clicked" 0.0;
					inherit: "default" 0.0;
					color: 249 249 249 255;
				}
			}
			part {
				name: "text_right_padding";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description {
					state: "default" 0.1100;
					visible: 0;
					min: MORE_MENU_CTXPOPUP_ROW_ICON_PAD MORE_MENU_CTXPOPUP_ROW_H;
					max: MORE_MENU_CTXPOPUP_ROW_ICON_PAD MORE_MENU_CTXPOPUP_ROW_H;
					fixed: 1 0;
					align: 1.0 0.5;
				}
			}
			part {
				name: "over1";
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description {
					state: "default" 0.0;
				}
			}
			part {
				name: "over2";
				mouse_events: 1;
				repeat_events: 1;
				description {
					state: "default" 0.0;
				}
			}
			part {
				name: "disclip";
				type: RECT;
				description {
					state: "default" 0.0;
					visible: 0;
				}
				description {
					state: "disabled" 0.0;
					visible: 1;
					color: 200 200 200 102;
				}
			}
		}
		programs {
			program {
				name: "item_unclick";
				signal: "mouse,up,1";
				source: "over1";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program {
				name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "disclip";
			}
			program {
				name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "disclip";
			}
			program {
				name: "default";
				signal: "elm,state,default";
				source: "elm";
				script {
					set_state(PART:"separator", "default", 0.0);
				}
			}
			program {
				name: "compress";
				signal: "elm,state,compress";
				source: "elm";
				action: STATE_SET "compress" 0.0;
				target: "elm.text";
			}
			program {
				name: "vertical";
				signal: "elm,state,vertical";
				source: "elm";
				script {
					set_state(PART:"separator", "vertical", 0.0);
				}
			}
			program {
				name: "horizontal";
				signal: "elm,state,horizontal";
				source: "elm";
				script {
					set_state(PART:"separator", "horizontal", 0.0);
				}
			}
			program {
				name: "item_click2";
				signal: "mouse,down,1";
				source: "over2";
				script {
					set_state(PART:"elm.text", "clicked", 0.0);
					set_state(PART:"bg", "clicked", 0.0);
				}
			}
			program {
				name: "item_unclick2";
				signal: "mouse,up,1";
				source: "over2";
				script {
					set_state(PART:"elm.text", "compress", 0.0);
					set_state(PART:"bg", "default", 0.0);
				}
			}
		}
	}
///////////////////////////////////////////////////////////////////////////////
	group {
		images {
			image: ICON_IMG_PATH"/vc_popup_arrow.png" COMP;
		}

		name: "elm/ctxpopup/arrow/more_ctxpopup";
		parts {
			part {
				name: "ctxpopup_arrow";
				type: IMAGE;
				scale: 1;
				description {
					state: "default" 0.0;
					min: MORE_MENU_CTXPOPUP_ARROW_W MORE_MENU_CTXPOPUP_ARROW_H;
					max: MORE_MENU_CTXPOPUP_ARROW_W MORE_MENU_CTXPOPUP_ARROW_H;
					fixed: 1 1;
					visible: 0;
					align: 0.5 0.5;
				}
				description {
					state: "left" 0.0;
					min: MORE_MENU_CTXPOPUP_ARROW_W MORE_MENU_CTXPOPUP_ARROW_H;
					max: MORE_MENU_CTXPOPUP_ARROW_W MORE_MENU_CTXPOPUP_ARROW_H;
					fixed: 1 1;
					align: 1.0 0.5;
					image {
						normal: ICON_IMG_PATH"/vc_popup_arrow.png";
					}
				}
				description {
					state: "right" 0.0;
					min: MORE_MENU_CTXPOPUP_ARROW_W MORE_MENU_CTXPOPUP_ARROW_H;
					max: MORE_MENU_CTXPOPUP_ARROW_W MORE_MENU_CTXPOPUP_ARROW_H;
					fixed: 1 1;
					align: 0.0 0.5;
					image {
						normal: ICON_IMG_PATH"/vc_popup_arrow.png";
					}
				}
				description {
					state: "top" 0.0;
					min: MORE_MENU_CTXPOPUP_ARROW_W MORE_MENU_CTXPOPUP_ARROW_H;
					max: MORE_MENU_CTXPOPUP_ARROW_W MORE_MENU_CTXPOPUP_ARROW_H;
					fixed: 1 1;
					align: 0.5 1.0;
					image {
						normal: ICON_IMG_PATH"/vc_popup_arrow.png";
					}
				}
				description {
					state: "bottom" 0.0;
					min: MORE_MENU_CTXPOPUP_ARROW_W MORE_MENU_CTXPOPUP_ARROW_H;
					max: MORE_MENU_CTXPOPUP_ARROW_W MORE_MENU_CTXPOPUP_ARROW_H;
					fixed: 1 1;
					align: 0.5 0.0;
					image {
						normal: ICON_IMG_PATH"/vc_popup_arrow.png";
					}
				}
			}
		}
		programs {
			program {
				name: "enable_left_arrow";
				signal: "elm,state,left";
				source: "elm";
				action: STATE_SET "left" 0.0;
				target: "ctxpopup_arrow";
			}
			program {
				name: "enable_right_arrow";
				signal: "elm,state,right";
				source: "elm";
				action: STATE_SET "right" 0.0;
				target: "ctxpopup_arrow";
			}
			program {
				name: "enable_top_arrow";
				signal: "elm,state,top";
				source: "elm";
				action: STATE_SET "top" 0.0;
				target: "ctxpopup_arrow";
			}
			program {
				name: "enable_bottom_arrow";
				signal: "elm,state,bottom";
				source: "elm";
				action: STATE_SET "bottom" 0.0;
				target: "ctxpopup_arrow";
			}
		}
	}

///////////////////////////////////////////////////////////////////////////////
	group {
		images {
			image: ICON_IMG_PATH"/vc_popup_bg.png" COMP;
		}

		name: "elm/ctxpopup/base/more_ctxpopup";
		parts {
			part {
				name:"frame_shadow_left_top_padding";
				type:RECT;
				scale: 1;
				mouse_events: 0;
				description {
					min: 0 0;
					max: 0 0;
					rel2 { relative: 0 0; }
					align: 1 1;
					fixed: 1 1;
					visible: 0;
				}
			}
			part {
				name:"frame_shadow_right_bottom_padding";
				type:RECT;
				scale: 1;
				mouse_events: 0;
				description {
					min: 0 0;
					max: 0 0;
					rel1{relative: 1 1;}
					align: 0 0;
					fixed: 1 1;
					visible: 0;
				}
			}
			part {
				name: "frame_shadow";
				type: IMAGE;
				scale: 1;
				mouse_events: 0;
				clip_to: "ctxpopup_clip";
				description {
					state: "default" 0.0;
					rel1 {
					relative: 0.2 0.2;
						to:"frame_shadow_left_top_padding";
					}
					rel2 {
						relative: 0.8 0.8;
						to:"frame_shadow_right_bottom_padding";
					}
					image {
						normal: ICON_IMG_PATH"/vc_popup_bg.png";
						border: 9 9 9 9;
						border_scale: 1;
					}
					color: 255 255 255 127;
				}
			}
			part { name: "arrow_area_left";
				type: RECT;
				mouse_events: 0;
				scale: 1;
				clip_to: "ctxpopup_clip";
				description { state: "default" 0.0;
					visible: 0;
					min: 40 0;
					fixed: 1 1;
					align: 1 0.5;
					rel1 {
						relative: 0 1;
						to_y: "ctxpopup_frame_left_top";
					}
					rel2 {
						relative:0 0;
						to:"ctxpopup_frame_left_bottom";
					}
				}
			}
			part { name: "arrow_area_right";
				type: RECT;
				mouse_events: 0;
				scale: 1;
				clip_to: "ctxpopup_clip";
				description { state: "default" 0.0;
					visible: 0;
					min: 40 0;
					fixed: 1 1;
					align: 0 0.5;
					rel1 {
						relative: 1 1;
						to:"ctxpopup_frame_right_top";
					}
					rel2 {
						relative: 1 0;
						to_y: "ctxpopup_frame_right_bottom";
					}
				}
			}
			part { name: "arrow_area_up";
				type: RECT;
				mouse_events: 0;
				scale: 1;
				clip_to: "ctxpopup_clip";
				description { state: "default" 0.0;
					visible: 0;
					min: 0 40;
					fixed: 1 1;
					align: 0.5 1;
					rel1 {
						relative: 1 0;
						to_x: "ctxpopup_frame_left_top";
					}
					rel2 {
						relative: 0 0;
						to:"ctxpopup_frame_right_top";
					}
				}
			}
			part { name: "arrow_area_down";
				type: RECT;
				mouse_events: 0;
				scale: 1;
				clip_to: "ctxpopup_clip";
				description { state: "default" 0.0;
					visible: 0;
					min: 0 40;
					fixed: 1 1;
					align: 0.5 0;
					rel1 {
						relative: 1 1;
						to:"ctxpopup_frame_left_bottom";
					}
					rel2 {
						relative: 0 1;
						to_x: "ctxpopup_frame_right_bottom";
					}
				}
			}
			part { name: "elm.swallow.arrow_up";
				type: SWALLOW;
				mouse_events: 0;
				scale: 1;
				clip_to: "ctxpopup_clip";
				dragable {
					x: 1 1 0;
					y: 1 1 0;
					confine: "arrow_area_up";
				}
				description {
					state: "default" 0.0;
					min: 40 40;
					fixed: 1 1;
					visible: 1;
				}
			}
			part { name: "elm.swallow.arrow_down";
				type: SWALLOW;
				mouse_events: 0;
				scale: 1;
				clip_to: "ctxpopup_clip";
				dragable {
					x: 1 1 0;
					y: 1 1 0;
					confine: "arrow_area_down";
				}
				description {
					state: "default" 0.0;
					min: 40 40;
					fixed: 1 1;
					visible: 1;
				}
			}
			part { name: "elm.swallow.arrow_left";
				type: SWALLOW;
				mouse_events: 0;
				scale: 1;
				clip_to: "ctxpopup_clip";
				dragable {
					x: 1 1 0;
					y: 1 1 0;
					confine: "arrow_area_left";
				}
				description {
					state: "default" 0.0;
					min: 40 40;
					fixed: 1 1;
					visible: 1;
				}
			}
			part { name: "elm.swallow.arrow_right";
				type: SWALLOW;
				mouse_events: 0;
				scale: 1;
				clip_to: "ctxpopup_clip";
				dragable {
					x: 1 1 0;
					y: 1 1 0;
					confine: "arrow_area_right";
				}
				description {
					state: "default" 0.0;
					min: 40 40;
					fixed: 1 1;
					visible: 1;
				}
			}

			part {
				name: "ctxpopup_frame_left_top";
				type: RECT;
				scale: 1;
				description {
					visible: 0;
					align: 0 0;
					min: 4 4;
					max: 4 4;
				}
			}

			part {
				name: "ctxpopup_frame_right_top";
				type: RECT;
				scale: 1;
				description {
					visible: 0;
					align: 1 0;
					min: 4 4;
					max: 4 4;
				}
			}

			part {
				name: "ctxpopup_frame_left_bottom";
				type: RECT;
				scale: 1;
				description {
					visible: 0;
					align: 0 1;
					min: 4 4;
					max: 4 4;
				}
			}

			part {
				name: "ctxpopup_frame_right_bottom";
				type: RECT;
				scale: 1;
				description {
					visible: 0;
					align: 1 1;
					min: 4 4;
					max: 4 4;
				}
			}
			part {
				name:"list_shadow_right_bottom_padding";
				type:RECT;
				scale: 1;
				mouse_events: 0;
				description {
					min: MORE_MENU_CTXPOPUP_SHADOW_PADDING MORE_MENU_CTXPOPUP_SHADOW_PADDING;
					max: MORE_MENU_CTXPOPUP_SHADOW_PADDING MORE_MENU_CTXPOPUP_SHADOW_PADDING;
					align: 0 0;
					fixed: 1 1;
					visible: 0;
					rel1 {to:"elm.swallow.content";  relative: 1 1;}
				}
			}
			part {
				name:"content_left_top_padding";
				type:RECT;
				scale: 1;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					min: MORE_MENU_CTXPOPUP_PADDING MORE_MENU_CTXPOPUP_PADDING;
					max: MORE_MENU_CTXPOPUP_PADDING MORE_MENU_CTXPOPUP_PADDING;
					align: 0 0;
					fixed: 1 1;
					visible: 0;
				}
			}
			part {
				name:"content_right_bottom_padding";
				type:RECT;
				scale: 1;
				mouse_events: 0;
				description {
					min: MORE_MENU_CTXPOPUP_PADDING MORE_MENU_CTXPOPUP_PADDING;
					max: MORE_MENU_CTXPOPUP_PADDING MORE_MENU_CTXPOPUP_PADDING;
					rel1 { relative: 1 1;}
					rel2 { relative: 1 1;}
					align: 1 1;
					fixed: 1 1;
					visible: 0;
				}
			}
			part {
				name: "frame_bg";
				type: IMAGE;
				scale: 1;
				mouse_events: 0;
				clip_to: "ctxpopup_clip";
				description {
					state: "default" 0.0;
					rel1 {to:"ctxpopup_frame_left_top";}
					rel2 {to:"ctxpopup_frame_right_bottom";}
					image {
						normal: ICON_IMG_PATH"/vc_popup_bg.png";
						border: 9 9 9 9;
						border_scale: 1;
					}
					color: 255 255 255 127;
				}
			}
			part {
				name: "elm.swallow.content";
				type: SWALLOW;
				clip_to: "ctxpopup_clip";
				description {
					state: "default" 0.0;
					align: 0 0;
					rel1 {to:"ctxpopup_frame_left_top";  relative: 0.5 0.5;}
					rel2 {to:"ctxpopup_frame_right_bottom";  relative: 0.5 0.5;}
				}
			}
			part { name: "ctxpopup_clip";
				type: RECT;
				description { state: "default" 0.0;
					color: 255 255 255 0;
					rel1 { to:"ctxpopup_frame_left_top"; relative: 0.5 0.5; }
					rel2 { to:"ctxpopup_frame_right_bottom"; relative: 0.5 0.5; }
				}
				description { state: "show_up" 0.0;
					color: 255 255 255 0;
					rel1 { to:"arrow_area_down"; relative: 0 1; }
					rel2 { to:"arrow_area_down"; relative: 1 1; }
				}
				description { state: "show_left" 0.0;
					color: 255 255 255 0;
					rel1 { to:"arrow_area_right"; relative: 1 0; }
					rel2 { to:"arrow_area_right"; relative: 1 1; }
				}
				description { state: "show_right" 0.0;
					color: 255 255 255 0;
					rel1 { to:"arrow_area_left"; relative: 0 0; }
					rel2 { to:"arrow_area_left"; relative: 0 1; }
				}
				description { state: "show_down" 0.0;
					color: 255 255 255 0;
					rel1 { to:"arrow_area_up"; relative: 0 0; }
					rel2 { to:"arrow_area_up"; relative: 1 0; }
				}
				description { state: "hide_up" 0.0;
					color: 255 255 255 255;
					rel1 { to:"arrow_area_down"; relative: 0 1; }
					rel2 { to:"arrow_area_down"; relative: 1 1; }
				}
				description { state: "hide_left" 0.0;
					color: 255 255 255 255;
					rel1 { to:"arrow_area_right"; relative: 1 0; }
					rel2 { to:"arrow_area_right"; relative: 1 1; }
				}
				description { state: "hide_right" 0.0;
					color: 255 255 255 255;
					rel1 { to:"arrow_area_left"; relative: 0 0; }
					rel2 { to:"arrow_area_left"; relative: 0 1; }
				}
				description { state: "hide_down" 0.0;
					color: 255 255 255 255;
					rel1 { to:"arrow_area_up"; relative: 0 0; }
					rel2 { to:"arrow_area_up"; relative: 1 0; }
				}
				description { state: "visible" 0.0;
					color: 255 255 255 255;
					rel1 { to_x:"arrow_area_left"; to_y:"arrow_area_up"; }
					rel2 { to_x:"arrow_area_right"; to_y:"arrow_area_down"; }
				}
			}
		}
		programs {
			program { name: "show";
				signal: "elm,state,show";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				transition: LINEAR 0.25;
				target: "ctxpopup_clip";
			}
			program { name: "show_up";
				signal: "elm,state,show,up";
				source: "elm";
				action: STATE_SET "show_up" 0.0;
				transition: LINEAR 0.25;
				target: "ctxpopup_clip";
			}
			program { name: "show_left";
				signal: "elm,state,show,left";
				source: "elm";
				action: STATE_SET "show_left" 0.0;
				transition: LINEAR 0.25;
				target: "ctxpopup_clip";
			}
			program { name: "show_right";
				signal: "elm,state,show,right";
				source: "elm";
				action: STATE_SET "show_right" 0.0;
				transition: LINEAR 0.25;
				target: "ctxpopup_clip";
			}
			program { name: "show_down";
				signal: "elm,state,show,down";
				source: "elm";
				action: STATE_SET "show_down" 0.0;
				transition: LINEAR 0.25;
				target: "ctxpopup_clip";
			}
			program { name: "hide_up";
				signal: "elm,state,hide,up";
				source: "elm";
				action: STATE_SET "hide_up" 0.0;
				transition: LINEAR 0.25;
				target: "ctxpopup_clip";
				after: "hide_finished";
			}
			program { name: "hide_left";
				signal: "elm,state,hide,left";
				source: "elm";
				action: STATE_SET "hide_left" 0.0;
				transition: LINEAR 0.25;
				target: "ctxpopup_clip";
				after: "hide_finished";
			}
			program { name: "hide_right";
				signal: "elm,state,hide,right";
				source: "elm";
				action: STATE_SET "hide_right" 0.0;
				transition: LINEAR 0.25;
				target: "ctxpopup_clip";
				after: "hide_finished";
			}
			program { name: "hide_down";
				signal: "elm,state,hide,down";
				source: "elm";
				action: STATE_SET "hide_down" 0.0;
				transition: LINEAR 0.25;
				target: "ctxpopup_clip";
				after: "hide_finished";
			}
			program { name: "hide_finished";
				action: SIGNAL_EMIT "elm,action,hide,finished" "";
			}
		}
	}
/* End of More ctxpopup*/

}
