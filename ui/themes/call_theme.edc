/*
 * Copyright 2012  Samsung Electronics Co., Ltd
 *
 * Licensed under the Flora License, Version 1.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.tizenopensource.org/license
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "../vcui-view-layout-hd.h"

#define FONT_SLP_Bold "SLP:style=Bold"
#define FONT_SLP_Medium "SLP:style=Medium"
#define FONT_SLP_Roman "SLP:style=Roman"

#define BUTTON_STATE_ENABLED 0
#define BUTTON_STATE_DISABLED 1

#define	SCREEN_TYPE "./hd"

collections {
////////////// elm/button/base/default -disabled  //////////////////////////////////////////////
	group { name: "elm/button/base/style_call_sixbtn_disabled";
		images {
			image: "vc_six_btn_layout_normal.png" COMP;
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					image {
						normal: "vc_six_btn_layout_normal.png";
						border: 9 9 0 0;
						border_scale: 1;
					}
					color: 255 255 255 102; /*40%*/
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
				}
			}
			part { name: "elm.swallow.content";
				type: SWALLOW;
				description { state: "default" 0.0;
					visible: 0;
					align: 0.5 0.5;
					aspect: 0.5 1.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 0.66;
					aspect_preference: VERTICAL;
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					fixed: 1 0;
					visible: 1;
					aspect: 1.0 1.0;
				}
				description { state: "icononly" 0.0;
					inherit: "default" 0.0;
					fixed: 0 0;
					visible: 1;
					align: 0.5 0.5;
					aspect: 1.0 1.0;
					rel2.relative: 1.0 1.0;
				}
			}
			part { name: "elm.text";
				type: TEXT;
				effect: SOFT_SHADOW;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					fixed: 1 1;
					rel1.to_y: "elm.swallow.content";
					rel1.relative: 0.5 1.0;
					rel2.relative: 0.5 1.0;
					color: 255 255 255 51; /*opacity : 20%*/
					color2: 0 0 0 102;
					color3: 0 0 0 255;
					text {
						font: FONT_SLP_Roman;
						size: 36;
						min: 1 1;
						align: 0.5 0.5;
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 1 1;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
				}
				description { state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 1 1;
				}
			}
			part { name: "over2";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "button_unclick";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,unpress" "";
				after: "button_unclick_anim";
			}
			program { name: "button_unclick_anim";
			action: STATE_SET "default" 0.0;
			target: "button_image";
			action: STATE_SET "visible" 0.0;
			target: "elm.text";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,out";
				source: "over2";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "clicked"))
					{
						set_state(PART:"elm.text", "visible", 0.0);
						set_state(PART:"button_image", "visible", 0.0);
					}
				}
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program { name: "button_unclick2";
				signal: "mouse,up,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				target: "over3";
			}
			program { name: "button_unclick3";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "icononly"))
						set_state(PART:"elm.swallow.content", "visible", 0.0);
					set_state(PART:"elm.text", "visible", 0.0);
				}
			}
			program { name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
					set_state(PART:"elm.text", "default", 0.0);
				}
			}
			program { name: "icon_show";
				signal: "elm,state,icon,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.swallow.content", "visible", 0.0);
					else
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
				}
			}
			program { name: "icon_hide";
				signal: "elm,state,icon,hidden";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.swallow.content";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "disable_text";
			}
			program { name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.text", "disabled", 0.0);
				}
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "enable_text";
			}
			program { name: "enable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "disabled_visible"))
						set_state(PART:"elm.text", "visible", 0.0);
					else
						set_state(PART:"elm.text", "default", 0.0);
				}
			}
			program { name: "focused";
				signal: "elm,action,focus";
				source: "elm";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "unfocused";
				signal: "elm,action,unfocus";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
		}
	}

////////////// elm/button/base/default - pressed  //////////////////////////////////////////////
	group { name: "elm/button/base/style_call_sixbtn_pressed";
		images {
			image: "vc_six_btn_layout_press.png" COMP;
			image: "vc_six_btn_layout_normal.png" COMP;
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					image {
						normal: "vc_six_btn_layout_press.png";
						border: 9 9 0 0;
						border_scale: 1;
					}
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "vc_six_btn_layout_normal.png";
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
				}
			}
			part { name: "elm.swallow.content";
				type: SWALLOW;
				description { state: "default" 0.0;
					visible: 1;
					align: 0.5 0.5;
					aspect: 0.5 1.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 0.66;
					aspect_preference: VERTICAL;
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					fixed: 1 0;
					visible: 1;
					aspect: 1.0 1.0;
				}
				description { state: "icononly" 0.0;
					inherit: "default" 0.0;
					fixed: 0 0;
					visible: 1;
					align: 0.5 0.5;
					aspect: 1.0 1.0;
					rel2.relative: 1.0 1.0;
				}
			}
			part { name: "elm.text";
				type: TEXT;
				effect: SOFT_SHADOW;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					fixed: 1 1;
					rel1.to_y: "elm.swallow.content";
					rel1.relative: 0.5 1.0;
					rel2.relative: 0.5 1.0;
					color: 255 255 255 255;
					color2: 0 0 0 102;
					color3: 0 0 0 255;
					text {
						font: FONT_SLP_Roman;
						size: 36;
						min: 1 1;
						align: 0.5 0.5;
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 1 1;
					color: 255 255 255 255;
					color2: 0 0 0 102;
					color3: 0 0 0 255;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description { state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
					visible: 1;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 1 1;
					color: 255 255 255 255;
					color2: 0 0 0 102;
					color3: 0 0 0 255;
				}
			}
			part { name: "over2";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "button_unclick";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,unpress" "";
				after: "button_unclick_anim";
			}
			program { name: "button_unclick_anim";
			action: STATE_SET "default" 0.0;
			target: "button_image";
			action: STATE_SET "visible" 0.0;
			target: "elm.text";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,out";
				source: "over2";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "clicked"))
					{
						set_state(PART:"elm.text", "visible", 0.0);
						set_state(PART:"button_image", "visible", 0.0);
					}
				}
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program { name: "button_unclick2";
				signal: "mouse,up,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				target: "over3";
			}
			program { name: "button_unclick3";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "icononly"))
						set_state(PART:"elm.swallow.content", "visible", 0.0);
					set_state(PART:"elm.text", "visible", 0.0);
				}
			}
			program { name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
					set_state(PART:"elm.text", "default", 0.0);
				}
			}
			program { name: "icon_show";
				signal: "elm,state,icon,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.swallow.content", "visible", 0.0);
					else
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
				}
			}
			program { name: "icon_hide";
				signal: "elm,state,icon,hidden";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.swallow.content";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "disable_text";
			}
			program { name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.text", "disabled", 0.0);
				}
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "enable_text";
			}
			program { name: "enable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "disabled_visible"))
						set_state(PART:"elm.text", "visible", 0.0);
					else
						set_state(PART:"elm.text", "default", 0.0);
				}
			}
			program { name: "focused";
				signal: "elm,action,focus";
				source: "elm";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "unfocused";
				signal: "elm,action,unfocus";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
		}
	}

////////////// elm/button/base/default  //////////////////////////////////////////////
	group { name: "elm/button/base/style_call_sixbtn";
		images {
			image: "vc_six_btn_layout_normal.png" COMP;
			image: "vc_six_btn_layout_press.png" COMP;
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					image {
						normal: "vc_six_btn_layout_normal.png";
						border: 9 9 0 0;
						border_scale: 1;
					}
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "vc_six_btn_layout_press.png";
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
				}
			}
			part { name: "elm.swallow.content";
				type: SWALLOW;
				description { state: "default" 0.0;
					visible: 1;
					align: 0.5 0.5;
					aspect: 0.5 1.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 0.66;
					aspect_preference: VERTICAL;
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					fixed: 1 0;
					visible: 1;
					aspect: 1.0 1.0;
				}
				description { state: "icononly" 0.0;
					inherit: "default" 0.0;
					fixed: 0 0;
					visible: 1;
					align: 0.5 0.5;
					aspect: 1.0 1.0;
					rel2.relative: 1.0 1.0;
				}
			}
			part { name: "elm.text";
				type: TEXT;
				effect: SOFT_SHADOW;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					fixed: 1 1;
					rel1.to_y: "elm.swallow.content";
					rel1.relative: 0.5 1.0;
					rel2.relative: 0.5 1.0;
					color: 255 255 255 255;
					color2: 0 0 0 102;
					color3: 0 0 0 255;
					text {
						font: FONT_SLP_Roman;
						size: 36;
						min: 1 1;
						align: 0.5 0.5;
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 1 1;
					color: 255 255 255 255;
					color2: 0 0 0 102;
					color3: 0 0 0 255;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description { state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
					visible: 1;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 1 1;
					color: 255 255 255 255;
					color2: 0 0 0 102;
					color3: 0 0 0 255;
				}
			}
			part { name: "over2";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "button_unclick";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,unpress" "";
				after: "button_unclick_anim";
			}
			program { name: "button_unclick_anim";
			action: STATE_SET "default" 0.0;
			target: "button_image";
			action: STATE_SET "visible" 0.0;
			target: "elm.text";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,out";
				source: "over2";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "clicked"))
					{
						set_state(PART:"elm.text", "visible", 0.0);
						set_state(PART:"button_image", "visible", 0.0);
					}
				}
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program { name: "button_unclick2";
				signal: "mouse,up,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				target: "over3";
			}
			program { name: "button_unclick3";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "icononly"))
						set_state(PART:"elm.swallow.content", "visible", 0.0);
					set_state(PART:"elm.text", "visible", 0.0);
				}
			}
			program { name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
					set_state(PART:"elm.text", "default", 0.0);
				}
			}
			program { name: "icon_show";
				signal: "elm,state,icon,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.swallow.content", "visible", 0.0);
					else
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
				}
			}
			program { name: "icon_hide";
				signal: "elm,state,icon,hidden";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.swallow.content";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "disable_text";
			}
			program { name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.text", "disabled", 0.0);
				}
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "enable_text";
			}
			program { name: "enable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "disabled_visible"))
						set_state(PART:"elm.text", "visible", 0.0);
					else
						set_state(PART:"elm.text", "default", 0.0);
				}
			}
			program { name: "focused";
				signal: "elm,action,focus";
				source: "elm";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "unfocused";
				signal: "elm,action,unfocus";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
		}
	}

////////////// elm/button/base/icon_only/default  //////////////////////////////////////////////
	group { name: "elm/button/base/style_call_smallbtn";
		images {
			image: "vc_six_btn_layout_normal.png" COMP;
			image: "vc_six_btn_layout_press.png" COMP;
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					image {
						normal: "vc_six_btn_layout_normal.png";
						border: 9 9 0 0;
						border_scale: 1;
					}
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "vc_six_btn_layout_press.png";
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
				}
			}
			part { name: "elm.swallow.content";
				type: SWALLOW;
				description { state: "default" 0.0;
					visible: 1;
					align: 0.5 0.5;
					aspect: 0.5 1.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					fixed: 1 0;
					visible: 1;
					aspect: 1.0 1.0;
				}
				description { state: "icononly" 0.0;
					inherit: "default" 0.0;
					fixed: 0 0;
					visible: 1;
					align: 0.5 0.5;
					aspect: 1.0 1.0;
					rel2.relative: 1.0 1.0;
				}
			}
			part { name: "over2";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
			}
			program { name: "button_unclick";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,unpress" "";
				after: "button_unclick_anim";
			}
			program { name: "button_unclick_anim";
			action: STATE_SET "default" 0.0;
			target: "button_image";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,out";
				source: "over2";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "clicked"))
					{
						set_state(PART:"button_image", "visible", 0.0);
					}
				}
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program { name: "button_unclick2";
				signal: "mouse,up,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				target: "over3";
			}
			program { name: "button_unclick3";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "icononly"))
						set_state(PART:"elm.swallow.content", "visible", 0.0);
				}
			}
			program { name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
				}
			}
			program { name: "icon_show";
				signal: "elm,state,icon,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.swallow.content", "visible", 0.0);
					else
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
				}
			}
			program { name: "icon_hide";
				signal: "elm,state,icon,hidden";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.swallow.content";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
			}
			program { name: "focused";
				signal: "elm,action,focus";
				source: "elm";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
			}
			program { name: "unfocused";
				signal: "elm,action,unfocus";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
			}
		}
	}

////////////// elm/button/base/icon_only/default  //////////////////////////////////////////////
	group { name: "elm/button/base/style_call_smallbtn_pressed";
		images {
			image: "vc_conference_call_btn_normal.png" COMP;
			image: "vc_conference_call_btn_press.png" COMP;
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					image {
						normal: "vc_conference_call_btn_press.png";
						border: 5 5 0 0;
						border_scale: 1;
					}
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "vc_conference_call_btn_normal.png";
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
				}
			}
			part { name: "elm.swallow.content";
				type: SWALLOW;
				description { state: "default" 0.0;
					visible: 1;
					align: 0.5 0.5;
					aspect: 0.5 1.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 0.52;
					aspect_preference: VERTICAL;
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					fixed: 1 0;
					visible: 1;
					aspect: 1.0 1.0;
				}
				description { state: "icononly" 0.0;
					inherit: "default" 0.0;
					fixed: 0 0;
					visible: 1;
					align: 0.5 0.5;
					aspect: 1.0 1.0;
					rel2.relative: 1.0 0.52;
				}
			}
			part { name: "elm.text";
				type: TEXT;
				effect: SOFT_SHADOW;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					fixed: 1 1;
					rel1.to_y: "elm.swallow.content";
					rel1.relative: 0.5 1.0;
					rel2.relative: 0.5 1.0;
					color: 255 255 255 255;
					color2: 0 0 0 102;
					color3: 0 0 0 255;
					text {
						font: FONT_SLP_Roman;
						size: 20;
						min: 1 1;
						align: 0.5 0.5;
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 1 1;
					color: 255 255 255 255;
					color2: 0 0 0 102;
					color3: 0 0 0 255;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description { state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
					visible: 1;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 1 1;
					color: 255 255 255 255;
					color2: 0 0 0 102;
					color3: 0 0 0 255;
				}
			}
			part { name: "over2";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "button_unclick";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,unpress" "";
				after: "button_unclick_anim";
			}
			program { name: "button_unclick_anim";
			action: STATE_SET "default" 0.0;
			target: "button_image";
			action: STATE_SET "visible" 0.0;
			target: "elm.text";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,out";
				source: "over2";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "clicked"))
					{
						set_state(PART:"elm.text", "visible", 0.0);
						set_state(PART:"button_image", "visible", 0.0);
					}
				}
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program { name: "button_unclick2";
				signal: "mouse,up,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				target: "over3";
			}
			program { name: "button_unclick3";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "icononly"))
						set_state(PART:"elm.swallow.content", "visible", 0.0);
					set_state(PART:"elm.text", "visible", 0.0);
				}
			}
			program { name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
					set_state(PART:"elm.text", "default", 0.0);
				}
			}
			program { name: "icon_show";
				signal: "elm,state,icon,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.swallow.content", "visible", 0.0);
					else
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
				}
			}
			program { name: "icon_hide";
				signal: "elm,state,icon,hidden";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.swallow.content";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "disable_text";
			}
			program { name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.text", "disabled", 0.0);
				}
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "enable_text";
			}
			program { name: "enable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "disabled_visible"))
						set_state(PART:"elm.text", "visible", 0.0);
					else
						set_state(PART:"elm.text", "default", 0.0);
				}
			}
			program { name: "focused";
				signal: "elm,action,focus";
				source: "elm";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "unfocused";
				signal: "elm,action,unfocus";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
		}
	}

////////////// elm/button/base/icon_only/default  //////////////////////////////////////////////
	group { name: "elm/button/base/icon_only/style_call_icon_only_private";
		images {
			image: "vc_conference_call_btn_normal.png" COMP;
			image: "vc_conference_call_btn_press.png" COMP;
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 120 72;
					max: 120 72;
					image {
						normal: "vc_conference_call_btn_normal.png";
						border: 5 5 0 0;
						border_scale: 1;
					}
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image {
						normal: "vc_conference_call_btn_press.png";
						border: 5 5 0 0;
						border_scale: 1;
					}
				}
				description { state: "disabled" 0.0;
					inherit: "clicked" 0.0;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
				}
			}
			part { name: "elm.swallow.content";
				type: SWALLOW;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					min: 120 72;
					max: 120 72;
					fixed: 1 1;
					visible: 0;
					rel1 { to: "button_image"; }
					rel2 { to: "button_image"; }
					align: 0.5 0.5;
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
			}
			part { name: "over1";
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
				rel1.to: "button_image";
				rel2.to: "button_image";
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over2";
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 255 255 255 0;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					color: 255 255 255 0;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					rel1.to: "button_image";
					rel2.to: "button_image";
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over1";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
			}
			program { name: "button_unclick";
				signal: "mouse,up,1";
				source: "over1";
				action: SIGNAL_EMIT "elm,action,unpress" "";
				after: "button_unclick_anim";
			}
			program { name: "button_unclick_anim";
				action: STATE_SET "default" 0.0;
				target: "button_image";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,out";
				source: "over1";
				action: STATE_SET "default" 0.0;
				target: "button_image";
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over2";
				action: STATE_SET "clicked" 0.0;
				target: "over2";
			}
			program { name: "button_unclick2";
				signal: "mouse,up,1";
				source: "over2";
				action: STATE_SET "default" 0.0;
				target: "over2";
				after: "button_unclick3";
			}
			program { name: "button_unclick3";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over1";
				target: "disabler";
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over1";
				target: "disabler";
			}
			program { name: "icon_show";
				signal: "elm,state,icon,visible";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "elm.swallow.content";
			}
			program { name: "icon_hide";
				signal: "elm,state,icon,hidden";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.swallow.content";
			}
			program { name: "focused";
				signal: "elm,action,focus";
				source: "elm";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
			}
			program { name: "unfocused";
				signal: "elm,action,unfocus";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
			}
		}
	}

////////////// elm/button/base/text_only/style_call_small_text_only_red  //////////////////////////////////////////////
	group { name: "elm/button/base/text_only/style_call_small_text_only_red";
		images {
			image: "vc_button_red_normal.png" COMP;
			image: "vc_button_press.png" COMP;
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				effect: SOFT_SHADOW;
				description { state: "default" 0.0;
					min: 100 50;
					image {
						normal: "vc_button_red_normal.png";
						border: 16 16 0 0;
						border_scale: 1;
					}
				}
				description { state: "clicked" 0.0;
					min: 100 50;
					image {
						normal: "vc_button_press.png";
						border: 16 16 0 0;
						border_scale: 1;
					}
				}
				description { state: "disabled" 0.0;
					inherit: "clicked" 0.0;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
				}
			}
			part {	name: "elm.text";
				type: TEXT;
				effect: SHADOW;
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					visible: 0;
					fixed: 1 1;
					align: 0.5 0.5;
					color: 255 255 255 255;
					color2: 0 0 0 102;
					color3: 0 0 0 255;
					text {
						font: FONT_SLP_Medium;
						size: 36;
						min: 0 0;
						align: 0.5 0.5;
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 1 1;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 1 1;
					color: 255 255 255 255;
					color2: 0 0 0 102;
					color3: 0 0 0 255;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description { state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
					visible: 1;
					min: 1 1;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 1 1;
					color: 255 255 255 255;
				}
			}
			part { name: "over1";
				mouse_events: 0;
				description { state: "default" 0.0;
					rel2.relative: 1.0 0.5;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
				}
			}
			part { name: "over2";
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 255 255 255 0;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					color: 255 255 255 0;
				}
			}
			part { name: "disabler";
				type: RECT;
			description { state: "default" 0.0;
				color: 0 0 0 0;
				visible: 0;
			}
			description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "button_unclick";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,unpress" "";
				after: "button_unclick_anim";
			}
			program { name: "button_unclick_anim";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,out";
				source: "over2";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "clicked"))
					{
						set_state(PART:"elm.text", "visible", 0.0);
						set_state(PART:"button_image", "visible", 0.0);
					}
				}
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program { name: "button_unclick2";
				signal: "mouse,up,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				target: "over3";
			}
			program { name: "button_unclick3";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
			program { name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.text";
			}

			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over1";
				target: "over2";
				target: "disabler";
				after: "disable_text";
			}
			program { name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
					set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
					set_state(PART:"elm.text", "disabled", 0.0);
				}
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over1";
				target: "over2";
				target: "disabler";
				after: "enable_text";
			}
			program { name: "enable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "disabled_visible"))
					set_state(PART:"elm.text", "visible", 0.0);
					else
					set_state(PART:"elm.text", "default", 0.0);
				}
			}
			program { name: "focused";
				signal: "elm,action,focus";
				source: "elm";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "unfocused";
				signal: "elm,action,unfocus";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
		}
	}

////////////// elm/button/base/text_only/style_call_text_only_red  //////////////////////////////////////////////
	group { name: "elm/button/base/text_only/style_call_text_only_red";
		images {
			image: "vc_button_red_normal.png" COMP;
			image: "vc_button_press.png" COMP;
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				effect: SOFT_SHADOW;
				description { state: "default" 0.0;
					min: 100 50;
					image {
						normal: "vc_button_red_normal.png";
						border: 16 16 0 0;
						border_scale: 1;
					}
				}
				description { state: "clicked" 0.0;
					min: 100 50;
					image {
						normal: "vc_button_press.png";
						border: 16 16 0 0;
						border_scale: 1;
					}
				}
				description { state: "disabled" 0.0;
					inherit: "clicked" 0.0;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
				}
			}
			part {	name: "elm.text";
				type: TEXT;
				effect: SHADOW;
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					visible: 0;
					fixed: 1 1;
					align: 0.5 0.5;
					color: 255 255 255 255;
					color2: 0 0 0 102;
					color3: 0 0 0 255;
					text {
						font: FONT_SLP_Medium;
						size: 48;
						min: 0 0;
						align: 0.5 0.5;
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 1 1;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 1 1;
					color: 255 255 255 255;
					color2: 0 0 0 102;
					color3: 0 0 0 255;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description { state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
					visible: 1;
					min: 1 1;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 1 1;
					color: 255 255 255 255;
				}
			}
			part { name: "over1";
				mouse_events: 0;
				description { state: "default" 0.0;
					rel2.relative: 1.0 0.5;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
				}
			}
			part { name: "over2";
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 255 255 255 0;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					color: 255 255 255 0;
				}
			}
			part { name: "disabler";
				type: RECT;
			description { state: "default" 0.0;
				color: 0 0 0 0;
				visible: 0;
			}
			description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "button_unclick";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,unpress" "";
				after: "button_unclick_anim";
			}
			program { name: "button_unclick_anim";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,out";
				source: "over2";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "clicked"))
					{
						set_state(PART:"elm.text", "visible", 0.0);
						set_state(PART:"button_image", "visible", 0.0);
					}
				}
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program { name: "button_unclick2";
				signal: "mouse,up,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				target: "over3";
			}
			program { name: "button_unclick3";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
			program { name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.text";
			}

			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over1";
				target: "over2";
				target: "disabler";
				after: "disable_text";
			}
			program { name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
					set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
					set_state(PART:"elm.text", "disabled", 0.0);
				}
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over1";
				target: "over2";
				target: "disabler";
				after: "enable_text";
			}
			program { name: "enable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "disabled_visible"))
					set_state(PART:"elm.text", "visible", 0.0);
					else
					set_state(PART:"elm.text", "default", 0.0);
				}
			}
			program { name: "focused";
				signal: "elm,action,focus";
				source: "elm";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "unfocused";
				signal: "elm,action,unfocus";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
		}
	}


	///////////////////////////////////////////////////////////////////////////////////////
	group { name: "elm/button/base/multiline_text_black";
		images {
			image: "vc_second_mt_btn_normal.png" COMP;
			image: "vc_button_press.png" COMP;
		}
		script {
			public button_state = BUTTON_STATE_ENABLED;
		}
		styles{
			style { name: "btn_multiline_navigationbar_controlbar_style";
				base: "font=SLP:style=Medium font_size="48" align=center color=#ffffff wrap=mixed";
				tag: "br" "\n";
				tag: "ps" "ps";
				tag: "tab" "\t";
			}
		}
		parts {
			part { name: "button_image";
				type: IMAGE;
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 22 46;
					rel1.offset: 0 0;
					rel2.offset: -1 -1;
					image.normal: "vc_second_mt_btn_normal.png";
					image.border: 16 16 0 0;
					color: 255 255 255 255;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "vc_button_press.png";
				}
			}
			part {
				name: "padding_left_top";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 0.0 0.0;
					min: 10 2;
					fixed: 1 1;
					visible: 0;
				}
			}
			part {
				name: "padding_right_bottom";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 1.0;
					rel1.relative: 1.0 1.0;
					rel2.relative: 1.0 1.0;
					min: 10 2;
					fixed: 1 1;
					visible: 0;
				}
			}
			part {
				name: "icon_rect";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 0;
					min: 0 0;
					fixed: 1 0;
					rel1 { relative: 1.0 1.0; to: "padding_left_top"; }
					rel2 { relative: 1.0 0.0; to_x: "padding_left_top"; to_y: "padding_right_bottom"; }
					align: 0.0 0.5;
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					min: 22 22;
				}
				description { state: "icononly" 0.0;
					inherit: "default" 0.0;
				}
			}
			part {
				name: "padding_after_icon";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 0;
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; }
					fixed: 1 0;
					min: 0 0;
					color: 0 0 0 0;
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					min: 6 0;
				}
				description { state: "icononly" 0.0;
					inherit: "default" 0.0;
				}
			}
			part {
				name: "padding_before_text";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 0.5;
					visible: 0;
					rel1 { relative: 0.0 1.0; to_x: "elm.text"; to_y: "padding_left_top"; }
					rel2 { relative: 0.0 0.0; to_x: "elm.text"; to_y: "padding_right_bottom"; }
					fixed: 1 0;
					min: 6 0;
				}
			}
			part { name: "elm.swallow.content";
				type: SWALLOW;
				scale: 1;
				clip_to: "clipper";
				description { state: "default" 0.0;
					visible: 0;
					align: 0.0 0.5;
					rel1 { relative: 1.0 1.0; to: "padding_left_top"; }
					rel2 { relative: 1.0 0.0; to_x: "padding_left_top"; to_y: "padding_right_bottom"; }
					fixed: 1 0;
				}
				description { state: "visible" 0.0;
					fixed: 1 0;
					visible: 1;
					min: 22 22;
					max: 22 22;
					align: 1.0 0.5;
					rel1 { relative: 0.0 1.0; to_x: "padding_before_text"; to_y: "padding_left_top"; }
					rel2 { relative: 0.0 0.0; to_x: "padding_before_text"; to_y: "padding_right_bottom"; }
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
				description { state: "icononly" 0.0;
					visible: 1;
					min: 30 30;
					max: 30 30;
					rel1 { relative: 1.0 1.0; to: "padding_left_top"; }
					rel2 { relative: 0.0 0.0; to: "padding_right_bottom"; }
					align: 0.5 0.5;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
			}
			part { name: "elm.text";
				type: TEXTBLOCK;
				mouse_events: 0;
				scale: 1;
				clip_to: "clipper";
				description { state: "default" 0.0;
					visible: 0;
					rel1 { relative: 1.0 1.0; to_x: "padding_after_icon"; to_y: "padding_left_top"; }
					rel2 { relative: 0.0 0.0; to: "padding_right_bottom"; }
					align: 0.5 0.5;
					color: 255 255 255 255;
					text {
						style: "btn_multiline_navigationbar_controlbar_style";
						min: 0 0;
						max: 0 1;
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 80 0;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: 255 255 255 255;
				}
			}
			part { name: "over2";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
			}
			part { name: "over3";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
			}
			part { name: "clipper";
				type: RECT;
				description { state: "default" 0.0;
					color: 255 255 255 255;
				}
				description { state: "disabled" 0.0;
					color: 255 255 255 127;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
				after: "text_clicked";
			}
			program { name: "text_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "clicked", 0.0);
				}
			}
			program { name: "button_unpress";
				action: SIGNAL_EMIT "elm,action,unpress" "";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,up,1";
				source: "over3";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (strcmp(st, "icononly")) {
						emit("elm,action,default,text,set", "");
						set_state(PART:"elm.text", "visible", 0.0);
					}
					if(get_int(button_state) != BUTTON_STATE_DISABLED)
						set_state(PART:"button_image", "default", 0.0);
				}
				after: button_unpress;
			}
			program { name: "button_unclick3";
				signal: "mouse,clicked,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "icononly")) {
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"icon_rect", "visible", 0.0);
						set_state(PART:"padding_after_icon", "visible", 0.0);
					}
					set_state(PART:"elm.text", "visible", 0.0);
				}
			}
			program { name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible")) {
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"icon_rect", "icononly", 0.0);
						set_state(PART:"padding_after_icon", "icononly", 0.0);
					}
					set_state(PART:"elm.text", "default", 0.0);
				}
			}
			program { name: "icon_show";
				signal: "elm,state,icon,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible")) {
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"icon_rect", "visible", 0.0);
						set_state(PART:"padding_after_icon", "visible", 0.0);
					}
					else
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"icon_rect", "icononly", 0.0);
						set_state(PART:"padding_after_icon", "icononly", 0.0);
					}
				}
			}
			program { name: "icon_hide";
				signal: "elm,state,icon,hidden";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.swallow.content";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "clipper";
				target: "disabler";
				after: "disable_text";
			}
			program { name: "disable_text";
				script {
					set_int(button_state, BUTTON_STATE_DISABLED);
					set_state(PART:"elm.text", "visible", 0.0);
				}
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "clipper";
				target: "disabler";
				after: "enable_text";
			}
			program { name: "enable_text";
				script {
					set_int(button_state, BUTTON_STATE_ENABLED);
					set_state(PART:"elm.text", "visible", 0.0);
				}
			}
			program { name: "focused";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "unfocused";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "unfocus_text";
			}
			program { name: "unfocus_text";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
		}
	}

	///////////////////////////////////////////////////////////////////////////////////////
	group { name: "elm/button/base/multiline_text_red";
		images {
			image: "vc_button_red_normal.png" COMP;
			image: "vc_button_press.png" COMP;
		}
		script {
			public button_state = BUTTON_STATE_ENABLED;
		}
		styles{
			style { name: "btn_multiline_navigationbar_controlbar_style2";
				base: "font=SLP:style=Medium font_size="48" align=center color=#ffffff wrap=mixed";
				tag: "br" "\n";
				tag: "ps" "ps";
				tag: "tab" "\t";
			}
		}
		parts {
			part { name: "button_image";
				type: IMAGE;
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 22 46;
					rel1.offset: 0 0;
					rel2.offset: -1 -1;
					image.normal: "vc_button_red_normal.png";
					image.border: 16 16 0 0;
					color: 255 255 255 255;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "vc_button_press.png";
				}
			}
			part {
				name: "padding_left_top";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 0.0 0.0;
					min: 10 2;
					fixed: 1 1;
					visible: 0;
				}
			}
			part {
				name: "padding_right_bottom";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 1.0;
					rel1.relative: 1.0 1.0;
					rel2.relative: 1.0 1.0;
					min: 10 2;
					fixed: 1 1;
					visible: 0;
				}
			}
			part {
				name: "icon_rect";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 0;
					min: 0 0;
					fixed: 1 0;
					rel1 { relative: 1.0 1.0; to: "padding_left_top"; }
					rel2 { relative: 1.0 0.0; to_x: "padding_left_top"; to_y: "padding_right_bottom"; }
					align: 0.0 0.5;
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					min: 22 22;
				}
				description { state: "icononly" 0.0;
					inherit: "default" 0.0;
				}
			}
			part {
				name: "padding_after_icon";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 0;
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; }
					fixed: 1 0;
					min: 0 0;
					color: 0 0 0 0;
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					min: 6 0;
				}
				description { state: "icononly" 0.0;
					inherit: "default" 0.0;
				}
			}
			part {
				name: "padding_before_text";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 0.5;
					visible: 0;
					rel1 { relative: 0.0 1.0; to_x: "elm.text"; to_y: "padding_left_top"; }
					rel2 { relative: 0.0 0.0; to_x: "elm.text"; to_y: "padding_right_bottom"; }
					fixed: 1 0;
					min: 6 0;
				}
			}
			part { name: "elm.swallow.content";
				type: SWALLOW;
				scale: 1;
				clip_to: "clipper";
				description { state: "default" 0.0;
					visible: 0;
					align: 0.0 0.5;
					rel1 { relative: 1.0 1.0; to: "padding_left_top"; }
					rel2 { relative: 1.0 0.0; to_x: "padding_left_top"; to_y: "padding_right_bottom"; }
					fixed: 1 0;
				}
				description { state: "visible" 0.0;
					fixed: 1 0;
					visible: 1;
					min: 22 22;
					max: 22 22;
					align: 1.0 0.5;
					rel1 { relative: 0.0 1.0; to_x: "padding_before_text"; to_y: "padding_left_top"; }
					rel2 { relative: 0.0 0.0; to_x: "padding_before_text"; to_y: "padding_right_bottom"; }
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
				description { state: "icononly" 0.0;
					visible: 1;
					min: 30 30;
					max: 30 30;
					rel1 { relative: 1.0 1.0; to: "padding_left_top"; }
					rel2 { relative: 0.0 0.0; to: "padding_right_bottom"; }
					align: 0.5 0.5;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
			}
			part { name: "elm.text";
				type: TEXTBLOCK;
				mouse_events: 0;
				scale: 1;
				clip_to: "clipper";
				description { state: "default" 0.0;
					visible: 0;
					rel1 { relative: 1.0 1.0; to_x: "padding_after_icon"; to_y: "padding_left_top"; }
					rel2 { relative: 0.0 0.0; to: "padding_right_bottom"; }
					//max: 150 46;
					align: 0.5 0.5;
					color: 255 255 255 255;
					text {
						style: "btn_multiline_navigationbar_controlbar_style2";
						min: 0 0;
						max: 0 1;
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 80 0;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: 255 255 255 255;
				}
			}
			part { name: "over2";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
			}
			part { name: "over3";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
			}
			part { name: "clipper";
				type: RECT;
				description { state: "default" 0.0;
					color: 255 255 255 255;
				}
				description { state: "disabled" 0.0;
					color: 255 255 255 127;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
				after: "text_clicked";
			}
			program { name: "text_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "clicked", 0.0);
				}
			}
			program { name: "button_unpress";
				action: SIGNAL_EMIT "elm,action,unpress" "";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,up,1";
				source: "over3";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (strcmp(st, "icononly")) {
						emit("elm,action,default,text,set", "");
						set_state(PART:"elm.text", "visible", 0.0);
					}
					if(get_int(button_state) != BUTTON_STATE_DISABLED)
						set_state(PART:"button_image", "default", 0.0);
				}
				after: button_unpress;
			}
			program { name: "button_unclick3";
				signal: "mouse,clicked,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "icononly")) {
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"icon_rect", "visible", 0.0);
						set_state(PART:"padding_after_icon", "visible", 0.0);
					}
					set_state(PART:"elm.text", "visible", 0.0);
				}
			}
			program { name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible")) {
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"icon_rect", "icononly", 0.0);
						set_state(PART:"padding_after_icon", "icononly", 0.0);
					}
					set_state(PART:"elm.text", "default", 0.0);
				}
			}
			program { name: "icon_show";
				signal: "elm,state,icon,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible")) {
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"icon_rect", "visible", 0.0);
						set_state(PART:"padding_after_icon", "visible", 0.0);
					}
					else
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"icon_rect", "icononly", 0.0);
						set_state(PART:"padding_after_icon", "icononly", 0.0);
					}
				}
			}
			program { name: "icon_hide";
				signal: "elm,state,icon,hidden";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.swallow.content";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "clipper";
				target: "disabler";
				after: "disable_text";
			}
			program { name: "disable_text";
				script {
					set_int(button_state, BUTTON_STATE_DISABLED);
					set_state(PART:"elm.text", "visible", 0.0);
				}
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "clipper";
				target: "disabler";
				after: "enable_text";
			}
			program { name: "enable_text";
				script {
					set_int(button_state, BUTTON_STATE_ENABLED);
					set_state(PART:"elm.text", "visible", 0.0);
				}
			}
			program { name: "focused";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "unfocused";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "unfocus_text";
			}
			program { name: "unfocus_text";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
		}
	}

////////////// elm/button/base/text_only/title  //////////////////////////////////////////////
	group { name: "elm/button/base/text_only/style_call_text_only_green";
		images {
			image: "vc_btn_green.png" COMP;
			image: "vc_button_press.png" COMP;
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				effect: SOFT_SHADOW;
				description { state: "default" 0.0;
					min: 100 50;
					image {
						normal: "vc_btn_green.png";
						border: 16 16 0 0;
						border_scale: 1;
					}
				}
				description { state: "clicked" 0.0;
					min: 100 50;
					image {
						normal: "vc_button_press.png";
						border: 16 16 0 0;
						border_scale: 1;
					}
				}
				description { state: "disabled" 0.0;
					inherit: "clicked" 0.0;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
				}
			}
			part {	name: "elm.text";
				type: TEXT;
				effect: SHADOW;
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					visible: 0;
					fixed: 1 1;
					align: 0.5 0.5;
					color: 255 255 255 255;
					color2: 0 0 0 102;
					color3: 0 0 0 255;
					text {
						font: FONT_SLP_Medium;
						size: 54;
						min: 0 0;
						align: 0.5 0.5;
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 1 1;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 1 1;
					color: 255 255 255 255;
					color2: 0 0 0 102;
					color3: 0 0 0 255;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description { state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
					visible: 1;
					min: 1 1;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 1 1;
					color: 255 255 255 255;
				}
			}
			part { name: "over1";
				mouse_events: 0;
				description { state: "default" 0.0;
					rel2.relative: 1.0 0.5;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
				}
			}
			part { name: "over2";
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 255 255 255 0;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					color: 255 255 255 0;
				}
			}
			part { name: "disabler";
				type: RECT;
			description { state: "default" 0.0;
				color: 0 0 0 0;
				visible: 0;
			}
			description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "button_unclick";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,unpress" "";
				after: "button_unclick_anim";
			}
			program { name: "button_unclick_anim";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,out";
				source: "over2";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "clicked"))
					{
						set_state(PART:"elm.text", "visible", 0.0);
						set_state(PART:"button_image", "visible", 0.0);
					}
				}
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program { name: "button_unclick2";
				signal: "mouse,up,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				target: "over3";
			}
			program { name: "button_unclick3";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
			program { name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.text";
			}

			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over1";
				target: "over2";
				target: "disabler";
				after: "disable_text";
			}
			program { name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
					set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
					set_state(PART:"elm.text", "disabled", 0.0);
				}
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over1";
				target: "over2";
				target: "disabler";
				after: "enable_text";
			}
			program { name: "enable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "disabled_visible"))
					set_state(PART:"elm.text", "visible", 0.0);
					else
					set_state(PART:"elm.text", "default", 0.0);
				}
			}
			program { name: "focused";
				signal: "elm,action,focus";
				source: "elm";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "unfocused";
				signal: "elm,action,unfocus";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
		}
	}

////////////// HIDE_BUTTON (text_only/title)  //////////////////////////////////////////////
	group { name: "elm/button/base/text_only/style_keypad_hide_button";
		images {
			image: "vc_button_hide_keypad_normal.png" COMP;
			image: "vc_button_press.png" COMP;
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				effect: SOFT_SHADOW;
				description { state: "default" 0.0;
					image {
						normal: "vc_button_hide_keypad_normal.png";
						border: 10 10 0 0;
						border_scale: 1;
					}
				}
				description { state: "clicked" 0.0;
					image {
						normal: "vc_button_press.png";
						border: 10 10 0 0;
						border_scale: 1;
					}
				}
				description { state: "disabled" 0.0;
					inherit: "clicked" 0.0;
				}
				description { state: "focused" 0.0;
					inherit: "clicked" 0.0;
				}
			}
			part {	name: "elm.text";
				type: TEXT;
				effect: SHADOW;
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					visible: 0;
					fixed: 1 1;
					align: 0.5 0.5;
					color: 255 255 255 255;
					color2: 0 0 0 102;
					color3: 0 0 0 255;
					text {
						font: FONT_SLP_Medium;
						size: 48;
						min: 0 0;
						align: 0.5 0.5;
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 1 1;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 1 1;
					color: 255 255 255 255;
					color2: 0 0 0 102;
					color3: 0 0 0 255;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description { state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
					visible: 1;
					min: 1 1;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 1 1;
					color: 255 255 255 255;
				}
			}
			part { name: "over1";
				mouse_events: 0;
				description { state: "default" 0.0;
					rel2.relative: 1.0 0.5;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
				}
			}
			part { name: "over2";
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 255 255 255 0;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					color: 255 255 255 0;
				}
			}
			part { name: "disabler";
				type: RECT;
			description { state: "default" 0.0;
				color: 0 0 0 0;
				visible: 0;
			}
			description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "button_unclick";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,unpress" "";
				after: "button_unclick_anim";
			}
			program { name: "button_unclick_anim";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,out";
				source: "over2";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "clicked"))
					{
						set_state(PART:"elm.text", "visible", 0.0);
						set_state(PART:"button_image", "visible", 0.0);
					}
				}
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program { name: "button_unclick2";
				signal: "mouse,up,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				target: "over3";
			}
			program { name: "button_unclick3";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
			program { name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.text";
			}

			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over1";
				target: "over2";
				target: "disabler";
				after: "disable_text";
			}
			program { name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
					set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
					set_state(PART:"elm.text", "disabled", 0.0);
				}
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over1";
				target: "over2";
				target: "disabler";
				after: "enable_text";
			}
			program { name: "enable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "disabled_visible"))
					set_state(PART:"elm.text", "visible", 0.0);
					else
					set_state(PART:"elm.text", "default", 0.0);
				}
			}
			program { name: "focused";
				signal: "elm,action,focus";
				source: "elm";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "unfocused";
				signal: "elm,action,unfocus";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
		}
	}

////////////// HIDE_BUTTON (text_only/title)  //////////////////////////////////////////////
	group { name: "elm/button/base/text_only/style_keypad_end_button";
		images {
			image: "vc_button_red_normal.png" COMP;
			image: "vc_button_press.png" COMP;
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				effect: SOFT_SHADOW;
				description { state: "default" 0.0;
					image {
						normal: "vc_button_red_normal.png";
						border: 16 16 0 0;
						border_scale: 1;
					}
				}
				description { state: "clicked" 0.0;
					image {
						normal: "vc_button_press.png";
						border: 16 16 0 0;
						border_scale: 1;
					}
				}
				description { state: "disabled" 0.0;
					inherit: "clicked" 0.0;
				}
				description { state: "focused" 0.0;
					inherit: "clicked" 0.0;
				}
			}
			part {	name: "elm.text";
				type: TEXT;
				effect: SHADOW;
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					visible: 0;
					fixed: 1 1;
					align: 0.5 0.5;
					color: 255 255 255 255;
					color2: 0 0 0 102;
					color3: 0 0 0 255;
					text {
						font: FONT_SLP_Medium;
						size: 48;
						min: 0 0;
						align: 0.5 0.5;
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 1 1;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 1 1;
					color: 255 255 255 255;
					color2: 0 0 0 102;
					color3: 0 0 0 255;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description { state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
					visible: 1;
					min: 1 1;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 1 1;
					color: 255 255 255 255;
				}
			}
			part { name: "over1";
				mouse_events: 0;
				description { state: "default" 0.0;
					rel2.relative: 1.0 0.5;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
				}
			}
			part { name: "over2";
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 255 255 255 0;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					color: 255 255 255 0;
				}
			}
			part { name: "disabler";
				type: RECT;
			description { state: "default" 0.0;
				color: 0 0 0 0;
				visible: 0;
			}
			description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "button_unclick";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,unpress" "";
				after: "button_unclick_anim";
			}
			program { name: "button_unclick_anim";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,out";
				source: "over2";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "clicked"))
					{
						set_state(PART:"elm.text", "visible", 0.0);
						set_state(PART:"button_image", "visible", 0.0);
					}
				}
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program { name: "button_unclick2";
				signal: "mouse,up,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				target: "over3";
			}
			program { name: "button_unclick3";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
			program { name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.text";
			}

			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over1";
				target: "over2";
				target: "disabler";
				after: "disable_text";
			}
			program { name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
					set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
					set_state(PART:"elm.text", "disabled", 0.0);
				}
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over1";
				target: "over2";
				target: "disabler";
				after: "enable_text";
			}
			program { name: "enable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "disabled_visible"))
					set_state(PART:"elm.text", "visible", 0.0);
					else
					set_state(PART:"elm.text", "default", 0.0);
				}
			}
			program { name: "focused";
				signal: "elm,action,focus";
				source: "elm";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "unfocused";
				signal: "elm,action,unfocus";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
		}
	}

////////////// elm/button/base/icon_only/default  //////////////////////////////////////////////
	group { name: "elm/button/base/style_call_smallbtn_red";
		images {
			image: "vc_conference_call_btn_red.png" COMP;
			image: "vc_conference_call_btn_press.png" COMP;
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 120 72;
					max: 120 72;
					image {
						normal: "vc_conference_call_btn_red.png";
						border: 5 5 0 0;
						border_scale: 1;
					}
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "vc_conference_call_btn_press.png";
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
				}
			}
			part { name: "elm.swallow.content";
				type: SWALLOW;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					min: 120 72;
					max: 120 72;
					fixed: 1 1;
					visible: 1;
					rel1 { to: "button_image"; }
					rel2 { to: "button_image"; }
					align: 0.5 0.5;
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
			}
			part { name: "over2";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
			}
			program { name: "button_unclick";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,unpress" "";
				after: "button_unclick_anim";
			}
			program { name: "button_unclick_anim";
				action: STATE_SET "default" 0.0;
				target: "button_image";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,out";
				source: "over2";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "clicked")) {
						set_state(PART:"button_image", "visible", 0.0);
					}
				}
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program { name: "button_unclick2";
				signal: "mouse,up,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				target: "over3";
			}
			program { name: "button_unclick3";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "icononly"))
						set_state(PART:"elm.swallow.content", "visible", 0.0);
				}
			}
			program { name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
				}
			}
			program { name: "icon_show";
				signal: "elm,state,icon,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.swallow.content", "visible", 0.0);
					else
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
				}
			}
			program { name: "icon_hide";
				signal: "elm,state,icon,hidden";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.swallow.content";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
			}
			program { name: "focused";
				signal: "elm,action,focus";
				source: "elm";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
			}
			program { name: "unfocused";
				signal: "elm,action,unfocus";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
			}
		}
	}

////////////////////////////////////////////////////
///////// multicall-list genlist ///////////
#define BEAT_GENLIST_PART_BASE( param_item_height ) \
		part { name: "base"; \
			type: RECT; \
			repeat_events: 1; \
			scale: 1; \
			description { state: "default" 0.0; \
				min: 0 param_item_height; \
				color: 0 0 0 24; \
			} \
		}

#define BEAT_GENLIST_PART_BG \
		part { name: "bg"; \
			type: RECT; \
			clip_to: "disclip"; \
			mouse_events: 0; \
			description { state: "default" 0.0; \
				color: 0 0 0 24; \
			} \
		}

#define BEAT_GENLIST_PART_BG_IMAGE \
		part { name: "bg_image"; \
			clip_to: "disclip"; \
			mouse_events: 0; \
			description { state: "default" 0.0; \
				visible: 0; \
				image.normal: "vc_conf_call_list_bg.png"; \
			} \
			description { state: "selected" 0.0; \
				inherit: "default" 0.0; \
				visible: 1; \
			} \
		}

#define GENLIST_PART_BG_IMAGE \
		part { name: "bg_image"; \
			type: RECT; \
			clip_to: "disclip"; \
			mouse_events: 0; \
			description { state: "default" 0.0; \
				color: 199 185 164 0; \
			} \
			description { state: "selected" 0.0; \
				inherit: "default" 0.0; \
				color: 199 185 164 255; \
			} \
		}

#define GENLIST_PART_BG_IMAGE_NO_SELECT \
		part { name: "bg_image"; \
			type: RECT; \
			clip_to: "disclip"; \
			mouse_events: 0; \
			description { state: "default" 0.0; \
				color: 199 185 164 0; \
			} \
			description { state: "selected" 0.0; \
				inherit: "default" 0.0; \
			} \
		}

#define BEAT_GENLIST_PART_BOTTOM_LINE \
		part { name: "bottom_line"; \
			type: RECT; \
			clip_to: "disclip"; \
			mouse_events: 0; \
			description { state: "default" 0.0; \
				min: 0 1; \
				fixed: 0 1; \
				visible: 1; \
				color: 0 0 0 24; \
				rel1 { \
					relative: 0.0 1.0; \
					offset: 0 -1; \
				} \
			} \
		}

#define BEAT_GENLIST_PART_PADDING_LEFT( param_padding_size ) \
		part { name: "elm.padding.left"; \
			type: RECT; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				min: param_padding_size 0; \
				fixed: 1 0; \
				visible: 0; \
				rel2.relative: 0.0 1.0; \
				align: 0.0 0.0; \
			} \
		}

#define BEAT_GENLIST_PART_PADDING_RIGHT( param_padding_size ) \
		part { name: "elm.padding.right"; \
			type: RECT; \
			scale: 1; \
			description { state: "default" 0.0; \
				min: param_padding_size 0; \
				fixed: 1 0; \
				visible: 0; \
				rel1.relative: 1.0 0.0; \
				align: 1.0 0.0; \
			} \
		}

#define BEAT_GENLIST_PART_DISCLIP \
		part { name: "disclip"; \
			type: RECT; \
			description { state: "default" 0.0; \
			} \
			description { state: "disabled" 0.0; \
				inherit: "default" 0.0; \
				color: 255 255 255 64; \
			} \
		}

#define BEAT_GENLIST_PART_DIALOGUE_ITEM \
		part { name: "elm.rect.dialogue"; \
			type: RECT; \
			scale: 1; \
			description { state: "default" 0.0; \
				min: 16 0; \
				fixed: 1 0; \
				color: 199 199 199 255; \
				rel2.relative: 0.0 1.0; \
				align: 0.0 0.0; \
			} \
		}

#define GENLIST_GROUP_PART_BASE_EVENT_INC \
		part { name: "base_event";\
			type: RECT;\
			repeat_events: 0;\
			description { state: "default" 0.0;\
				color: 0 0 0 0;\
			}\
		}

#define GENLIST_PADDING_10_INC 16
#define GENLIST_HEIGHT_31_INC 49
#define GENLIST_SIZE_30_INC 48
#define GENLIST_FONT_20_INC 32
#define GENLIST_GROUP_BG_COLOR_DEFAULT_INC 0 0 0 120
#define GENLIST_GROUP_BG_COLOR_ALPHA_OFF_INC 15 15 15 255
#define GENLIST_GROUP_PART_BASE_IMAGE_INC
#define GENLIST_GROUP_PART_TEXT_COLOR_INC 255 255 255 255

	group {
		name: "elm/genlist/item/call/grouptitle/default";
		alias: "elm/genlist/item_odd/call/grouptitle/default";
		alias: "elm/genlist/item_compress/call/grouptitle/default";
		alias: "elm/genlist/item_compress_odd/call/grouptitle/default";

		data.item: "stacking" "above";
		data.item: "selectraise" "on";
		data.item: "texts" "elm.text";
		data.item: "treesize" "GENLIST_TREESIZE_20_INC";
		parts {
			GENLIST_GROUP_PART_BASE_EVENT_INC
			BEAT_GENLIST_PART_PADDING_LEFT( GENLIST_PADDING_10_INC )
			BEAT_GENLIST_PART_PADDING_RIGHT( GENLIST_PADDING_10_INC )
			part { name: "rect";
				type: RECT;
				repeat_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 0 GENLIST_HEIGHT_31_INC;
					color: GENLIST_GROUP_BG_COLOR_DEFAULT_INC;
				}
				description { state: "alpha_off" 0.0;
					min: 0 GENLIST_SIZE_30_INC;
					color: GENLIST_GROUP_BG_COLOR_ALPHA_OFF_INC;
				}
			}
			GENLIST_GROUP_PART_BASE_IMAGE_INC

			part { name: "elm.text";
				type: TEXT;
				scale: 1;
				description { state: "default" 0.0;
					align: 0.0 0.5;
					rel1 {
						relative: 1.0 0.0;
						to_x: "elm.padding.left";
					}
					rel2 {
						relative: 0.0 1.0;
						offset: 0 0;
						to_x: "elm.padding.right";
					}
					color: GENLIST_GROUP_PART_TEXT_COLOR_INC;
					text {
						font: "SLP:style=Medium";
						size: GENLIST_FONT_20_INC;
						min: 1 1;
						align: 0.0 0.5;
					}
				}
			}
		}
		program {
			name: "enable_alpha";
			signal: "elm,state,alpha,enable";
			source: "elm";
			action: STATE_SET "default" 0.0;
			target: "rect";
		}
		program {
			name: "disable_alpha";
			signal: "elm,state,alpha,disable";
			source: "elm";
			action: STATE_SET "alpha_off" 0.0;
			target: "rect";
		}
		program {
			name: "selected";
			source: "rect";
			signal: "mouse,clicked,1";
			action: SIGNAL_EMIT "elm,title_action,item,click" "elm";
		}
	}

	group { name: "elm/genlist/item/multicall_list/default";
		alias: "elm/genlist/item_odd/multicall_list/default";
		alias: "elm/genlist/item_compress/multicall_list/default";
		alias: "elm/genlist/item_compress_odd/multicall_list/default";

			data.item: "stacking" "above";
			data.item: "selectraise" "on";
			data.item: "texts" "elm.text";
			data.item: "contents" "elm.swallow.end elm.swallow.private";
			data.item: "treesize" "20";

			images {
				image: "vc_conf_call_list_bg.png" COMP;
			}

			parts {
				BEAT_GENLIST_PART_BASE( 112 )
				BEAT_GENLIST_PART_BG
				GENLIST_PART_BG_IMAGE_NO_SELECT
				BEAT_GENLIST_PART_BOTTOM_LINE
				BEAT_GENLIST_PART_PADDING_LEFT( 32 )
				BEAT_GENLIST_PART_PADDING_RIGHT( 16 )
				BEAT_GENLIST_PART_DIALOGUE_ITEM

				part { name: "elm.swallow.end";
					type: SWALLOW;
					scale: 1;
					description { state: "default" 0.0;
						fixed: 1 0;
						align: 1.0 0.5;
						rel1.to_x: "elm.padding.right";
						rel2 {
							relative: 0.0 1.0;
							to_x: "elm.padding.right";
						}
					}
				}

				part { name: "elm.padding.end.left";
					type: RECT;
					scale: 1;
					description { state: "default" 0.0;
						min: 16 0;
						fixed: 1 0;
						visible: 0;
						rel1.to_x: "elm.swallow.end";
						rel2 {
							relative: 0.0 1.0;
							to_x: "elm.swallow.end";
						}
						align: 1.0 0.0;
					}
				}

				part { name: "elm.swallow.private";
					type: SWALLOW;
					scale: 1;
					description { state: "default" 0.0;
						fixed: 1 0;
						align: 1.0 0.5;
						rel1.to_x: "elm.padding.end.left";
						rel2 {
							relative: 0.0 1.0;
							to_x: "elm.padding.end.left";
						}
					}
				}

				part { name: "elm.padding.private.left";
					type: RECT;
					scale: 1;
					description { state: "default" 0.0;
						min: 16 0;
						fixed: 1 0;
						visible: 0;
						rel1.to_x: "elm.swallow.private";
						rel2 {
							relative: 0.0 1.0;
							to_x: "elm.swallow.private";
						}
						align: 1.0 0.0;
					}
				}

		       part { name: "elm.text";
				clip_to: "disclip";
				type: TEXT;
				mouse_events: 0;
				scale: 1;
			       description { state: "default" 0.0;
				       rel1 {
						relative: 1.0  0.0;
						offset: 0 0;
						to_x: "elm.padding.left";
				       }
				       rel2 {
						relative: 0.0  1.0;
						to_x: "elm.padding.private.left";
				       }
					color: 255 255 255 255;
				       text {
						font: FONT_SLP_Roman;
						size: 44;
						min: 0 1;
						align: 0.0 0.5;
				       }
				}
			       description { state: "selected" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 255; //225 225 225 255;
			       }
			}

			BEAT_GENLIST_PART_DISCLIP
	       }
	       programs {
		       program { name: "go_active";
				signal: "elm,state,selected";
				source: "elm";
				action: STATE_SET "selected" 0.0;
				target: "bg_image";
				target: "elm.text";
		       }
		       program { name: "go_passive";
				signal: "elm,state,unselected";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "bg_image";
				target: "elm.text";
				transition: LINEAR 0.1;
		       }
		       program { name: "go_disabled";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "disclip";
		       }
		       program { name: "go_enabled";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "disclip";
		       }
		}
	}

#define BEAT_GENLIST_PART_PADDING_TOP( param_padding_size ) \
       part { name: "elm.padding.top"; \
            type: RECT; \
            scale: 1; \
            description { \
               state: "default" 0.0; \
               min: 0 param_padding_size; \
               fixed: 0 1; \
               visible: 0; \
               rel2.relative: 1.0 0.0; \
               align: 0.0 0.0; \
            } \
         }

#define BEAT_GENLIST_PART_PADDING_BOTTOM( param_padding_size ) \
       part { name: "elm.padding.bottom"; \
            type: RECT; \
            scale: 1; \
            description { \
               state: "default" 0.0; \
               min: 0 param_padding_size; \
               fixed: 0 1; \
               visible: 0; \
               rel1.relative: 0.0 1.0; \
               align: 0.0 1.0; \
            } \
         }

	////////////// elm/button/base/text_only/title  //////////////////////////////////////////////
	group { name: "elm/button/base/text_only/style_call_text_only_red_disabled";
		images {
			image: "vc_button_red_normal.png" COMP;
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				effect: SOFT_SHADOW;
				description { state: "default" 0.0;
					min: 100 50;
					image {
						normal: "vc_button_red_normal.png";
						border: 16 16 0 0;
						border_scale: 1;
					}
					color: 255 255 255 102;
				}
				description { state: "clicked" 0.0;
					min: 100 50;
					inherit: "default" 0.0;
				}
				description { state: "disabled" 0.0;
					inherit: "clicked" 0.0;
				}
				description { state: "focused" 0.0;
					inherit: "clicked" 0.0;
				}
			}
			part {	name: "elm.text";
				type: TEXT;
				effect: SHADOW;
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					visible: 0;
					fixed: 1 1;
					align: 0.5 0.5;
					color: 255 255 255 51;	/*20%*/
					color2: 0 0 0 102;
					color3: 0 0 0 255;
					text {
						font: FONT_SLP_Medium;
						size: 48;
						min: 0 0;
						align: 0.5 0.5;
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 1 1;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 1 1;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
				}
				description { state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 1 1;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 1 1;
				}
			}
			part { name: "over1";
				mouse_events: 0;
				description { state: "default" 0.0;
					rel2.relative: 1.0 0.5;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
				}
			}
			part { name: "over2";
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 255 255 255 0;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					color: 255 255 255 0;
				}
			}
			part { name: "disabler";
				type: RECT;
			description { state: "default" 0.0;
				color: 0 0 0 0;
				visible: 0;
			}
			description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "button_unclick";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,unpress" "";
				after: "button_unclick_anim";
			}
			program { name: "button_unclick_anim";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,out";
				source: "over2";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "clicked"))
					{
						set_state(PART:"elm.text", "visible", 0.0);
						set_state(PART:"button_image", "visible", 0.0);
					}
				}
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program { name: "button_unclick2";
				signal: "mouse,up,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				target: "over3";
			}
			program { name: "button_unclick3";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
			program { name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.text";
			}

			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over1";
				target: "over2";
				target: "disabler";
				after: "disable_text";
			}
			program { name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
					set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
					set_state(PART:"elm.text", "disabled", 0.0);
				}
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over1";
				target: "over2";
				target: "disabler";
				after: "enable_text";
			}
			program { name: "enable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "disabled_visible"))
					set_state(PART:"elm.text", "visible", 0.0);
					else
					set_state(PART:"elm.text", "default", 0.0);
				}
			}
			program { name: "focused";
				signal: "elm,action,focus";
				source: "elm";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "unfocused";
				signal: "elm,action,unfocus";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
		}
	}

   /////navigation frame/////
#define VC_NAVIFRAME_TITLE_H_INC 100
#define VC_NAVIFRAME_OH_CLOSED_H_INC 8
#define VC_NAVIFRAME_OH_OPENED_H_INC 106
#define VC_NAVIFRAME_OH_CONTENT_H_INC 74
#define VC_NAVIFRAME_OH_PADDING_INC 16
#define VC_NAVIFRAME_OH_OPENED_DOUBLE_H_INC 196
#define VC_NAVIFRAME_INDICATOR_W_INC 128
#define VC_NAVIFRAME_PADDING_EXPANDED_INC 141
#define VC_NAVIFRAME_TITLE_FONT_SIZE_INC 36
#define VC_NAVIFRAME_ICON_SIZE_INC 32 32
#define VC_NAVIFRAME_ICON_PADDING_INC 16 0
#define VC_NAVIFRAME_OH_ARROW_SIZE_INC 19 14
#define VC_NAVIFRAME_TITLE_TEXT_COLOR_INC 255 255 255 255
#define VC_NAVIFRAME_TITLE_BG_COLOR_INC 0 0 0 0
#define VC_NAVIFRAME_TITLE_LEFT_SEPARATOR_COLOR_INC 0 0 0 0
#define VC_NAVIFRAME_TITLE_RIGHT_SEPARATOR_COLOR_INC 0 0 0 255

#define VC_NAVIFRAME_NEW_TITLE_BG_COLOR_INC 0 0 0 102
#define VC_NAVIFRAME_BOTTOM_H_INC 114
#define VC_NAVIFRAME_PREV_BTN_LPAD 44
#define VC_NAVIFRAME_NEW_ICON_SIZE_INC 56 56

#define BUTTON_STATE_ENABLED  0
#define BUTTON_STATE_DISABLED 1

   group { name: "elm/naviframe/item/basic/vcui_naviframe/default";
	   alias:"elm/naviframe/item/vcui_naviframe_item_1line/default";
      images {
	      image: "vc_reject_with_msg_control_top_arrow.png" COMP;
	      image: "vc_reject_with_msg_control_top_bg.png" COMP;
      }
      script {
         public oh_show = 0;
         public oh_close = 0;
      }
      parts {
         part { name: "title_clip";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 1 VC_NAVIFRAME_TITLE_H_INC;
               align: 0.0 0.0;
               fixed: 0 1;
               rel1 { relative: 0.0 0.0; }
               rel2 { relative: 1.0 0.0; }
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               min: 0 0;
               max: 0 0;
               fixed: 1 1;
            }
         }
         part { name: "optionheader_clip";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 1 VC_NAVIFRAME_OH_CLOSED_H_INC;
               align: 0.5 0;
               fixed: 0 1;
               rel1.to_x: "elm.swallow.content";
               rel1.to_y: "title_clip";
               rel1.relative: 0 1;
               rel2.to_x: "elm.swallow.content";
               rel2.to_y: "title_clip";
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: 1 VC_NAVIFRAME_OH_OPENED_H_INC;
            }
         }
         part { name: "optionheader_bg";
            type: IMAGE;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               rel1 { to: "optionheader_clip"; }
               rel2 { to: "optionheader_clip"; }
               image { normal: "vc_reject_with_msg_control_top_bg.png";
                  border: 0 0 1 0;
               }
            }
         }
         part { name: "elm.swallow.optionheader.top.padding";
            type: SWALLOW;
            scale: 1;
            clip_to: "optionheader_clip";
            description { state: "default" 0.0;
               min: 1 VC_NAVIFRAME_OH_PADDING_INC;
               rel1 { relative: 0.0 0.0; to: "optionheader_bg"; }
               rel2 { relative: 1.0 0.0; to: "optionheader_bg"; }
               fixed: 0 1;
               align: 0.0 0.0;
               visible: 0;
            }
         }
         part { name: "elm.swallow.optionheader";
            type: SWALLOW;
            scale: 1;
            clip_to: "optionheader_clip";
            description { state: "default" 0.0;
               min: 1 VC_NAVIFRAME_OH_CONTENT_H_INC;
               rel1 { relative: 0.0 1.0; to: "elm.swallow.optionheader.top.padding"; }
               rel2 { relative: 1.0 1.0; to: "elm.swallow.optionheader.top.padding"; }
               fixed: 0 1;
               align: 0.0 0.0;
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "elm.swallow.optionheader.bottom.padding";
            type: SWALLOW;
            scale: 1;
            clip_to: "optionheader_clip";
            description { state: "default" 0.0;
               min: 1 VC_NAVIFRAME_OH_PADDING_INC;
               rel1 { relative: 0.0 1.0; to: "elm.swallow.optionheader"; }
               fixed: 0 1;
               align: 0.0 0.0;
               visible: 0;
            }
         }
         part { name: "content_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1.to_y: "optionheader_bg";
               rel1.relative: 0 1;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            repeat_events: 0;
            clip_to: "content_clip";
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.relative: 0.0 1.0;
               rel1.to_y: "optionheader_bg";
               rel2.relative: 1.0 1.0;
            }
           description { state: "left" 0.0;
               inherit: "default" 0.0;
               rel1.relative: -1.0 1.0;
               rel2.relative: 0.0 1.0;
            }
            description { state: "right" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 1.0 1.0;
               rel2.relative: 2.0 1.0;
            }
         }
         part { name: "title_base";
            type: RECT;
            clip_to: "title_clip";
            scale: 1;
            description { state: "default" 0.0;
               min: 1 VC_NAVIFRAME_TITLE_H_INC;
               align: 0.5 0.0;
               fixed: 0 1;
               rel1 { relative: 0.0 0.0; }
               rel2 { relative: 1.0 0.0; }
               color: VC_NAVIFRAME_TITLE_BG_COLOR_INC;
            }
         }
         part { name: "elm.rect.pada";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: VC_NAVIFRAME_INDICATOR_W_INC 0;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1 { relative: 0.0 0.0; to: "title_base"; }
               rel2 { relative: 0.0 1.0; to: "title_base"; }
               visible: 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: VC_NAVIFRAME_PADDING_EXPANDED_INC 0;
            }
         }
         part { name: "separator_1";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               align: 1.0 0;
               min: 1 0;
               rel1 { relative: 0.0 0.2; to:"elm.rect.padb"; to: "title_base"; }
               rel2 { relative: 0.0 0.8; to:"elm.rect.padb"; to: "title_base"; }
               fixed: 1 0;
               color: VC_NAVIFRAME_TITLE_RIGHT_SEPARATOR_COLOR_INC;
            }
         }
         part { name: "separator_2";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               align: 1.0 0;
               min: 1 0;
               rel1 { relative: 0.0 0.0; to: "separator_1"; to: "title_base"; }
               rel2 { relative: 0.0 1.0; to: "separator_1"; to: "title_base"; }
               fixed: 1 0;
               color: VC_NAVIFRAME_TITLE_LEFT_SEPARATOR_COLOR_INC;
            }
         }
         part { name: "elm.rect.padb";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: VC_NAVIFRAME_INDICATOR_W_INC 0;
               fixed: 1 0;
               align: 1.0 0.5;
               rel1 { relative: 1.0 0.0; to: "title_base"; }
               rel2 { relative: 1.0 1.0; to: "title_base"; }
               visible: 0;
            }
         }
         part { name: "elm.text.title";
            type: TEXT;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               text { font: "SLP:style=Medium";
                  size: VC_NAVIFRAME_TITLE_FONT_SIZE_INC;
                  min: 0 0;
                  max: 1 0;
                  align: 0.5 0.5;
               }
               color: VC_NAVIFRAME_TITLE_TEXT_COLOR_INC;
               align: 0.5 0.5;
               rel1.to: "title_base";
               rel2.to: "title_base";
            }
         }
         part { name: "click_event_area";
             ignore_flags: ON_HOLD;
             description { state: "default" 0.0;
                rel1 { to: "title_base"; }
                rel2 { to: "elm.rect.padb"; relative: 0.0 1.0; }
             }
         }
         part { name: "elm.swallow.prev_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               align: 0 0.5;
               fixed: 1 1;
               rel1 { relative: 0.0 0.0; to: "title_base"; }
               rel2 { relative: 0.0 1.0; to: "title_base"; }
            }
         }
         part { name: "elm.swallow.icon";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               max: VC_NAVIFRAME_ICON_SIZE_INC;
               rel1 { relative: 0.0 0.0; to_x: "padding_before_text"; }
               rel2 { relative: 0.0 1.0; to_x: "padding_before_text"; }
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               align: 1.0 0.5;
            }
         }
         part { name: "padding_before_text";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to_x: "elm.text.title"; }
               rel2 { relative: 0.0 1.0; to_x: "elm.text.title"; }
               fixed: 1 0;
               min: VC_NAVIFRAME_ICON_PADDING_INC;
               visible: 0;
            }
         }
         part { name: "optionheader_arrow";
            type: IMAGE;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: VC_NAVIFRAME_OH_ARROW_SIZE_INC;
               max: VC_NAVIFRAME_OH_ARROW_SIZE_INC;
               fixed: 1 1;
               align: 0.5 1;
               visible: 0;
               rel1.to_y: "optionheader_bg";
               rel1.offset: 0 1;
               rel2.relative: 1 0;
               rel2.to_y: "optionheader_bg";
               rel2.offset: -1 0;
               image {
                  normal: "vc_reject_with_msg_control_top_arrow.png";
               }
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "content_new_pusehd";
            signal: "elm,state,new,pushed,internal";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.content";
            transition: DECELERATE 0.5;
            after: "show_finished";
         }
         program { name: "content_cur_pusehd";
            signal: "elm,state,cur,pushed,internal";
            source: "";
            action: STATE_SET "left" 0.0;
            target: "elm.swallow.content";
            transition: DECELERATE 0.5;
            after: "pushed_finished";
         }
         program { name: "content_prev_popped";
            signal: "elm,state,prev,popped,internal";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.content";
            transition: DECELERATE 0.5;
            after: "show_finished";
         }
         program { name: "content_cur_popped";
            signal: "elm,state,cur,popped,internal";
            source: "";
            action: STATE_SET "right" 0.0;
            target: "elm.swallow.content";
            transition: DECELERATE 0.5;
            after: "popped_finished";
         }
         program { name: "cur_pushed";
            signal: "elm,state,cur,pushed";
            source: "elm";
            script {
               set_state(PART:"elm.swallow.content", "default", 0.0);
               emit("elm,state,cur,pushed,internal", "");
            }
         }
         program { name: "new_pushed";
            signal: "elm,state,new,pushed";
            source: "elm";
            script {
               set_state(PART:"elm.swallow.content", "right", 0.0);
               emit("elm,state,new,pushed,internal", "");
            }
         }
         program { name: "prev_popped";
            signal: "elm,state,prev,popped";
            source: "elm";
            script {
               set_state(PART:"elm.swallow.content", "left", 0.0);
               emit("elm,state,prev,popped,internal", "");
            }
         }
         program { name: "cur_popped";
            signal: "elm,state,cur,popped";
            source: "elm";
            script {
               set_state(PART:"elm.swallow.content", "default", 0.0);
               emit("elm,state,cur,popped,internal", "");
            }
         }
         program { name: "visible";
            signal: "elm,state,visible";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "title_show";
            signal: "elm,state,title,show";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "title_clip";
         }
         program { name: "title_hide";
            signal: "elm,state,title,hide";
            source: "elm";
            action: STATE_SET "hide" 0.0;
            target: "title_clip";
         }
         program { name: "optionheader_show";
            signal: "elm,state,elm.swallow.optionheader,show";
            source: "elm";
            script {
               set_state(PART:"optionheader_clip", "show", 0.0);
               set_state(PART:"optionheader_arrow", "show", 0.0);
               set_state(PART:"elm.swallow.optionheader", "show", 0.0);
               set_int(oh_show, 1);
               emit("elm,state,optionheader_arrow,show", "");
            }
         }
         program { name: "optionheader_hide";
            signal: "elm,state,elm.swallow.optionheader,hide";
            source: "elm";
            script {
               set_state(PART:"optionheader_clip", "default", 0.0);
               set_state(PART:"optionheader_arrow", "default", 0.0);
               set_state(PART:"elm.swallow.optionheader", "default", 0.0);
               set_int(oh_show, 0);
            }
         }
         program { name: "optionheader_open";
            signal: "elm,state,optionheader,open";
            source: "";
            action: STATE_SET "show" 0.0;
            target: "optionheader_clip";
            target: "elm.swallow.optionheader";
            transition: LINEAR 0.2;
            after: "optionheader_open_set";
         }
         program { name: "optionheader_close";
            signal: "elm,state,optionheader,close";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "optionheader_clip";
            target: "elm.swallow.optionheader";
            transition: LINEAR 0.2;
            after: "optionheader_close_set";
         }
         program { name: "optionheader_instant_open";
            signal: "elm,state,optionheader,instant_open";
            source: "";
            action: STATE_SET "show" 0.0;
            target: "optionheader_clip";
            target: "elm.swallow.optionheader";
            after: "optionheader_open_set";
         }
         program { name: "optionheader_instant_close";
            signal: "elm,state,optionheader,instant_close";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "optionheader_clip";
            target: "elm.swallow.optionheader";
            after: "optionheader_close_set";
         }
         program { name: "optionheader_close_set";
            signal: "elm,state,optionheader,close_set";
            source: "";
            script {
               set_int(oh_close, 1);
            }
         }
         program { name: "optionheader_open_set";
            signal: "elm,state,optionheader,open_set";
            source: "";
            script {
               set_int(oh_close, 0);
            }
         }
         program { name: "show_finished";
            action: SIGNAL_EMIT "elm,action,show,finished" "";
         }
         program { name: "pushed_finished";
            action: SIGNAL_EMIT "elm,action,pushed,finished" "";
         }
         program { name: "popped_finished";
            action: SIGNAL_EMIT "elm,action,popped,finished" "";
         }
         program { name: "title_clicked_signal";
            action: SIGNAL_EMIT "elm,action,title,clicked" "";
         }
         program {
            name: "title_clicked";
            signal: "mouse,clicked,1";
            source: "click_event_area";
            script {
               if (get_int(oh_show) == 1) {
                  if (get_int(oh_close) == 1) {
                     emit("elm,state,optionheader,open", "");
                  }else {
                     emit("elm,state,optionheader,close", "");
                  }
               }
            }
            after: "title_clicked_signal";
         }
      }
   }

   group { name: "elm/naviframe/item/basic/vcui_naviframe_new/default";
	   alias:"elm/naviframe/item/vcui_naviframe_new_item_1line/default";
      parts {
         part { name: "title_clip";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 1 VC_NAVIFRAME_TITLE_H_INC;
               align: 0.0 0.0;
               fixed: 0 1;
               rel1 { relative: 0.0 0.0; }
               rel2 { relative: 1.0 0.0; }
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               min: 0 0;
               max: 0 0;
               fixed: 1 1;
            }
         }
         part { name: "title_base";
            type: RECT;
            clip_to: "title_clip";
            scale: 1;
            description { state: "default" 0.0;
               min: 1 VC_NAVIFRAME_TITLE_H_INC;
               align: 0.5 0.0;
               fixed: 0 1;
               rel1 { relative: 0.0 0.0; }
               rel2 { relative: 1.0 0.0; }
               color: VC_NAVIFRAME_NEW_TITLE_BG_COLOR_INC;
            }
         }
         part { name: "elm.text.title";
            type: TEXT;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               text { font: "SLP:style=Medium";
                  size: VC_NAVIFRAME_TITLE_FONT_SIZE_INC;
                  min: 0 0;
                  max: 1 0;
                  align: 0.5 0.5;
               }
               color: VC_NAVIFRAME_TITLE_TEXT_COLOR_INC;
               align: 0.5 0.5;
               rel1.to: "title_base";
               rel2.to: "title_base";
            }
         }
         part { name: "click_event_area";
             ignore_flags: ON_HOLD;
             description { state: "default" 0.0;
                rel1 { to: "title_base"; }
                rel2 { to: "title_base"; }
             }
         }
          part { name: "bottom_clip";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 1 VC_NAVIFRAME_BOTTOM_H_INC;
               align: 0.0 0.0;
               fixed: 0 1;
               rel1 { relative: 0.0 (1166/1280); }
               rel2 { relative: 1.0 1.0; }
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               min: 0 0;
               max: 0 0;
               fixed: 1 1;
            }
         }
         part { name: "bottom_base";
            type: RECT;
            clip_to: "bottom_clip";
            scale: 1;
            description { state: "default" 0.0;
               min: 1 VC_NAVIFRAME_BOTTOM_H_INC;
               align: 0.5 0.0;
               fixed: 0 1;
               rel1 { relative: 0.0 0.0; to: "bottom_clip"; }
               rel2 { relative: 1.0 1.0; to: "bottom_clip"; }
               color: VC_NAVIFRAME_NEW_TITLE_BG_COLOR_INC;
            }
         }
         part { name: "elm.swallow.prev_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "bottom_clip";
            description { state: "default" 0.0;
               align: 0.0 0.5;
               fixed: 1 1;
               rel1 { relative: 0.0 0.0; to: "bottom_base"; }
               rel2 { relative: 0.0 1.0; to: "bottom_base"; }
            }
         }
         part { name: "elm.swallow.icon";
            type: SWALLOW;
            scale: 1;
            clip_to: "bottom_clip";
            description { state: "default" 0.0;
               max: VC_NAVIFRAME_NEW_ICON_SIZE_INC;
               rel1 { relative: 0.0 0.0; to_x: "padding_before_prevbtn"; }
               rel2 { relative: 0.0 1.0; to_x: "padding_before_prevbtn"; }
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               align: 1.0 0.5;
            }
         }
         part { name: "padding_before_prevbtn";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            clip_to: "bottom_clip";
            description { state: "default" 0.0;
               min: VC_NAVIFRAME_PREV_BTN_LPAD 0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to_x: "bottom_clip"; }
               rel2 { relative: 0.0 1.0; to_x: "bottom_clip"; }
               fixed: 1 0;
               visible: 0;
            }
         }
      }
      programs {
         program { name: "title_show";
            signal: "elm,state,title,show";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "title_clip";
            target: "bottom_clip";
         }
         program { name: "title_hide";
            signal: "elm,state,title,hide";
            source: "elm";
            action: STATE_SET "hide" 0.0;
            target: "title_clip";
            target: "bottom_clip";
         }
         program { name: "show_finished";
            action: SIGNAL_EMIT "elm,action,show,finished" "";
         }
         program { name: "pushed_finished";
            action: SIGNAL_EMIT "elm,action,pushed,finished" "";
         }
         program { name: "popped_finished";
            action: SIGNAL_EMIT "elm,action,popped,finished" "";
         }
         program { name: "title_clicked_signal";
            action: SIGNAL_EMIT "elm,action,title,clicked" "";
         }
         program {
            name: "title_clicked";
            signal: "mouse,clicked,1";
            source: "click_event_area";
            after: "title_clicked_signal";
         }
      }
   }

   group { name: "elm/button/base/vcui_naviframe_control/left";
      script {
         public button_state = BUTTON_STATE_ENABLED;
      }
      images.image: "vc_reject_with_msg_option_header_bt_press.png" COMP;
      parts {
         part { name: "button_image";
            type: IMAGE;
            mouse_events: 1;
            scale: 1;
            description { state: "default" 0.0;
               min: 20 20;
               color: 0 0 0 0;
               rel1.offset: 0 0;
               rel2.offset: -1 -1;
               color: 255 255 255 255;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "clicked" 0.0;
               inherit: "default" 0.0;
               image.normal: "vc_reject_with_msg_option_header_bt_press.png";
            }
         }
         part {
            name: "padding_left_top";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.relative: 0.0 0.0;
               rel2.relative: 0.0 0.0;
               min: 10 5;
               fixed: 1 1;
               visible: 0;
            }
         }
         part {
            name: "padding_right_bottom";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 1.0 1.0;
               rel1.relative: 1.0 1.0;
               rel2.relative: 1.0 1.0;
               min: 10 5;
               fixed: 1 1;
               visible: 0;
            }
         }
         part {
            name: "icon_rect";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 1;
               min: 0 0;
               fixed: 1 0;
               rel1 { relative: 1.0 1.0; to: "padding_left_top"; }
               rel2 { relative: 1.0 0.0; to_x: "padding_left_top"; to_y: "padding_right_bottom"; }
               align: 0.0 0.5;
               color: 0 0 0 0;
            }
            description { state: "visible" 0.0;
               visible: 1;
               min: 22 22;
               fixed: 1 0;
               rel1 { relative: 1.0 1.0; to: "padding_left_top"; }
               rel2 { relative: 1.0 0.0; to_x: "padding_left_top"; to_y: "padding_right_bottom"; }
               align: 0.0 0.5;
               color: 0 0 0 0;
            }
            description { state: "icononly" 0.0;
               inherit: "default" 0.0;
            }
         }
         part {
            name: "padding_after_icon";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1 { relative: 1.0 0.0; to: "icon_rect"; }
               rel2 { relative: 1.0 1.0; to: "icon_rect"; }
               fixed: 1 0;
               min: 0 0;
               color: 0 0 0 0;
            }
            description { state: "visible" 0.0;
               visible: 1;
               align: 0.0 0.0;
               rel1 { relative: 1.0 0.0; to: "icon_rect"; }
               rel2 { relative: 1.0 1.0; to: "icon_rect"; }
               fixed: 1 0;
               min: 6 0;
               color: 0 0 0 0;
            }
            description { state: "icononly" 0.0;
               inherit: "default" 0.0;
            }
         }
         part {
            name: "padding_before_text";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 1.0; to_x: "elm.text"; to_y: "padding_left_top"; }
               rel2 { relative: 0.0 0.0; to_x: "elm.text"; to_y: "padding_right_bottom"; }
               fixed: 1 0;
               min: 6 0;
               color: 0 0 0 0;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            clip_to: "disabler";
            description { state: "default" 0.0;
               visible: 0;
               align: 0.0 0.5;
               rel1 { relative: 1.0 1.0; to: "padding_left_top"; }
               rel2 { relative: 1.0 0.0; to_x: "padding_left_top"; to_y: "padding_right_bottom"; }
               fixed: 1 0;
            }
            description { state: "visible" 0.0;
               fixed: 1 0;
               visible: 1;
               min: 22 22;
               max: 22 22;
               align: 1.0 0.5;
               rel1 { relative: 0.0 1.0; to_x: "padding_before_text"; to_y: "padding_left_top"; }
               rel2 { relative: 0.0 0.0; to_x: "padding_before_text"; to_y: "padding_right_bottom"; }
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
            }
            description { state: "icononly" 0.0;
               visible: 1;
               min: 30 30;
               max: 30 30;
               rel1 { relative: 1.0 1.0; to: "padding_left_top"; }
               rel2 { relative: 0.0 0.0; to: "padding_right_bottom"; }
               align: 0.5 0.5;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
            }
         }
         part { name: "elm.text";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            clip_to: "disabler";
            description { state: "default" 0.0;
               visible: 0;
               rel1 { relative: 1.0 1.0; to_x: "padding_after_icon"; to_y: "padding_left_top"; }
               rel2 { relative: 0.0 0.0; to: "padding_right_bottom"; }
               align: 0.0 0.5;
               color: 255 255 255 255;
               text {
                  font: FONT_SLP_Medium;
                  size: 32;
                  min: 0 0;
                  align: 0.0 0.5;
                  max: 1 0;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
            description { state: "clicked" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: 0 0;
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: 0 0;
               color: 255 255 255 255;
            }
         }
         part { name: "over2";
            type: RECT;
            mouse_events: 1;
            repeat_events: 1;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part { name: "over3";
            type: RECT;
            mouse_events: 1;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
            description { state: "clicked" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               color: 255 255 255 255;
            }
            description { state: "disabled" 0.0;
               color: 255 255 255 127;
            }
         }
      }
      programs {
         program { name: "button_click";
            signal: "mouse,down,1";
            source: "over2";
            action: SIGNAL_EMIT "elm,action,press" "";
            after: "button_click_anim";
         }
         program { name: "button_click_anim";
            action: STATE_SET "clicked" 0.0;
            target: "button_image";
            after: "text_clicked";
         }
         program { name: "text_clicked";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
                  set_state(PART:"elm.text", "clicked", 0.0);
            }
         }
         program { name: "button_unpress";
            action: SIGNAL_EMIT "elm,action,unpress" "";
         }
         program { name: "button_mouseout_clicked";
            signal: "mouse,up,1";
            source: "over3";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (strcmp(st, "icononly"))
                 {
                    emit("elm,action,default,text,set", "");
                    set_state(PART:"elm.text", "visible", 0.0);
                 }
               if(get_int(button_state) != BUTTON_STATE_DISABLED)
                  set_state(PART:"button_image", "default", 0.0);
            }
            after: button_unpress;
         }
         program { name: "button_click2";
            signal: "mouse,down,1";
            source: "over3";
            action: STATE_SET "clicked" 0.0;
            target: "over3";
         }
         program { name: "button_unclick2";
            signal: "mouse,clicked,1";
            source: "over3";
            action: STATE_SET "default" 0.0;
            target: "over3";
         }
         program { name: "button_unclick3";
            signal: "mouse,clicked,1";
            source: "over2";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "text_show";
            signal: "elm,state,text,visible";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (!strcmp(st, "icononly"))
               {
                  set_state(PART:"elm.swallow.content", "visible", 0.0);
                  set_state(PART:"icon_rect", "visible", 0.0);
                  set_state(PART:"padding_after_icon", "visible", 0.0);
               }
               set_state(PART:"elm.text", "visible", 0.0);
            }
         }
         program { name: "text_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (!strcmp(st, "visible"))
               {
                  set_state(PART:"elm.swallow.content", "icononly", 0.0);
                  set_state(PART:"icon_rect", "icononly", 0.0);
                  set_state(PART:"padding_after_icon", "icononly", 0.0);
               }
               set_state(PART:"elm.text", "default", 0.0);
            }
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
               {
                  set_state(PART:"elm.swallow.content", "visible", 0.0);
                  set_state(PART:"icon_rect", "visible", 0.0);
                  set_state(PART:"padding_after_icon", "visible", 0.0);
               }
               else
               {
                  set_state(PART:"elm.swallow.content", "icononly", 0.0);
                  set_state(PART:"icon_rect", "icononly", 0.0);
                  set_state(PART:"padding_after_icon", "icononly", 0.0);
               }
            }
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "button_image";
            target: "over2";
            target: "disabler";
            after: "disable_text";
         }
         program { name: "disable_text";
            script {
               set_int(button_state, BUTTON_STATE_DISABLED);
               set_state(PART:"elm.text", "visible", 0.0);
            }
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            target: "over2";
            target: "disabler";
            after: "enable_text";
         }
         program { name: "enable_text";
            script {
               set_int(button_state, BUTTON_STATE_ENABLED);
               set_state(PART:"elm.text", "visible", 0.0);
            }
         }
         program { name: "focused";
            action: STATE_SET "focused" 0.0;
            target: "button_image";
            target: "elm.text";
         }
         program { name: "unfocused";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            after: "unfocus_text";
         }
         program { name: "unfocus_text";
            action: STATE_SET "visible" 0.0;
            target: "elm.text";
         }
      }
   }

   group { name: "elm/button/base/vcui_naviframe_backbutton/default";
       //TODO: Remove this alias later
       alias: "elm/button/base/vcui_naviframe_backbutton/default";
       images {
         image: "vc_control_btn_prev.png" COMP;
      }
      parts {
         part { name: "button_image";
            type: RECT;
            mouse_events: 1;
            scale: 1;
            description { state: "default" 0.0;
               min: 106 40;
               color: 0 0 0 0;
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
         }
         part {name: "padding_right";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 1 0;
               min: 1 0;
               rel1 { relative: 1 0.2; }
               rel2 { relative: 1 0.8; }
               fixed: 1 0;
               color: VC_NAVIFRAME_TITLE_RIGHT_SEPARATOR_COLOR_INC;
            }
         }
         part {name: "padding_before_right";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 1 0;
               min: 1 0;
               rel1 { relative: 0 0; to: "padding_right"; }
               rel2 { relative: 0 1; to: "padding_right"; }
               fixed: 1 0;
               color: VC_NAVIFRAME_TITLE_LEFT_SEPARATOR_COLOR_INC;
            }
         }
         part { name: "button_center_part";
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 36 32;
               max: 36 32;
               align: 0.5 0.5;
               rel2 { relative: 0 1; to_x: "padding_before_right"; }
               image {
                  normal: "vc_control_btn_prev.png";
               }
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
            }
         }
         part { name: "over1";
            type: RECT;
            mouse_events: 1;
            repeat_events: 1;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "over2";
            mouse_events: 1;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_click";
            signal: "mouse,down,1";
            source: "over1";
            action: SIGNAL_EMIT "elm,action,press" "";
            after: "button_click_anim";
         }
         program { name: "button_click_anim";
            action: STATE_SET "clicked" 0.0;
            target: "button_image";
            target: "button_center_part";
         }
         program { name: "button_unclick";
            signal: "mouse,up,1";
            source: "over2";
            action: SIGNAL_EMIT "elm,action,unpress" "";
            after: "button_unclick_anim";
         }
         program { name: "button_unclick_anim";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            target: "button_center_part";
         }
         program { name: "button_unclick2";
            signal: "mouse,clicked,1";
            source: "over1";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "disabler";
            target: "button_image";
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "disabler";
            target: "button_image";
         }
      }
   }

   group { name: "elm/button/base/vcui_naviframe_new_backbutton/default";
       //TODO: Remove this alias later
       alias: "elm/button/base/vcui_naviframe_new_backbutton/default";
       images {
         image: "vc_control_btn_new_prev.png" COMP;
      }
      parts {
         part { name: "button_image";
            type: RECT;
            mouse_events: 1;
            scale: 1;
            description { state: "default" 0.0;
               min: 100 114;
               color: 0 0 0 0;
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
         }
         part {name: "padding_right";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 1 0;
               min: 1 0;
               rel1 { relative: 1 0.2; }
               rel2 { relative: 1 0.8; }
               fixed: 1 0;
               color: VC_NAVIFRAME_TITLE_RIGHT_SEPARATOR_COLOR_INC;
            }
         }
         part {name: "padding_before_right";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 1 0;
               min: 1 0;
               rel1 { relative: 0 0; to: "padding_right"; }
               rel2 { relative: 0 1; to: "padding_right"; }
               fixed: 1 0;
               color: VC_NAVIFRAME_TITLE_LEFT_SEPARATOR_COLOR_INC;
            }
         }
         part { name: "button_center_part";
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: VC_NAVIFRAME_NEW_ICON_SIZE_INC;
               max: VC_NAVIFRAME_NEW_ICON_SIZE_INC;
               align: 0.5 0.5;
               rel2 { relative: 0 1; to_x: "padding_before_right"; }
               image {
                  normal: "vc_control_btn_new_prev.png";
               }
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
            }
         }
         part { name: "over1";
            type: RECT;
            mouse_events: 1;
            repeat_events: 1;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "over2";
            mouse_events: 1;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_click";
            signal: "mouse,down,1";
            source: "over1";
            action: SIGNAL_EMIT "elm,action,press" "";
            after: "button_click_anim";
         }
         program { name: "button_click_anim";
            action: STATE_SET "clicked" 0.0;
            target: "button_image";
            target: "button_center_part";
         }
         program { name: "button_unclick";
            signal: "mouse,up,1";
            source: "over2";
            action: SIGNAL_EMIT "elm,action,unpress" "";
            after: "button_unclick_anim";
         }
         program { name: "button_unclick_anim";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            target: "button_center_part";
         }
         program { name: "button_unclick2";
            signal: "mouse,clicked,1";
            source: "over1";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "disabler";
            target: "button_image";
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "disabler";
            target: "button_image";
         }
      }
   }

///////////////////////////////////////////////////////////////////////////////////////
   group { name: "elm/button/base/style_call_lscape_join";
      images {
			image: "vc_six_btn_layout_normal.png" COMP;
			image: "vc_six_btn_layout_press.png" COMP;
      }
      script {
         public button_state = BUTTON_STATE_ENABLED;
      }
      parts {
         part { name: "button_image";
            mouse_events: 1;
            scale: 1;
            description { state: "default" 0.0;
               min: 20 46;
               image {
                  normal: "vc_six_btn_layout_normal.png";
                  border: 9 9 0 0;
                  border_scale: 1;
               }
            }
            description { state: "clicked" 0.0;
               inherit: "default" 0.0;
               image.normal: "vc_six_btn_layout_press.png";
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
            }
         }
         part {
            name: "padding_left_top";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.relative: 0.0 0.0;
               rel2.relative: 0.0 0.0;
               min: 10 5;
               fixed: 1 1;
               visible: 0;
            }
         }
         part {
            name: "padding_right_bottom";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 1.0 1.0;
               rel1.relative: 1.0 1.0;
               rel2.relative: 1.0 1.0;
               min: 10 5;
               fixed: 1 1;
               visible: 0;
            }
         }
         part {
            name: "icon_rect";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 1;
               min: 0 0;
               fixed: 1 0;
               rel1 { relative: 1.0 1.0; to: "padding_left_top"; }
               rel2 { relative: 1.0 0.0; to_x: "padding_left_top"; to_y: "padding_right_bottom"; }
               align: 0.0 0.5;
               color: 0 0 0 0;
            }
            description { state: "visible" 0.0;
               visible: 1;
               min: 26 28;
               max: 26 28;
               fixed: 1 0;
               rel1 { relative: 1.0 1.0; to: "padding_left_top"; }
               rel2 { relative: 1.0 0.0; to_x: "padding_left_top"; to_y: "padding_right_bottom"; }
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               align: 0.0 0.5;
               color: 0 0 0 0;
            }
            description { state: "icononly" 0.0;
               inherit: "default" 0.0;
            }
         }
         part {
            name: "padding_after_icon";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0; //when only icon or no icon is there
               align: 0.0 0.0;
               rel1 { relative: 1.0 0.0; to: "icon_rect"; }
               rel2 { relative: 1.0 1.0; to: "icon_rect"; }
               fixed: 1 0;
               min: 0 0;
               color: 0 255 0 100;
            }
            description { state: "visible" 0.0;
               visible: 1;
               align: 0.0 0.0;
               rel1 { relative: 1.0 0.0; to: "icon_rect"; }
               rel2 { relative: 1.0 1.0; to: "icon_rect"; }
               fixed: 1 0;
               min: 10 0;
               color: 0 0 0 0;
            }
            description { state: "icononly" 0.0;
               inherit: "default" 0.0;
            }
         }
         part {
            name: "padding_before_text";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0; //when only icon or no icon is there
               align: 1.0 0.5;
               rel1 { relative: 0.0 1.0; to_x: "elm.text"; to_y: "padding_left_top"; }
               rel2 { relative: 0.0 0.0; to_x: "elm.text"; to_y: "padding_right_bottom"; }
               fixed: 1 0;
               min: 10 0;
               color: 0 0 0 0;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.0 0.5;
               rel1 { relative: 1.0 1.0; to: "padding_left_top"; }
               rel2 { relative: 1.0 0.0; to_x: "padding_left_top"; to_y: "padding_right_bottom"; }
               fixed: 1 0;
            }
            description { state: "visible" 0.0;
               fixed: 1 0;
               visible: 1;
               min: 26 28;
               max: 26 28;
               align: 1.0 0.5;
               rel1 { relative: 0.0 1.0; to_x: "padding_before_text"; to_y: "padding_left_top"; }
               rel2 { relative: 0.0 0.0; to_x: "padding_before_text"; to_y: "padding_right_bottom"; }
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
            }
            description { state: "icononly" 0.0;
               visible: 1;
               min: 26 28;
               max: 26 28;
               rel1 { relative: 1.0 1.0; to: "padding_left_top"; }
               rel2 { relative: 1.0 0.0; to_x: "padding_left_top"; to_y: "padding_right_bottom"; }
               align: 0.5 0.5;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
            }
         }
         part { name: "elm.text";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               rel1 { relative: 1.0 1.0; to_x: "padding_after_icon"; to_y: "padding_left_top"; }
               rel2 { relative: 0.0 0.0; to: "padding_right_bottom"; }
               align: 0.5 0.5;
               text {
                  font: "SLP:style=Medium";
                  size: 32;
                  min: 0 0;
                  align: 0.5 0.5;
                  max: 1 0;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: 90 28;
            }
            description { state: "clicked" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: 0 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 0 0 0 128;
            }
            description { state: "disabled_visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: 90 28;
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: 0 0;
            }
         }
         part { name: "over2";
            type: RECT;
            mouse_events: 1;
            repeat_events: 1;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "over3";
            type: RECT;
            mouse_events: 1;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_click";
            signal: "mouse,down,1";
            source: "over2";
            action: SIGNAL_EMIT "elm,action,press" "";
            after: "button_click_anim";
         }
         program { name: "button_click_anim";
            action: STATE_SET "clicked" 0.0;
            target: "button_image";
            after: "text_clicked";
         }
         program { name: "text_clicked";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
                  set_state(PART:"elm.text", "clicked", 0.0);
            }
         }
         program { name: "button_unpress";
            action: SIGNAL_EMIT "elm,action,unpress" "";
         }
         program { name: "button_mouseout_clicked";
            signal: "mouse,up,1";
            source: "over3";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (strcmp(st, "icononly"))
                 {
                    emit("elm,action,default,text,set", "");
                    set_state(PART:"elm.text", "visible", 0.0);
                 }
               if(get_int(button_state) != BUTTON_STATE_DISABLED)
                  set_state(PART:"button_image", "default", 0.0);
            }
            after: button_unpress;
         }
         program { name: "button_unclick3";
            signal: "mouse,clicked,1";
            source: "over2";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "text_show";
            signal: "elm,state,text,visible";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (!strcmp(st, "icononly"))
               {
                  set_state(PART:"elm.swallow.content", "visible", 0.0);
                  set_state(PART:"icon_rect", "visible", 0.0);
                  set_state(PART:"padding_after_icon", "visible", 0.0);
               }
               if(get_int(button_state) != BUTTON_STATE_DISABLED)
                 set_state(PART:"elm.text", "visible", 0.0);
               else
                 set_state(PART:"elm.text", "disabled_visible", 0.0);
            }
         }
         program { name: "text_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (!strcmp(st, "visible"))
               {
                  set_state(PART:"elm.swallow.content", "icononly", 0.0);
                  set_state(PART:"icon_rect", "icononly", 0.0);
                  set_state(PART:"padding_after_icon", "icononly", 0.0);
               }
               set_state(PART:"elm.text", "default", 0.0);
            }
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
               {
                  set_state(PART:"elm.swallow.content", "visible", 0.0);
                  set_state(PART:"icon_rect", "visible", 0.0);
                  set_state(PART:"padding_after_icon", "visible", 0.0);
               }
               else
               {
                  set_state(PART:"elm.swallow.content", "icononly", 0.0);
                  set_state(PART:"icon_rect", "icononly", 0.0);
                  set_state(PART:"padding_after_icon", "icononly", 0.0);
               }
            }
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "button_image";
            target: "disabler";
            after: "disable_text";
         }
         program { name: "disable_text";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
                  set_state(PART:"elm.text", "disabled_visible", 0.0);
               else
                  set_state(PART:"elm.text", "disabled", 0.0);
               set_int(button_state, BUTTON_STATE_DISABLED);
            }
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            target: "disabler";
            after: "enable_text";
         }
         program { name: "enable_text";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "disabled_visible"))
                  set_state(PART:"elm.text", "visible", 0.0);
               else
                  set_state(PART:"elm.text", "default", 0.0);
               set_int(button_state, BUTTON_STATE_ENABLED);
            }
         }
         program { name: "focused";
            action: STATE_SET "focused" 0.0;
            target: "button_image";
            target: "elm.text";
         }
         program { name: "unfocused";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            after: "unfocus_text";
         }
         program { name: "unfocus_text";
            action: STATE_SET "visible" 0.0;
            target: "elm.text";
         }
      }
   }

///////////////////////////////////////////////////////////////////////////////////////
   group { name: "elm/button/base/style_call_lscape_join_disabled";
      images {
			image: "vc_six_btn_layout_normal.png" COMP;
      }
      script {
         public button_state = BUTTON_STATE_ENABLED;
      }
      parts {
         part { name: "button_image";
            mouse_events: 1;
            scale: 1;
            description { state: "default" 0.0;
               min: 20 46;
               image {
                  normal: "vc_six_btn_layout_normal.png";
                  border: 9 9 0 0;
                  border_scale: 1;
               }
				color: 255 255 255 102;
            }
            description { state: "clicked" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
            }
         }
         part {
            name: "padding_left_top";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.relative: 0.0 0.0;
               rel2.relative: 0.0 0.0;
               min: 10 5;
               fixed: 1 1;
               visible: 0;
            }
         }
         part {
            name: "padding_right_bottom";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 1.0 1.0;
               rel1.relative: 1.0 1.0;
               rel2.relative: 1.0 1.0;
               min: 10 5;
               fixed: 1 1;
               visible: 0;
            }
         }
         part {
            name: "icon_rect";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 1;
               min: 0 0;
               fixed: 1 0;
               rel1 { relative: 1.0 1.0; to: "padding_left_top"; }
               rel2 { relative: 1.0 0.0; to_x: "padding_left_top"; to_y: "padding_right_bottom"; }
               align: 0.0 0.5;
               color: 0 0 0 0;
            }
            description { state: "visible" 0.0;
               visible: 1;
               min: 26 28;
               max: 26 28;
               fixed: 1 0;
               rel1 { relative: 1.0 1.0; to: "padding_left_top"; }
               rel2 { relative: 1.0 0.0; to_x: "padding_left_top"; to_y: "padding_right_bottom"; }
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               align: 0.0 0.5;
               color: 0 0 0 0;
            }
            description { state: "icononly" 0.0;
               inherit: "default" 0.0;
            }
         }
         part {
            name: "padding_after_icon";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1 { relative: 1.0 0.0; to: "icon_rect"; }
               rel2 { relative: 1.0 1.0; to: "icon_rect"; }
               fixed: 1 0;
               min: 0 0;
               color: 0 255 0 100;
            }
            description { state: "visible" 0.0;
               visible: 1;
               align: 0.0 0.0;
               rel1 { relative: 1.0 0.0; to: "icon_rect"; }
               rel2 { relative: 1.0 1.0; to: "icon_rect"; }
               fixed: 1 0;
               min: 10 0;
               color: 0 0 0 0;
            }
            description { state: "icononly" 0.0;
               inherit: "default" 0.0;
            }
         }
         part {
            name: "padding_before_text";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 1.0; to_x: "elm.text"; to_y: "padding_left_top"; }
               rel2 { relative: 0.0 0.0; to_x: "elm.text"; to_y: "padding_right_bottom"; }
               fixed: 1 0;
               min: 10 0;
               color: 0 0 0 0;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.0 0.5;
               rel1 { relative: 1.0 1.0; to: "padding_left_top"; }
               rel2 { relative: 1.0 0.0; to_x: "padding_left_top"; to_y: "padding_right_bottom"; }
               fixed: 1 0;
            }
            description { state: "visible" 0.0;
               fixed: 1 0;
               visible: 1;
               min: 26 28;
               max: 26 28;
               align: 1.0 0.5;
               rel1 { relative: 0.0 1.0; to_x: "padding_before_text"; to_y: "padding_left_top"; }
               rel2 { relative: 0.0 0.0; to_x: "padding_before_text"; to_y: "padding_right_bottom"; }
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
            }
            description { state: "icononly" 0.0;
               visible: 1;
               min: 26 28;
               max: 26 28;
               rel1 { relative: 1.0 1.0; to: "padding_left_top"; }
               rel2 { relative: 1.0 0.0; to_x: "padding_left_top"; to_y: "padding_right_bottom"; }
               align: 0.5 0.5;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
            }
         }
         part { name: "elm.text";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               rel1 { relative: 1.0 1.0; to_x: "padding_after_icon"; to_y: "padding_left_top"; }
               rel2 { relative: 0.0 0.0; to: "padding_right_bottom"; }
               align: 0.5 0.5;
				color: 255 255 255 51;	/*20%*/
               text {
                  font: "SLP:style=Medium";
                  size: 32;
                  min: 0 0;
                  align: 0.5 0.5;
                  max: 1 0;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: 90 28;
            }
            description { state: "clicked" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: 0 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 0 0 0 128;
            }
            description { state: "disabled_visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: 90 28;
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: 0 0;
            }
         }
         part { name: "over2";
            type: RECT;
            mouse_events: 1;
            repeat_events: 1;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "over3";
            type: RECT;
            mouse_events: 1;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_click";
            signal: "mouse,down,1";
            source: "over2";
            action: SIGNAL_EMIT "elm,action,press" "";
            after: "button_click_anim";
         }
         program { name: "button_click_anim";
            action: STATE_SET "clicked" 0.0;
            target: "button_image";
            after: "text_clicked";
         }
         program { name: "text_clicked";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
                  set_state(PART:"elm.text", "clicked", 0.0);
            }
         }
         program { name: "button_unpress";
            action: SIGNAL_EMIT "elm,action,unpress" "";
         }
         program { name: "button_mouseout_clicked";
            signal: "mouse,up,1";
            source: "over3";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (strcmp(st, "icononly"))
                 {
                    emit("elm,action,default,text,set", "");
                    set_state(PART:"elm.text", "visible", 0.0);
                 }
               if(get_int(button_state) != BUTTON_STATE_DISABLED)
                  set_state(PART:"button_image", "default", 0.0);
            }
            after: button_unpress;
         }
         program { name: "button_unclick3";
            signal: "mouse,clicked,1";
            source: "over2";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "text_show";
            signal: "elm,state,text,visible";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (!strcmp(st, "icononly"))
               {
                  set_state(PART:"elm.swallow.content", "visible", 0.0);
                  set_state(PART:"icon_rect", "visible", 0.0);
                  set_state(PART:"padding_after_icon", "visible", 0.0);
               }
               if(get_int(button_state) != BUTTON_STATE_DISABLED)
                 set_state(PART:"elm.text", "visible", 0.0);
               else
                 set_state(PART:"elm.text", "disabled_visible", 0.0);
            }
         }
         program { name: "text_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (!strcmp(st, "visible"))
               {
                  set_state(PART:"elm.swallow.content", "icononly", 0.0);
                  set_state(PART:"icon_rect", "icononly", 0.0);
                  set_state(PART:"padding_after_icon", "icononly", 0.0);
               }
               set_state(PART:"elm.text", "default", 0.0);
            }
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
               {
                  set_state(PART:"elm.swallow.content", "visible", 0.0);
                  set_state(PART:"icon_rect", "visible", 0.0);
                  set_state(PART:"padding_after_icon", "visible", 0.0);
               }
               else
               {
                  set_state(PART:"elm.swallow.content", "icononly", 0.0);
                  set_state(PART:"icon_rect", "icononly", 0.0);
                  set_state(PART:"padding_after_icon", "icononly", 0.0);
               }
            }
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "button_image";
            target: "disabler";
            after: "disable_text";
         }
         program { name: "disable_text";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
                  set_state(PART:"elm.text", "disabled_visible", 0.0);
               else
                  set_state(PART:"elm.text", "disabled", 0.0);
               set_int(button_state, BUTTON_STATE_DISABLED);
            }
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            target: "disabler";
            after: "enable_text";
         }
         program { name: "enable_text";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "disabled_visible"))
                  set_state(PART:"elm.text", "visible", 0.0);
               else
                  set_state(PART:"elm.text", "default", 0.0);
               set_int(button_state, BUTTON_STATE_ENABLED);
            }
         }
         program { name: "focused";
            action: STATE_SET "focused" 0.0;
            target: "button_image";
            target: "elm.text";
         }
         program { name: "unfocused";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            after: "unfocus_text";
         }
         program { name: "unfocus_text";
            action: STATE_SET "visible" 0.0;
            target: "elm.text";
         }
      }
   }

///////////////////////////////////////////////////////////////////////////////////////
   group { name: "elm/button/base/style_call_lscape_endcall_red";
      images {
			image: "vc_button_red_normal.png" COMP;
			image: "vc_button_press.png" COMP;
      }
      script {
         public button_state = BUTTON_STATE_ENABLED;
      }
      parts {
         part { name: "button_image";
            mouse_events: 1;
            scale: 1;
            description { state: "default" 0.0;
               min: 20 46;
               image {
                  normal: "vc_button_red_normal.png";
                  border: 16 16 0 0;
                  border_scale: 1;
               }
            }
            description { state: "clicked" 0.0;
               inherit: "default" 0.0;
               image.normal: "vc_button_press.png";
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               image.normal: "vc_button_press.png";
            }
         }
         part {
            name: "padding_left_top";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.relative: 0.0 0.0;
               rel2.relative: 0.0 0.0;
               min: 10 5;
               fixed: 1 1;
               visible: 0;
            }
         }
         part {
            name: "padding_right_bottom";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 1.0 1.0;
               rel1.relative: 1.0 1.0;
               rel2.relative: 1.0 1.0;
               min: 10 5;
               fixed: 1 1;
               visible: 0;
            }
         }
         part {
            name: "icon_rect";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 1;
               min: 0 0;
               fixed: 1 0;
               rel1 { relative: 1.0 1.0; to: "padding_left_top"; }
               rel2 { relative: 1.0 0.0; to_x: "padding_left_top"; to_y: "padding_right_bottom"; }
               align: 0.0 0.5;
               color: 0 0 0 0;
            }
            description { state: "visible" 0.0;
               visible: 1;
               min: 40 40;
               max: 40 40;
               fixed: 1 0;
               rel1 { relative: 1.0 1.0; to: "padding_left_top"; }
               rel2 { relative: 1.0 0.0; to_x: "padding_left_top"; to_y: "padding_right_bottom"; }
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               align: 0.0 0.5;
               color: 0 0 0 0;
            }
            description { state: "icononly" 0.0;
               inherit: "default" 0.0;
            }
         }
         part {
            name: "padding_after_icon";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1 { relative: 1.0 0.0; to: "icon_rect"; }
               rel2 { relative: 1.0 1.0; to: "icon_rect"; }
               fixed: 1 0;
               min: 0 0;
               color: 0 255 0 100;
            }
            description { state: "visible" 0.0;
               visible: 1;
               align: 0.0 0.0;
               rel1 { relative: 1.0 0.0; to: "icon_rect"; }
               rel2 { relative: 1.0 1.0; to: "icon_rect"; }
               fixed: 1 0;
               min: 10 0;
               color: 0 0 0 0;
            }
            description { state: "icononly" 0.0;
               inherit: "default" 0.0;
            }
         }
         part {
            name: "padding_before_text";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 1.0; to_x: "elm.text"; to_y: "padding_left_top"; }
               rel2 { relative: 0.0 0.0; to_x: "elm.text"; to_y: "padding_right_bottom"; }
               fixed: 1 0;
               min: 10 0;
               color: 0 0 0 0;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.0 0.5;
               rel1 { relative: 1.0 1.0; to: "padding_left_top"; }
               rel2 { relative: 1.0 0.0; to_x: "padding_left_top"; to_y: "padding_right_bottom"; }
               fixed: 1 0;
            }
            description { state: "visible" 0.0;
               fixed: 1 0;
               visible: 1;
               min: 40 40;
               max: 40 40;
               align: 1.0 0.5;
               rel1 { relative: 0.0 1.0; to_x: "padding_before_text"; to_y: "padding_left_top"; }
               rel2 { relative: 0.0 0.0; to_x: "padding_before_text"; to_y: "padding_right_bottom"; }
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
            }
            description { state: "icononly" 0.0;
               visible: 1;
               min: 40 40;
               max: 40 40;
               rel1 { relative: 1.0 1.0; to: "padding_left_top"; }
               rel2 { relative: 1.0 0.0; to_x: "padding_left_top"; to_y: "padding_right_bottom"; }
               align: 0.5 0.5;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
            }
         }
         part { name: "elm.text";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               rel1 { relative: 1.0 1.0; to_x: "padding_after_icon"; to_y: "padding_left_top"; }
               rel2 { relative: 0.0 0.0; to: "padding_right_bottom"; }
               align: 0.5 0.5;
               text {
                  font: "SLP:style=Medium";
                  size: 32;
                  min: 0 0;
                  align: 0.5 0.5;
                  max: 1 0;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: 90 40;
            }
            description { state: "clicked" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: 0 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
				color: 255 255 255 51;	/*20%*/
            }
            description { state: "disabled_visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: 90 40;
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: 0 0;
            }
         }
         part { name: "over2";
            type: RECT;
            mouse_events: 1;
            repeat_events: 1;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "over3";
            type: RECT;
            mouse_events: 1;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_click";
            signal: "mouse,down,1";
            source: "over2";
            action: SIGNAL_EMIT "elm,action,press" "";
            after: "button_click_anim";
         }
         program { name: "button_click_anim";
            action: STATE_SET "clicked" 0.0;
            target: "button_image";
            after: "text_clicked";
         }
         program { name: "text_clicked";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
                  set_state(PART:"elm.text", "clicked", 0.0);
            }
         }
         program { name: "button_unpress";
            action: SIGNAL_EMIT "elm,action,unpress" "";
         }
         program { name: "button_mouseout_clicked";
            signal: "mouse,up,1";
            source: "over3";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (strcmp(st, "icononly"))
                 {
                    emit("elm,action,default,text,set", "");
                    set_state(PART:"elm.text", "visible", 0.0);
                 }
               if(get_int(button_state) != BUTTON_STATE_DISABLED)
                  set_state(PART:"button_image", "default", 0.0);
            }
            after: button_unpress;
         }
         program { name: "button_unclick3";
            signal: "mouse,clicked,1";
            source: "over2";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "text_show";
            signal: "elm,state,text,visible";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (!strcmp(st, "icononly"))
               {
                  set_state(PART:"elm.swallow.content", "visible", 0.0);
                  set_state(PART:"icon_rect", "visible", 0.0);
                  set_state(PART:"padding_after_icon", "visible", 0.0);
               }
               if(get_int(button_state) != BUTTON_STATE_DISABLED)
                 set_state(PART:"elm.text", "visible", 0.0);
               else
                 set_state(PART:"elm.text", "disabled_visible", 0.0);
            }
         }
         program { name: "text_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (!strcmp(st, "visible"))
               {
                  set_state(PART:"elm.swallow.content", "icononly", 0.0);
                  set_state(PART:"icon_rect", "icononly", 0.0);
                  set_state(PART:"padding_after_icon", "icononly", 0.0);
               }
               set_state(PART:"elm.text", "default", 0.0);
            }
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
               {
                  set_state(PART:"elm.swallow.content", "visible", 0.0);
                  set_state(PART:"icon_rect", "visible", 0.0);
                  set_state(PART:"padding_after_icon", "visible", 0.0);
               }
               else
               {
                  set_state(PART:"elm.swallow.content", "icononly", 0.0);
                  set_state(PART:"icon_rect", "icononly", 0.0);
                  set_state(PART:"padding_after_icon", "icononly", 0.0);
               }
            }
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "button_image";
            target: "disabler";
            after: "disable_text";
         }
         program { name: "disable_text";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
                  set_state(PART:"elm.text", "disabled_visible", 0.0);
               else
                  set_state(PART:"elm.text", "disabled", 0.0);
               set_int(button_state, BUTTON_STATE_DISABLED);
            }
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            target: "disabler";
            after: "enable_text";
         }
         program { name: "enable_text";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "disabled_visible"))
                  set_state(PART:"elm.text", "visible", 0.0);
               else
                  set_state(PART:"elm.text", "default", 0.0);
               set_int(button_state, BUTTON_STATE_ENABLED);
            }
         }
         program { name: "focused";
            action: STATE_SET "focused" 0.0;
            target: "button_image";
            target: "elm.text";
         }
         program { name: "unfocused";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            after: "unfocus_text";
         }
         program { name: "unfocus_text";
            action: STATE_SET "visible" 0.0;
            target: "elm.text";
         }
      }
   }

///////////////////////////////////////////////////////////////////////////////////////
   group { name: "elm/button/base/style_call_lscape_endcall_red_disabled";
      images {
			image: "vc_button_red_normal.png" COMP;
      }
      script {
         public button_state = BUTTON_STATE_ENABLED;
      }
      parts {
         part { name: "button_image";
            mouse_events: 1;
            scale: 1;
            description { state: "default" 0.0;
               min: 20 46;
               image {
                  normal: "vc_button_red_normal.png";
                  border: 16 16 0 0;
                  border_scale: 1;
               }
				color: 255 255 255 102;
            }
            description { state: "clicked" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
            }
         }
         part {
            name: "padding_left_top";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.relative: 0.0 0.0;
               rel2.relative: 0.0 0.0;
               min: 10 5;
               fixed: 1 1;
               visible: 0;
            }
         }
         part {
            name: "padding_right_bottom";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 1.0 1.0;
               rel1.relative: 1.0 1.0;
               rel2.relative: 1.0 1.0;
               min: 10 5;
               fixed: 1 1;
               visible: 0;
            }
         }
         part {
            name: "icon_rect";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 1;
               min: 0 0;
               fixed: 1 0;
               rel1 { relative: 1.0 1.0; to: "padding_left_top"; }
               rel2 { relative: 1.0 0.0; to_x: "padding_left_top"; to_y: "padding_right_bottom"; }
               align: 0.0 0.5;
               color: 0 0 0 0;
            }
            description { state: "visible" 0.0;
               visible: 1;
               min: 40 40;
               max: 40 40;
               fixed: 1 0;
               rel1 { relative: 1.0 1.0; to: "padding_left_top"; }
               rel2 { relative: 1.0 0.0; to_x: "padding_left_top"; to_y: "padding_right_bottom"; }
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               align: 0.0 0.5;
               color: 0 0 0 0;
            }
            description { state: "icononly" 0.0;
               inherit: "default" 0.0;
            }
         }
         part {
            name: "padding_after_icon";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1 { relative: 1.0 0.0; to: "icon_rect"; }
               rel2 { relative: 1.0 1.0; to: "icon_rect"; }
               fixed: 1 0;
               min: 0 0;
               color: 0 255 0 100;
            }
            description { state: "visible" 0.0;
               visible: 1;
               align: 0.0 0.0;
               rel1 { relative: 1.0 0.0; to: "icon_rect"; }
               rel2 { relative: 1.0 1.0; to: "icon_rect"; }
               fixed: 1 0;
               min: 10 0;
               color: 0 0 0 0;
            }
            description { state: "icononly" 0.0;
               inherit: "default" 0.0;
            }
         }
         part {
            name: "padding_before_text";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 1.0; to_x: "elm.text"; to_y: "padding_left_top"; }
               rel2 { relative: 0.0 0.0; to_x: "elm.text"; to_y: "padding_right_bottom"; }
               fixed: 1 0;
               min: 10 0;
               color: 0 0 0 0;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.0 0.5;
               rel1 { relative: 1.0 1.0; to: "padding_left_top"; }
               rel2 { relative: 1.0 0.0; to_x: "padding_left_top"; to_y: "padding_right_bottom"; }
               fixed: 1 0;
            }
            description { state: "visible" 0.0;
               fixed: 1 0;
               visible: 1;
               min: 40 40;
               max: 40 40;
               align: 1.0 0.5;
               rel1 { relative: 0.0 1.0; to_x: "padding_before_text"; to_y: "padding_left_top"; }
               rel2 { relative: 0.0 0.0; to_x: "padding_before_text"; to_y: "padding_right_bottom"; }
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
            }
            description { state: "icononly" 0.0;
               visible: 1;
               min: 40 40;
               max: 40 40;
               rel1 { relative: 1.0 1.0; to: "padding_left_top"; }
               rel2 { relative: 1.0 0.0; to_x: "padding_left_top"; to_y: "padding_right_bottom"; }
               align: 0.5 0.5;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
            }
         }
         part { name: "elm.text";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               rel1 { relative: 1.0 1.0; to_x: "padding_after_icon"; to_y: "padding_left_top"; }
               rel2 { relative: 0.0 0.0; to: "padding_right_bottom"; }
               align: 0.5 0.5;
				color: 255 255 255 51;	/*20%*/
               text {
                  font: "SLP:style=Medium";
                  size: 32;
                  min: 0 0;
                  align: 0.5 0.5;
                  max: 1 0;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: 90 40;
            }
            description { state: "clicked" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: 0 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 0 0 0 128;
            }
            description { state: "disabled_visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: 90 40;
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: 0 0;
            }
         }
         part { name: "over2";
            type: RECT;
            mouse_events: 1;
            repeat_events: 1;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "over3";
            type: RECT;
            mouse_events: 1;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_click";
            signal: "mouse,down,1";
            source: "over2";
            action: SIGNAL_EMIT "elm,action,press" "";
            after: "button_click_anim";
         }
         program { name: "button_click_anim";
            action: STATE_SET "clicked" 0.0;
            target: "button_image";
            after: "text_clicked";
         }
         program { name: "text_clicked";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
                  set_state(PART:"elm.text", "clicked", 0.0);
            }
         }
         program { name: "button_unpress";
            action: SIGNAL_EMIT "elm,action,unpress" "";
         }
         program { name: "button_mouseout_clicked";
            signal: "mouse,up,1";
            source: "over3";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (strcmp(st, "icononly"))
                 {
                    emit("elm,action,default,text,set", "");
                    set_state(PART:"elm.text", "visible", 0.0);
                 }
               if(get_int(button_state) != BUTTON_STATE_DISABLED)
                  set_state(PART:"button_image", "default", 0.0);
            }
            after: button_unpress;
         }
         program { name: "button_unclick3";
            signal: "mouse,clicked,1";
            source: "over2";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "text_show";
            signal: "elm,state,text,visible";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (!strcmp(st, "icononly"))
               {
                  set_state(PART:"elm.swallow.content", "visible", 0.0);
                  set_state(PART:"icon_rect", "visible", 0.0);
                  set_state(PART:"padding_after_icon", "visible", 0.0);
               }
               if(get_int(button_state) != BUTTON_STATE_DISABLED)
                 set_state(PART:"elm.text", "visible", 0.0);
               else
                 set_state(PART:"elm.text", "disabled_visible", 0.0);
            }
         }
         program { name: "text_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (!strcmp(st, "visible"))
               {
                  set_state(PART:"elm.swallow.content", "icononly", 0.0);
                  set_state(PART:"icon_rect", "icononly", 0.0);
                  set_state(PART:"padding_after_icon", "icononly", 0.0);
               }
               set_state(PART:"elm.text", "default", 0.0);
            }
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
               {
                  set_state(PART:"elm.swallow.content", "visible", 0.0);
                  set_state(PART:"icon_rect", "visible", 0.0);
                  set_state(PART:"padding_after_icon", "visible", 0.0);
               }
               else
               {
                  set_state(PART:"elm.swallow.content", "icononly", 0.0);
                  set_state(PART:"icon_rect", "icononly", 0.0);
                  set_state(PART:"padding_after_icon", "icononly", 0.0);
               }
            }
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "button_image";
            target: "disabler";
            after: "disable_text";
         }
         program { name: "disable_text";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
                  set_state(PART:"elm.text", "disabled_visible", 0.0);
               else
                  set_state(PART:"elm.text", "disabled", 0.0);
               set_int(button_state, BUTTON_STATE_DISABLED);
            }
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            target: "disabler";
            after: "enable_text";
         }
         program { name: "enable_text";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "disabled_visible"))
                  set_state(PART:"elm.text", "visible", 0.0);
               else
                  set_state(PART:"elm.text", "default", 0.0);
               set_int(button_state, BUTTON_STATE_ENABLED);
            }
         }
         program { name: "focused";
            action: STATE_SET "focused" 0.0;
            target: "button_image";
            target: "elm.text";
         }
         program { name: "unfocused";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            after: "unfocus_text";
         }
         program { name: "unfocus_text";
            action: STATE_SET "visible" 0.0;
            target: "elm.text";
         }
      }
   }

///////////////////////////////////////////////////////////////////////////////////////
   group { name: "elm/button/base/style_call_lscape_split";
      images {
			image: "vc_conference_call_btn_normal.png" COMP;
			image: "vc_conference_call_btn_press.png" COMP;
      }
      script {
         public button_state = BUTTON_STATE_ENABLED;
      }
      parts {
         part { name: "button_image";
            mouse_events: 1;
            scale: 1;
            description { state: "default" 0.0;
               min: 20 46;
               image {
                  normal: "vc_conference_call_btn_normal.png";
                  border: 5 5 0 0;
                  border_scale: 1;
               }
            }
            description { state: "clicked" 0.0;
               inherit: "default" 0.0;
               image.normal: "vc_conference_call_btn_press.png";
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
            }
         }
         part {
            name: "padding_left_top";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.relative: 0.0 0.0;
               rel2.relative: 0.0 0.0;
               min: 10 5;
               fixed: 1 1;
               visible: 0;
            }
         }
         part {
            name: "padding_right_bottom";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 1.0 1.0;
               rel1.relative: 1.0 1.0;
               rel2.relative: 1.0 1.0;
               min: 10 5;
               fixed: 1 1;
               visible: 0;
            }
         }
         part {
            name: "icon_rect";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 1;
               min: 0 0;
               fixed: 1 0;
               rel1 { relative: 1.0 1.0; to: "padding_left_top"; }
               rel2 { relative: 1.0 0.0; to_x: "padding_left_top"; to_y: "padding_right_bottom"; }
               align: 0.0 0.5;
               color: 0 0 0 0;
            }
            description { state: "visible" 0.0;
               visible: 1;
               min: 52 35;
               max: 52 35;
               fixed: 1 0;
               rel1 { relative: 1.0 1.0; to: "padding_left_top"; }
               rel2 { relative: 1.0 0.0; to_x: "padding_left_top"; to_y: "padding_right_bottom"; }
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               align: 0.0 0.5;
               color: 0 0 0 0;
            }
            description { state: "icononly" 0.0;
               inherit: "default" 0.0;
            }
         }
         part {
            name: "padding_after_icon";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1 { relative: 1.0 0.0; to: "icon_rect"; }
               rel2 { relative: 1.0 1.0; to: "icon_rect"; }
               fixed: 1 0;
               min: 0 0;
               color: 0 255 0 100;
            }
            description { state: "visible" 0.0;
               visible: 1;
               align: 0.0 0.0;
               rel1 { relative: 1.0 0.0; to: "icon_rect"; }
               rel2 { relative: 1.0 1.0; to: "icon_rect"; }
               fixed: 1 0;
               min: 10 0;
               color: 0 0 0 0;
            }
            description { state: "icononly" 0.0;
               inherit: "default" 0.0;
            }
         }
         part {
            name: "padding_before_text";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 1.0; to_x: "elm.text"; to_y: "padding_left_top"; }
               rel2 { relative: 0.0 0.0; to_x: "elm.text"; to_y: "padding_right_bottom"; }
               fixed: 1 0;
               min: 10 0;
               color: 0 0 0 0;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.0 0.5;
               rel1 { relative: 1.0 1.0; to: "padding_left_top"; }
               rel2 { relative: 1.0 0.0; to_x: "padding_left_top"; to_y: "padding_right_bottom"; }
               fixed: 1 0;
            }
            description { state: "visible" 0.0;
               fixed: 1 0;
               visible: 1;
               min: 52 35;
               max: 52 35;
               align: 1.0 0.5;
               rel1 { relative: 0.0 1.0; to_x: "padding_before_text"; to_y: "padding_left_top"; }
               rel2 { relative: 0.0 0.0; to_x: "padding_before_text"; to_y: "padding_right_bottom"; }
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
            }
            description { state: "icononly" 0.0;
               visible: 1;
               min: 52 35;
               max: 52 35;
               rel1 { relative: 1.0 1.0; to: "padding_left_top"; }
               rel2 { relative: 1.0 0.0; to_x: "padding_left_top"; to_y: "padding_right_bottom"; }
               align: 0.5 0.5;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
            }
         }
         part { name: "elm.text";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               rel1 { relative: 1.0 1.0; to_x: "padding_after_icon"; to_y: "padding_left_top"; }
               rel2 { relative: 0.0 0.0; to: "padding_right_bottom"; }
               align: 0.5 0.5;
               text {
                  font: "SLP:style=Medium";
                  size: 32;
                  min: 0 0;
                  align: 0.5 0.5;
                  max: 1 0;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: 90 35;
            }
            description { state: "clicked" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: 0 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 0 0 0 128;
            }
            description { state: "disabled_visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: 90 35;
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: 0 0;
            }
         }
         part { name: "over2";
            type: RECT;
            mouse_events: 1;
            repeat_events: 1;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "over3";
            type: RECT;
            mouse_events: 1;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_click";
            signal: "mouse,down,1";
            source: "over2";
            action: SIGNAL_EMIT "elm,action,press" "";
            after: "button_click_anim";
         }
         program { name: "button_click_anim";
            action: STATE_SET "clicked" 0.0;
            target: "button_image";
            after: "text_clicked";
         }
         program { name: "text_clicked";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
                  set_state(PART:"elm.text", "clicked", 0.0);
            }
         }
         program { name: "button_unpress";
            action: SIGNAL_EMIT "elm,action,unpress" "";
         }
         program { name: "button_mouseout_clicked";
            signal: "mouse,up,1";
            source: "over3";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (strcmp(st, "icononly"))
                 {
                    emit("elm,action,default,text,set", "");
                    set_state(PART:"elm.text", "visible", 0.0);
                 }
               if(get_int(button_state) != BUTTON_STATE_DISABLED)
                  set_state(PART:"button_image", "default", 0.0);
            }
            after: button_unpress;
         }
         program { name: "button_unclick3";
            signal: "mouse,clicked,1";
            source: "over2";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "text_show";
            signal: "elm,state,text,visible";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (!strcmp(st, "icononly"))
               {
                  set_state(PART:"elm.swallow.content", "visible", 0.0);
                  set_state(PART:"icon_rect", "visible", 0.0);
                  set_state(PART:"padding_after_icon", "visible", 0.0);
               }
               if(get_int(button_state) != BUTTON_STATE_DISABLED)
                 set_state(PART:"elm.text", "visible", 0.0);
               else
                 set_state(PART:"elm.text", "disabled_visible", 0.0);
            }
         }
         program { name: "text_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (!strcmp(st, "visible"))
               {
                  set_state(PART:"elm.swallow.content", "icononly", 0.0);
                  set_state(PART:"icon_rect", "icononly", 0.0);
                  set_state(PART:"padding_after_icon", "icononly", 0.0);
               }
               set_state(PART:"elm.text", "default", 0.0);
            }
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
               {
                  set_state(PART:"elm.swallow.content", "visible", 0.0);
                  set_state(PART:"icon_rect", "visible", 0.0);
                  set_state(PART:"padding_after_icon", "visible", 0.0);
               }
               else
               {
                  set_state(PART:"elm.swallow.content", "icononly", 0.0);
                  set_state(PART:"icon_rect", "icononly", 0.0);
                  set_state(PART:"padding_after_icon", "icononly", 0.0);
               }
            }
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "button_image";
            target: "disabler";
            after: "disable_text";
         }
         program { name: "disable_text";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
                  set_state(PART:"elm.text", "disabled_visible", 0.0);
               else
                  set_state(PART:"elm.text", "disabled", 0.0);
               set_int(button_state, BUTTON_STATE_DISABLED);
            }
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            target: "disabler";
            after: "enable_text";
         }
         program { name: "enable_text";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "disabled_visible"))
                  set_state(PART:"elm.text", "visible", 0.0);
               else
                  set_state(PART:"elm.text", "default", 0.0);
               set_int(button_state, BUTTON_STATE_ENABLED);
            }
         }
         program { name: "focused";
            action: STATE_SET "focused" 0.0;
            target: "button_image";
            target: "elm.text";
         }
         program { name: "unfocused";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            after: "unfocus_text";
         }
         program { name: "unfocus_text";
            action: STATE_SET "visible" 0.0;
            target: "elm.text";
         }
      }
   }

     ////////////// elm/button/base/text_only/call_end_grey  //////////////////////////////////////////////
	group { name: "elm/button/base/text_only/style_call_text_only_grey";
		images {
			image: "vc_second_mt_btn_normal.png" COMP;
			image: "vc_button_press.png" COMP;
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				effect: SOFT_SHADOW;
				description { state: "default" 0.0;
					min: 100 50;
					image {
						normal: "vc_second_mt_btn_normal.png";
						border: 16 16 0 0;
						border_scale: 1;
					}
				}
				description { state: "clicked" 0.0;
					min: 100 50;
					image {
						normal: "vc_button_press.png";
						border: 16 16 0 0;
						border_scale: 1;
					}
				}
				description { state: "disabled" 0.0;
					inherit: "clicked" 0.0;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					image.normal: "vc_button_press.png";
				}
			}
			part {	name: "elm.text";
				type: TEXT;
				effect: SHADOW;
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					visible: 0;
					fixed: 1 1;
					align: 0.5 0.5;
					color: 255 255 255 255;
					color2: 0 0 0 102;
					color3: 0 0 0 255;
					text {
						font: FONT_SLP_Medium;
						size: 48;
						min: 0 0;
						align: 0.5 0.5;
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 1 1;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 1 1;
					color: 255 255 255 255;
					color2: 0 0 0 102;
					color3: 0 0 0 255;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description { state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
					visible: 1;
					min: 1 1;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 1 1;
					color: 255 255 255 255;
				}
			}
			part { name: "over1";
				mouse_events: 0;
				description { state: "default" 0.0;
					rel2.relative: 1.0 0.5;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
				}
			}
			part { name: "over2";
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 255 255 255 0;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					color: 255 255 255 0;
				}
			}
			part { name: "disabler";
				type: RECT;
			description { state: "default" 0.0;
				color: 0 0 0 0;
				visible: 0;
			}
			description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "button_unclick";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,unpress" "";
				after: "button_unclick_anim";
			}
			program { name: "button_unclick_anim";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,out";
				source: "over2";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "clicked"))
					{
						set_state(PART:"elm.text", "visible", 0.0);
						set_state(PART:"button_image", "visible", 0.0);
					}
				}
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program { name: "button_unclick2";
				signal: "mouse,up,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				target: "over3";
			}
			program { name: "button_unclick3";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
			program { name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.text";
			}

			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over1";
				target: "over2";
				target: "disabler";
				after: "disable_text";
			}
			program { name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
					set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
					set_state(PART:"elm.text", "disabled", 0.0);
				}
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over1";
				target: "over2";
				target: "disabler";
				after: "enable_text";
			}
			program { name: "enable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "disabled_visible"))
					set_state(PART:"elm.text", "visible", 0.0);
					else
					set_state(PART:"elm.text", "default", 0.0);
				}
			}
			program { name: "focused";
				signal: "elm,action,focus";
				source: "elm";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "unfocused";
				signal: "elm,action,unfocus";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
		}
	}
}
